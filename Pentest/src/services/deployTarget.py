from flask import Flask, jsonify, request
from flask_cors import CORS
import os
import subprocess

app = Flask(__name__)
CORS(app)

# Simular diferentes subdominios
SUBDOMAINS = {
    'www': {'content': 'Sitio web principal'},
    'admin': {'content': 'Panel de administraci√≥n', 'auth': True},
    'api': {'content': 'API endpoint', 'version': '1.0'},
    'dev': {'content': 'Entorno de desarrollo'},
    'test': {'content': 'Servidor de pruebas'},
    'staging': {'content': 'Entorno de staging'},
    'mail': {'content': 'Servidor de correo'},
    'db': {'content': 'Base de datos', 'auth': True},
    'backup': {'content': 'Servidor de respaldo'},
    'internal': {'content': 'Red interna', 'auth': True}
}

@app.route('/', defaults={'path': ''}, methods=['GET'])
@app.route('/<path:path>', methods=['GET'])
def catch_all(path):
    # Obtener el host header
    host = request.headers.get('Host', '')
    subdomain = host.split('.')[0] if '.' in host else 'www'
    
    if subdomain in SUBDOMAINS:
        data = SUBDOMAINS[subdomain]
        if data.get('auth'):
            return jsonify({'error': 'Unauthorized'}), 401
        return jsonify(data)
    
    return jsonify({'error': 'Not Found'}), 404

@app.route('/health')
def health_check():
    return jsonify({
        'status': 'ok',
        'subdomains': list(SUBDOMAINS.keys()),
        'host': request.headers.get('Host', '')
    })

@app.route('/setup', methods=['POST'])
def setup():
    try:
        script = request.get_data().decode('utf-8')
        with open('/tmp/setup.sh', 'w') as f:
            f.write(script)
        os.chmod('/tmp/setup.sh', 0o755)
        subprocess.run(['/tmp/setup.sh'], shell=True)
        return jsonify({'status': 'ok'})
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=80) 