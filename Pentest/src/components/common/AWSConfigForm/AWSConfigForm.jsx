import React, { useState } from 'react';
import { FaKey } from 'react-icons/fa';
import { configureAWS } from '../../../services/aws';
import './AWSConfigForm.css';

const parseAWSCredentials = (input) => {
  try {
    const lines = input.split('\n');
    const credentials = {};
    
    lines.forEach(line => {
      if (line.includes('aws_access_key_id=')) {
        credentials.accessKeyId = line.split('=')[1].trim();
      } else if (line.includes('aws_secret_access_key=')) {
        credentials.secretAccessKey = line.split('=')[1].trim();
      } else if (line.includes('aws_session_token=')) {
        credentials.sessionToken = line.split('=')[1].trim();
      }
    });

    if (credentials.accessKeyId && credentials.secretAccessKey && credentials.sessionToken) {
      return {
        ...credentials,
        region: 'us-west-2' // RegiÃ³n por defecto
      };
    }
    return null;
  } catch (error) {
    console.error('Error parsing AWS credentials:', error);
    return null;
  }
};

const AWSConfigForm = () => {
    const [credentials, setCredentials] = useState({
        accessKeyId: '',
        secretAccessKey: '',
        sessionToken: '',
        region: 'us-west-2'
    });

    const handleCredentialsInput = (e) => {
        const input = e.target.value;
        const parsedCredentials = parseAWSCredentials(input);
        
        if (parsedCredentials) {
            setCredentials(parsedCredentials);
        } else {
            setCredentials({
                ...credentials,
                accessKeyId: input
            });
        }
    };

    const handleConnect = () => {
        if (configureAWS(credentials)) {
            window.location.reload();
        }
    };

    return (
        <div className="tool-container">
            <div className="aws-credentials-form">
                <h2>Configurar Credenciales AWS</h2>
                <div className="form-group">
                    <label>Credenciales AWS (pega el contenido completo):</label>
                    <textarea
                        value={credentials.accessKeyId}
                        onChange={handleCredentialsInput}
                        placeholder="[default]&#10;aws_access_key_id=...&#10;aws_secret_access_key=...&#10;aws_session_token=..."
                        rows={6}
                        className="credentials-input"
                    />
                </div>
                <div className="form-group">
                    <label>Region:</label>
                    <input
                        type="text"
                        value={credentials.region}
                        onChange={(e) => setCredentials({...credentials, region: e.target.value})}
                        placeholder="us-west-2"
                    />
                </div>
                <button className="connect-aws-btn" onClick={handleConnect}>
                    <FaKey /> Conectar a AWS
                </button>
            </div>
        </div>
    );
};

export default AWSConfigForm; 