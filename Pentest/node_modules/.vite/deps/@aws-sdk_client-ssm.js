import {
  AwsSdkSigV4Signer,
  Client,
  Command,
  DEFAULT_MAX_ATTEMPTS,
  DEFAULT_RETRY_MODE,
  DEFAULT_USE_DUALSTACK_ENDPOINT,
  DEFAULT_USE_FIPS_ENDPOINT,
  DefaultIdentityProviderConfig,
  EndpointCache,
  FetchHttpHandler,
  HttpRequest,
  NoOpLogger,
  SENSITIVE_STRING,
  ServiceException,
  Sha256,
  WaiterState,
  _json,
  awsEndpointFunctions,
  awsExpectUnion,
  calculateBodyLength,
  checkExceptions,
  createAggregatedClient,
  createDefaultUserAgentProvider,
  createPaginator,
  createWaiter,
  customEndpointFunctions,
  decorateServiceException,
  expectBoolean,
  expectInt32,
  expectLong,
  expectNonNull,
  expectNumber,
  expectString,
  fromBase64,
  fromUtf8,
  getAwsRegionExtensionConfiguration,
  getContentLengthPlugin,
  getDefaultExtensionConfiguration,
  getEndpointPlugin,
  getHostHeaderPlugin,
  getHttpAuthSchemeEndpointRuleSetPlugin,
  getHttpHandlerExtensionConfiguration,
  getHttpSigningPlugin,
  getLoggerPlugin,
  getRecursionDetectionPlugin,
  getRetryPlugin,
  getSerdePlugin,
  getSmithyContext,
  getUserAgentPlugin,
  invalidProvider,
  loadConfigsForDefaultMode,
  loadRestJsonErrorCode,
  normalizeProvider,
  parseEpochTimestamp,
  parseJsonBody,
  parseJsonErrorBody,
  parseUrl,
  resolveAwsRegionExtensionConfiguration,
  resolveAwsSdkSigV4Config,
  resolveDefaultRuntimeConfig,
  resolveDefaultsModeConfig,
  resolveEndpoint,
  resolveEndpointConfig,
  resolveHostHeaderConfig,
  resolveHttpHandlerRuntimeConfig,
  resolveRegionConfig,
  resolveRetryConfig,
  resolveUserAgentConfig,
  streamCollector,
  take,
  toBase64,
  toUtf8,
  v4_default,
  withBaseException
} from "./chunk-76OIWYIL.js";
import {
  __publicField
} from "./chunk-DC5AMYBS.js";

// node_modules/@aws-sdk/client-ssm/dist-es/auth/httpAuthSchemeProvider.js
var defaultSSMHttpAuthSchemeParametersProvider = async (config, context, input) => {
  return {
    operation: getSmithyContext(context).operation,
    region: await normalizeProvider(config.region)() || (() => {
      throw new Error("expected `region` to be configured for `aws.auth#sigv4`");
    })()
  };
};
function createAwsAuthSigv4HttpAuthOption(authParameters) {
  return {
    schemeId: "aws.auth#sigv4",
    signingProperties: {
      name: "ssm",
      region: authParameters.region
    },
    propertiesExtractor: (config, context) => ({
      signingProperties: {
        config,
        context
      }
    })
  };
}
var defaultSSMHttpAuthSchemeProvider = (authParameters) => {
  const options = [];
  switch (authParameters.operation) {
    default: {
      options.push(createAwsAuthSigv4HttpAuthOption(authParameters));
    }
  }
  return options;
};
var resolveHttpAuthSchemeConfig = (config) => {
  const config_0 = resolveAwsSdkSigV4Config(config);
  return {
    ...config_0
  };
};

// node_modules/@aws-sdk/client-ssm/dist-es/endpoint/EndpointParameters.js
var resolveClientEndpointParameters = (options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "ssm"
  };
};
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// node_modules/@aws-sdk/client-ssm/package.json
var package_default = {
  name: "@aws-sdk/client-ssm",
  description: "AWS SDK for JavaScript Ssm Client for Node.js, Browser and React Native",
  version: "3.731.1",
  scripts: {
    build: "concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'",
    "build:cjs": "node ../../scripts/compilation/inline client-ssm",
    "build:es": "tsc -p tsconfig.es.json",
    "build:include:deps": "lerna run --scope $npm_package_name --include-dependencies build",
    "build:types": "tsc -p tsconfig.types.json",
    "build:types:downlevel": "downlevel-dts dist-types dist-types/ts3.4",
    clean: "rimraf ./dist-* && rimraf *.tsbuildinfo",
    "extract:docs": "api-extractor run --local",
    "generate:client": "node ../../scripts/generate-clients/single-service --solo ssm"
  },
  main: "./dist-cjs/index.js",
  types: "./dist-types/index.d.ts",
  module: "./dist-es/index.js",
  sideEffects: false,
  dependencies: {
    "@aws-crypto/sha256-browser": "5.2.0",
    "@aws-crypto/sha256-js": "5.2.0",
    "@aws-sdk/core": "3.731.0",
    "@aws-sdk/credential-provider-node": "3.731.1",
    "@aws-sdk/middleware-host-header": "3.731.0",
    "@aws-sdk/middleware-logger": "3.731.0",
    "@aws-sdk/middleware-recursion-detection": "3.731.0",
    "@aws-sdk/middleware-user-agent": "3.731.0",
    "@aws-sdk/region-config-resolver": "3.731.0",
    "@aws-sdk/types": "3.731.0",
    "@aws-sdk/util-endpoints": "3.731.0",
    "@aws-sdk/util-user-agent-browser": "3.731.0",
    "@aws-sdk/util-user-agent-node": "3.731.0",
    "@smithy/config-resolver": "^4.0.0",
    "@smithy/core": "^3.0.0",
    "@smithy/fetch-http-handler": "^5.0.0",
    "@smithy/hash-node": "^4.0.0",
    "@smithy/invalid-dependency": "^4.0.0",
    "@smithy/middleware-content-length": "^4.0.0",
    "@smithy/middleware-endpoint": "^4.0.0",
    "@smithy/middleware-retry": "^4.0.0",
    "@smithy/middleware-serde": "^4.0.0",
    "@smithy/middleware-stack": "^4.0.0",
    "@smithy/node-config-provider": "^4.0.0",
    "@smithy/node-http-handler": "^4.0.0",
    "@smithy/protocol-http": "^5.0.0",
    "@smithy/smithy-client": "^4.0.0",
    "@smithy/types": "^4.0.0",
    "@smithy/url-parser": "^4.0.0",
    "@smithy/util-base64": "^4.0.0",
    "@smithy/util-body-length-browser": "^4.0.0",
    "@smithy/util-body-length-node": "^4.0.0",
    "@smithy/util-defaults-mode-browser": "^4.0.0",
    "@smithy/util-defaults-mode-node": "^4.0.0",
    "@smithy/util-endpoints": "^3.0.0",
    "@smithy/util-middleware": "^4.0.0",
    "@smithy/util-retry": "^4.0.0",
    "@smithy/util-utf8": "^4.0.0",
    "@smithy/util-waiter": "^4.0.0",
    "@types/uuid": "^9.0.1",
    tslib: "^2.6.2",
    uuid: "^9.0.1"
  },
  devDependencies: {
    "@tsconfig/node18": "18.2.4",
    "@types/node": "^18.19.69",
    concurrently: "7.0.0",
    "downlevel-dts": "0.10.1",
    rimraf: "3.0.2",
    typescript: "~5.2.2"
  },
  engines: {
    node: ">=18.0.0"
  },
  typesVersions: {
    "<4.0": {
      "dist-types/*": [
        "dist-types/ts3.4/*"
      ]
    }
  },
  files: [
    "dist-*/**"
  ],
  author: {
    name: "AWS SDK for JavaScript Team",
    url: "https://aws.amazon.com/javascript/"
  },
  license: "Apache-2.0",
  browser: {
    "./dist-es/runtimeConfig": "./dist-es/runtimeConfig.browser"
  },
  "react-native": {
    "./dist-es/runtimeConfig": "./dist-es/runtimeConfig.native"
  },
  homepage: "https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-ssm",
  repository: {
    type: "git",
    url: "https://github.com/aws/aws-sdk-js-v3.git",
    directory: "clients/client-ssm"
  }
};

// node_modules/@aws-sdk/client-ssm/dist-es/endpoint/ruleset.js
var u = "required";
var v = "fn";
var w = "argv";
var x = "ref";
var a = true;
var b = "isSet";
var c = "booleanEquals";
var d = "error";
var e = "endpoint";
var f = "tree";
var g = "PartitionResult";
var h = "getAttr";
var i = { [u]: false, "type": "String" };
var j = { [u]: true, "default": false, "type": "Boolean" };
var k = { [x]: "Endpoint" };
var l = { [v]: c, [w]: [{ [x]: "UseFIPS" }, true] };
var m = { [v]: c, [w]: [{ [x]: "UseDualStack" }, true] };
var n = {};
var o = { [v]: h, [w]: [{ [x]: g }, "supportsFIPS"] };
var p = { [x]: g };
var q = { [v]: c, [w]: [true, { [v]: h, [w]: [p, "supportsDualStack"] }] };
var r = [l];
var s = [m];
var t = [{ [x]: "Region" }];
var _data = { version: "1.0", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: "Invalid Configuration: FIPS and custom endpoint are not supported", type: d }, { conditions: s, error: "Invalid Configuration: Dualstack and custom endpoint are not supported", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: "aws.partition", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, o] }, q], rules: [{ endpoint: { url: "https://ssm-fips.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: n, headers: n }, type: e }], type: f }, { error: "FIPS and DualStack are enabled, but this partition does not support one or both", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [o, a] }], rules: [{ conditions: [{ [v]: "stringEquals", [w]: [{ [v]: h, [w]: [p, "name"] }, "aws-us-gov"] }], endpoint: { url: "https://ssm.{Region}.amazonaws.com", properties: n, headers: n }, type: e }, { endpoint: { url: "https://ssm-fips.{Region}.{PartitionResult#dnsSuffix}", properties: n, headers: n }, type: e }], type: f }, { error: "FIPS is enabled but this partition does not support FIPS", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: "https://ssm.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: n, headers: n }, type: e }], type: f }, { error: "DualStack is enabled but this partition does not support DualStack", type: d }], type: f }, { endpoint: { url: "https://ssm.{Region}.{PartitionResult#dnsSuffix}", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: "Invalid Configuration: Missing Region", type: d }] };
var ruleSet = _data;

// node_modules/@aws-sdk/client-ssm/dist-es/endpoint/endpointResolver.js
var cache = new EndpointCache({
  size: 50,
  params: ["Endpoint", "Region", "UseDualStack", "UseFIPS"]
});
var defaultEndpointResolver = (endpointParams, context = {}) => {
  return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {
    endpointParams,
    logger: context.logger
  }));
};
customEndpointFunctions.aws = awsEndpointFunctions;

// node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.shared.js
var getRuntimeConfig = (config) => {
  return {
    apiVersion: "2014-11-06",
    base64Decoder: (config == null ? void 0 : config.base64Decoder) ?? fromBase64,
    base64Encoder: (config == null ? void 0 : config.base64Encoder) ?? toBase64,
    disableHostPrefix: (config == null ? void 0 : config.disableHostPrefix) ?? false,
    endpointProvider: (config == null ? void 0 : config.endpointProvider) ?? defaultEndpointResolver,
    extensions: (config == null ? void 0 : config.extensions) ?? [],
    httpAuthSchemeProvider: (config == null ? void 0 : config.httpAuthSchemeProvider) ?? defaultSSMHttpAuthSchemeProvider,
    httpAuthSchemes: (config == null ? void 0 : config.httpAuthSchemes) ?? [
      {
        schemeId: "aws.auth#sigv4",
        identityProvider: (ipc) => ipc.getIdentityProvider("aws.auth#sigv4"),
        signer: new AwsSdkSigV4Signer()
      }
    ],
    logger: (config == null ? void 0 : config.logger) ?? new NoOpLogger(),
    serviceId: (config == null ? void 0 : config.serviceId) ?? "SSM",
    urlParser: (config == null ? void 0 : config.urlParser) ?? parseUrl,
    utf8Decoder: (config == null ? void 0 : config.utf8Decoder) ?? fromUtf8,
    utf8Encoder: (config == null ? void 0 : config.utf8Encoder) ?? toUtf8
  };
};

// node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.browser.js
var getRuntimeConfig2 = (config) => {
  const defaultsMode = resolveDefaultsModeConfig(config);
  const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);
  const clientSharedValues = getRuntimeConfig(config);
  return {
    ...clientSharedValues,
    ...config,
    runtime: "browser",
    defaultsMode,
    bodyLengthChecker: (config == null ? void 0 : config.bodyLengthChecker) ?? calculateBodyLength,
    credentialDefaultProvider: (config == null ? void 0 : config.credentialDefaultProvider) ?? ((_) => () => Promise.reject(new Error("Credential is missing"))),
    defaultUserAgentProvider: (config == null ? void 0 : config.defaultUserAgentProvider) ?? createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: package_default.version }),
    maxAttempts: (config == null ? void 0 : config.maxAttempts) ?? DEFAULT_MAX_ATTEMPTS,
    region: (config == null ? void 0 : config.region) ?? invalidProvider("Region is missing"),
    requestHandler: FetchHttpHandler.create((config == null ? void 0 : config.requestHandler) ?? defaultConfigProvider),
    retryMode: (config == null ? void 0 : config.retryMode) ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),
    sha256: (config == null ? void 0 : config.sha256) ?? Sha256,
    streamCollector: (config == null ? void 0 : config.streamCollector) ?? streamCollector,
    useDualstackEndpoint: (config == null ? void 0 : config.useDualstackEndpoint) ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),
    useFipsEndpoint: (config == null ? void 0 : config.useFipsEndpoint) ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT))
  };
};

// node_modules/@aws-sdk/client-ssm/dist-es/auth/httpAuthExtensionConfiguration.js
var getHttpAuthExtensionConfiguration = (runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
};
var resolveHttpAuthRuntimeConfig = (config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
};

// node_modules/@aws-sdk/client-ssm/dist-es/runtimeExtensions.js
var asPartial = (t2) => t2;
var resolveRuntimeExtensions = (runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),
    ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),
    ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),
    ...resolveDefaultRuntimeConfig(extensionConfiguration),
    ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
};

// node_modules/@aws-sdk/client-ssm/dist-es/SSMClient.js
var SSMClient = class extends Client {
  constructor(...[configuration]) {
    const _config_0 = getRuntimeConfig2(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = resolveUserAgentConfig(_config_1);
    const _config_3 = resolveRetryConfig(_config_2);
    const _config_4 = resolveRegionConfig(_config_3);
    const _config_5 = resolveHostHeaderConfig(_config_4);
    const _config_6 = resolveEndpointConfig(_config_5);
    const _config_7 = resolveHttpAuthSchemeConfig(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    __publicField(this, "config");
    this.config = _config_8;
    this.middlewareStack.use(getUserAgentPlugin(this.config));
    this.middlewareStack.use(getRetryPlugin(this.config));
    this.middlewareStack.use(getContentLengthPlugin(this.config));
    this.middlewareStack.use(getHostHeaderPlugin(this.config));
    this.middlewareStack.use(getLoggerPlugin(this.config));
    this.middlewareStack.use(getRecursionDetectionPlugin(this.config));
    this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {
      httpAuthSchemeParametersProvider: defaultSSMHttpAuthSchemeParametersProvider,
      identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({
        "aws.auth#sigv4": config.credentials
      })
    }));
    this.middlewareStack.use(getHttpSigningPlugin(this.config));
  }
  destroy() {
    super.destroy();
  }
};

// node_modules/@aws-sdk/client-ssm/dist-es/models/SSMServiceException.js
var SSMServiceException = class _SSMServiceException extends ServiceException {
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _SSMServiceException.prototype);
  }
};

// node_modules/@aws-sdk/client-ssm/dist-es/models/models_0.js
var ResourceTypeForTagging = {
  ASSOCIATION: "Association",
  AUTOMATION: "Automation",
  DOCUMENT: "Document",
  MAINTENANCE_WINDOW: "MaintenanceWindow",
  MANAGED_INSTANCE: "ManagedInstance",
  OPSMETADATA: "OpsMetadata",
  OPS_ITEM: "OpsItem",
  PARAMETER: "Parameter",
  PATCH_BASELINE: "PatchBaseline"
};
var InternalServerError = class _InternalServerError extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InternalServerError",
      $fault: "server",
      ...opts
    });
    __publicField(this, "name", "InternalServerError");
    __publicField(this, "$fault", "server");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InternalServerError.prototype);
    this.Message = opts.Message;
  }
};
var InvalidResourceId = class _InvalidResourceId extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidResourceId",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidResourceId");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidResourceId.prototype);
  }
};
var InvalidResourceType = class _InvalidResourceType extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidResourceType",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidResourceType");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidResourceType.prototype);
  }
};
var TooManyTagsError = class _TooManyTagsError extends SSMServiceException {
  constructor(opts) {
    super({
      name: "TooManyTagsError",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "TooManyTagsError");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _TooManyTagsError.prototype);
  }
};
var TooManyUpdates = class _TooManyUpdates extends SSMServiceException {
  constructor(opts) {
    super({
      name: "TooManyUpdates",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "TooManyUpdates");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _TooManyUpdates.prototype);
    this.Message = opts.Message;
  }
};
var ExternalAlarmState = {
  ALARM: "ALARM",
  UNKNOWN: "UNKNOWN"
};
var AlreadyExistsException = class _AlreadyExistsException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AlreadyExistsException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AlreadyExistsException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _AlreadyExistsException.prototype);
    this.Message = opts.Message;
  }
};
var OpsItemConflictException = class _OpsItemConflictException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsItemConflictException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsItemConflictException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _OpsItemConflictException.prototype);
    this.Message = opts.Message;
  }
};
var OpsItemInvalidParameterException = class _OpsItemInvalidParameterException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsItemInvalidParameterException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsItemInvalidParameterException");
    __publicField(this, "$fault", "client");
    __publicField(this, "ParameterNames");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _OpsItemInvalidParameterException.prototype);
    this.ParameterNames = opts.ParameterNames;
    this.Message = opts.Message;
  }
};
var OpsItemLimitExceededException = class _OpsItemLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsItemLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsItemLimitExceededException");
    __publicField(this, "$fault", "client");
    __publicField(this, "ResourceTypes");
    __publicField(this, "Limit");
    __publicField(this, "LimitType");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _OpsItemLimitExceededException.prototype);
    this.ResourceTypes = opts.ResourceTypes;
    this.Limit = opts.Limit;
    this.LimitType = opts.LimitType;
    this.Message = opts.Message;
  }
};
var OpsItemNotFoundException = class _OpsItemNotFoundException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsItemNotFoundException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsItemNotFoundException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _OpsItemNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var OpsItemRelatedItemAlreadyExistsException = class _OpsItemRelatedItemAlreadyExistsException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsItemRelatedItemAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsItemRelatedItemAlreadyExistsException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    __publicField(this, "ResourceUri");
    __publicField(this, "OpsItemId");
    Object.setPrototypeOf(this, _OpsItemRelatedItemAlreadyExistsException.prototype);
    this.Message = opts.Message;
    this.ResourceUri = opts.ResourceUri;
    this.OpsItemId = opts.OpsItemId;
  }
};
var DuplicateInstanceId = class _DuplicateInstanceId extends SSMServiceException {
  constructor(opts) {
    super({
      name: "DuplicateInstanceId",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "DuplicateInstanceId");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _DuplicateInstanceId.prototype);
  }
};
var InvalidCommandId = class _InvalidCommandId extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidCommandId",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidCommandId");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidCommandId.prototype);
  }
};
var InvalidInstanceId = class _InvalidInstanceId extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidInstanceId",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidInstanceId");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidInstanceId.prototype);
    this.Message = opts.Message;
  }
};
var DoesNotExistException = class _DoesNotExistException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "DoesNotExistException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "DoesNotExistException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _DoesNotExistException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidParameters = class _InvalidParameters extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidParameters",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidParameters");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidParameters.prototype);
    this.Message = opts.Message;
  }
};
var AssociationAlreadyExists = class _AssociationAlreadyExists extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AssociationAlreadyExists",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AssociationAlreadyExists");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _AssociationAlreadyExists.prototype);
  }
};
var AssociationLimitExceeded = class _AssociationLimitExceeded extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AssociationLimitExceeded",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AssociationLimitExceeded");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _AssociationLimitExceeded.prototype);
  }
};
var AssociationComplianceSeverity = {
  Critical: "CRITICAL",
  High: "HIGH",
  Low: "LOW",
  Medium: "MEDIUM",
  Unspecified: "UNSPECIFIED"
};
var AssociationSyncCompliance = {
  Auto: "AUTO",
  Manual: "MANUAL"
};
var AssociationStatusName = {
  Failed: "Failed",
  Pending: "Pending",
  Success: "Success"
};
var InvalidDocument = class _InvalidDocument extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidDocument",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidDocument");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidDocument.prototype);
    this.Message = opts.Message;
  }
};
var InvalidDocumentVersion = class _InvalidDocumentVersion extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidDocumentVersion",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidDocumentVersion");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidDocumentVersion.prototype);
    this.Message = opts.Message;
  }
};
var InvalidOutputLocation = class _InvalidOutputLocation extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidOutputLocation",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidOutputLocation");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidOutputLocation.prototype);
  }
};
var InvalidSchedule = class _InvalidSchedule extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidSchedule",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidSchedule");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidSchedule.prototype);
    this.Message = opts.Message;
  }
};
var InvalidTag = class _InvalidTag extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidTag",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidTag");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidTag.prototype);
    this.Message = opts.Message;
  }
};
var InvalidTarget = class _InvalidTarget extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidTarget",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidTarget");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidTarget.prototype);
    this.Message = opts.Message;
  }
};
var InvalidTargetMaps = class _InvalidTargetMaps extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidTargetMaps",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidTargetMaps");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidTargetMaps.prototype);
    this.Message = opts.Message;
  }
};
var UnsupportedPlatformType = class _UnsupportedPlatformType extends SSMServiceException {
  constructor(opts) {
    super({
      name: "UnsupportedPlatformType",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "UnsupportedPlatformType");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _UnsupportedPlatformType.prototype);
    this.Message = opts.Message;
  }
};
var Fault = {
  Client: "Client",
  Server: "Server",
  Unknown: "Unknown"
};
var AttachmentsSourceKey = {
  AttachmentReference: "AttachmentReference",
  S3FileUrl: "S3FileUrl",
  SourceUrl: "SourceUrl"
};
var DocumentFormat = {
  JSON: "JSON",
  TEXT: "TEXT",
  YAML: "YAML"
};
var DocumentType = {
  ApplicationConfiguration: "ApplicationConfiguration",
  ApplicationConfigurationSchema: "ApplicationConfigurationSchema",
  Automation: "Automation",
  ChangeCalendar: "ChangeCalendar",
  ChangeTemplate: "Automation.ChangeTemplate",
  CloudFormation: "CloudFormation",
  Command: "Command",
  ConformancePackTemplate: "ConformancePackTemplate",
  DeploymentStrategy: "DeploymentStrategy",
  Package: "Package",
  Policy: "Policy",
  ProblemAnalysis: "ProblemAnalysis",
  ProblemAnalysisTemplate: "ProblemAnalysisTemplate",
  QuickSetup: "QuickSetup",
  Session: "Session"
};
var DocumentHashType = {
  SHA1: "Sha1",
  SHA256: "Sha256"
};
var DocumentParameterType = {
  String: "String",
  StringList: "StringList"
};
var PlatformType = {
  LINUX: "Linux",
  MACOS: "MacOS",
  WINDOWS: "Windows"
};
var ReviewStatus = {
  APPROVED: "APPROVED",
  NOT_REVIEWED: "NOT_REVIEWED",
  PENDING: "PENDING",
  REJECTED: "REJECTED"
};
var DocumentStatus = {
  Active: "Active",
  Creating: "Creating",
  Deleting: "Deleting",
  Failed: "Failed",
  Updating: "Updating"
};
var DocumentAlreadyExists = class _DocumentAlreadyExists extends SSMServiceException {
  constructor(opts) {
    super({
      name: "DocumentAlreadyExists",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "DocumentAlreadyExists");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _DocumentAlreadyExists.prototype);
    this.Message = opts.Message;
  }
};
var DocumentLimitExceeded = class _DocumentLimitExceeded extends SSMServiceException {
  constructor(opts) {
    super({
      name: "DocumentLimitExceeded",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "DocumentLimitExceeded");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _DocumentLimitExceeded.prototype);
    this.Message = opts.Message;
  }
};
var InvalidDocumentContent = class _InvalidDocumentContent extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidDocumentContent",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidDocumentContent");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidDocumentContent.prototype);
    this.Message = opts.Message;
  }
};
var InvalidDocumentSchemaVersion = class _InvalidDocumentSchemaVersion extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidDocumentSchemaVersion",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidDocumentSchemaVersion");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidDocumentSchemaVersion.prototype);
    this.Message = opts.Message;
  }
};
var MaxDocumentSizeExceeded = class _MaxDocumentSizeExceeded extends SSMServiceException {
  constructor(opts) {
    super({
      name: "MaxDocumentSizeExceeded",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "MaxDocumentSizeExceeded");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _MaxDocumentSizeExceeded.prototype);
    this.Message = opts.Message;
  }
};
var IdempotentParameterMismatch = class _IdempotentParameterMismatch extends SSMServiceException {
  constructor(opts) {
    super({
      name: "IdempotentParameterMismatch",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "IdempotentParameterMismatch");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _IdempotentParameterMismatch.prototype);
    this.Message = opts.Message;
  }
};
var ResourceLimitExceededException = class _ResourceLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourceLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourceLimitExceededException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourceLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var OpsItemDataType = {
  SEARCHABLE_STRING: "SearchableString",
  STRING: "String"
};
var OpsItemAccessDeniedException = class _OpsItemAccessDeniedException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsItemAccessDeniedException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsItemAccessDeniedException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _OpsItemAccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
var OpsItemAlreadyExistsException = class _OpsItemAlreadyExistsException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsItemAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsItemAlreadyExistsException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    __publicField(this, "OpsItemId");
    Object.setPrototypeOf(this, _OpsItemAlreadyExistsException.prototype);
    this.Message = opts.Message;
    this.OpsItemId = opts.OpsItemId;
  }
};
var OpsMetadataAlreadyExistsException = class _OpsMetadataAlreadyExistsException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsMetadataAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsMetadataAlreadyExistsException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _OpsMetadataAlreadyExistsException.prototype);
  }
};
var OpsMetadataInvalidArgumentException = class _OpsMetadataInvalidArgumentException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsMetadataInvalidArgumentException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsMetadataInvalidArgumentException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _OpsMetadataInvalidArgumentException.prototype);
  }
};
var OpsMetadataLimitExceededException = class _OpsMetadataLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsMetadataLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsMetadataLimitExceededException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _OpsMetadataLimitExceededException.prototype);
  }
};
var OpsMetadataTooManyUpdatesException = class _OpsMetadataTooManyUpdatesException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsMetadataTooManyUpdatesException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsMetadataTooManyUpdatesException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _OpsMetadataTooManyUpdatesException.prototype);
  }
};
var PatchComplianceLevel = {
  Critical: "CRITICAL",
  High: "HIGH",
  Informational: "INFORMATIONAL",
  Low: "LOW",
  Medium: "MEDIUM",
  Unspecified: "UNSPECIFIED"
};
var PatchFilterKey = {
  AdvisoryId: "ADVISORY_ID",
  Arch: "ARCH",
  BugzillaId: "BUGZILLA_ID",
  CVEId: "CVE_ID",
  Classification: "CLASSIFICATION",
  Epoch: "EPOCH",
  MsrcSeverity: "MSRC_SEVERITY",
  Name: "NAME",
  PatchId: "PATCH_ID",
  PatchSet: "PATCH_SET",
  Priority: "PRIORITY",
  Product: "PRODUCT",
  ProductFamily: "PRODUCT_FAMILY",
  Release: "RELEASE",
  Repository: "REPOSITORY",
  Section: "SECTION",
  Security: "SECURITY",
  Severity: "SEVERITY",
  Version: "VERSION"
};
var OperatingSystem = {
  AlmaLinux: "ALMA_LINUX",
  AmazonLinux: "AMAZON_LINUX",
  AmazonLinux2: "AMAZON_LINUX_2",
  AmazonLinux2022: "AMAZON_LINUX_2022",
  AmazonLinux2023: "AMAZON_LINUX_2023",
  CentOS: "CENTOS",
  Debian: "DEBIAN",
  MacOS: "MACOS",
  OracleLinux: "ORACLE_LINUX",
  Raspbian: "RASPBIAN",
  RedhatEnterpriseLinux: "REDHAT_ENTERPRISE_LINUX",
  Rocky_Linux: "ROCKY_LINUX",
  Suse: "SUSE",
  Ubuntu: "UBUNTU",
  Windows: "WINDOWS"
};
var PatchAction = {
  AllowAsDependency: "ALLOW_AS_DEPENDENCY",
  Block: "BLOCK"
};
var ResourceDataSyncS3Format = {
  JSON_SERDE: "JsonSerDe"
};
var ResourceDataSyncAlreadyExistsException = class _ResourceDataSyncAlreadyExistsException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourceDataSyncAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourceDataSyncAlreadyExistsException");
    __publicField(this, "$fault", "client");
    __publicField(this, "SyncName");
    Object.setPrototypeOf(this, _ResourceDataSyncAlreadyExistsException.prototype);
    this.SyncName = opts.SyncName;
  }
};
var ResourceDataSyncCountExceededException = class _ResourceDataSyncCountExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourceDataSyncCountExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourceDataSyncCountExceededException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourceDataSyncCountExceededException.prototype);
    this.Message = opts.Message;
  }
};
var ResourceDataSyncInvalidConfigurationException = class _ResourceDataSyncInvalidConfigurationException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourceDataSyncInvalidConfigurationException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourceDataSyncInvalidConfigurationException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourceDataSyncInvalidConfigurationException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidActivation = class _InvalidActivation extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidActivation",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidActivation");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidActivation.prototype);
    this.Message = opts.Message;
  }
};
var InvalidActivationId = class _InvalidActivationId extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidActivationId",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidActivationId");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidActivationId.prototype);
    this.Message = opts.Message;
  }
};
var AssociationDoesNotExist = class _AssociationDoesNotExist extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AssociationDoesNotExist",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AssociationDoesNotExist");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _AssociationDoesNotExist.prototype);
    this.Message = opts.Message;
  }
};
var AssociatedInstances = class _AssociatedInstances extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AssociatedInstances",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AssociatedInstances");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _AssociatedInstances.prototype);
  }
};
var InvalidDocumentOperation = class _InvalidDocumentOperation extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidDocumentOperation",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidDocumentOperation");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidDocumentOperation.prototype);
    this.Message = opts.Message;
  }
};
var InventorySchemaDeleteOption = {
  DELETE_SCHEMA: "DeleteSchema",
  DISABLE_SCHEMA: "DisableSchema"
};
var InvalidDeleteInventoryParametersException = class _InvalidDeleteInventoryParametersException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidDeleteInventoryParametersException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidDeleteInventoryParametersException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidDeleteInventoryParametersException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidInventoryRequestException = class _InvalidInventoryRequestException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidInventoryRequestException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidInventoryRequestException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidInventoryRequestException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidOptionException = class _InvalidOptionException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidOptionException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidOptionException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidOptionException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidTypeNameException = class _InvalidTypeNameException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidTypeNameException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidTypeNameException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidTypeNameException.prototype);
    this.Message = opts.Message;
  }
};
var OpsMetadataNotFoundException = class _OpsMetadataNotFoundException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsMetadataNotFoundException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsMetadataNotFoundException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _OpsMetadataNotFoundException.prototype);
  }
};
var ParameterNotFound = class _ParameterNotFound extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ParameterNotFound",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ParameterNotFound");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _ParameterNotFound.prototype);
  }
};
var ResourceInUseException = class _ResourceInUseException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourceInUseException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourceInUseException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourceInUseException.prototype);
    this.Message = opts.Message;
  }
};
var ResourceDataSyncNotFoundException = class _ResourceDataSyncNotFoundException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourceDataSyncNotFoundException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourceDataSyncNotFoundException");
    __publicField(this, "$fault", "client");
    __publicField(this, "SyncName");
    __publicField(this, "SyncType");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourceDataSyncNotFoundException.prototype);
    this.SyncName = opts.SyncName;
    this.SyncType = opts.SyncType;
    this.Message = opts.Message;
  }
};
var MalformedResourcePolicyDocumentException = class _MalformedResourcePolicyDocumentException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "MalformedResourcePolicyDocumentException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "MalformedResourcePolicyDocumentException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _MalformedResourcePolicyDocumentException.prototype);
    this.Message = opts.Message;
  }
};
var ResourceNotFoundException = class _ResourceNotFoundException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourceNotFoundException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var ResourcePolicyConflictException = class _ResourcePolicyConflictException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourcePolicyConflictException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourcePolicyConflictException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourcePolicyConflictException.prototype);
    this.Message = opts.Message;
  }
};
var ResourcePolicyInvalidParameterException = class _ResourcePolicyInvalidParameterException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourcePolicyInvalidParameterException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourcePolicyInvalidParameterException");
    __publicField(this, "$fault", "client");
    __publicField(this, "ParameterNames");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourcePolicyInvalidParameterException.prototype);
    this.ParameterNames = opts.ParameterNames;
    this.Message = opts.Message;
  }
};
var ResourcePolicyNotFoundException = class _ResourcePolicyNotFoundException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourcePolicyNotFoundException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourcePolicyNotFoundException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourcePolicyNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var TargetInUseException = class _TargetInUseException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "TargetInUseException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "TargetInUseException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _TargetInUseException.prototype);
    this.Message = opts.Message;
  }
};
var DescribeActivationsFilterKeys = {
  ACTIVATION_IDS: "ActivationIds",
  DEFAULT_INSTANCE_NAME: "DefaultInstanceName",
  IAM_ROLE: "IamRole"
};
var InvalidFilter = class _InvalidFilter extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidFilter",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidFilter");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidFilter.prototype);
    this.Message = opts.Message;
  }
};
var InvalidNextToken = class _InvalidNextToken extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidNextToken",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidNextToken");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidNextToken.prototype);
    this.Message = opts.Message;
  }
};
var InvalidAssociationVersion = class _InvalidAssociationVersion extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidAssociationVersion",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidAssociationVersion");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidAssociationVersion.prototype);
    this.Message = opts.Message;
  }
};
var AssociationExecutionFilterKey = {
  CreatedTime: "CreatedTime",
  ExecutionId: "ExecutionId",
  Status: "Status"
};
var AssociationFilterOperatorType = {
  Equal: "EQUAL",
  GreaterThan: "GREATER_THAN",
  LessThan: "LESS_THAN"
};
var AssociationExecutionDoesNotExist = class _AssociationExecutionDoesNotExist extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AssociationExecutionDoesNotExist",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AssociationExecutionDoesNotExist");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _AssociationExecutionDoesNotExist.prototype);
    this.Message = opts.Message;
  }
};
var AssociationExecutionTargetsFilterKey = {
  ResourceId: "ResourceId",
  ResourceType: "ResourceType",
  Status: "Status"
};
var AutomationExecutionFilterKey = {
  AUTOMATION_SUBTYPE: "AutomationSubtype",
  AUTOMATION_TYPE: "AutomationType",
  CURRENT_ACTION: "CurrentAction",
  DOCUMENT_NAME_PREFIX: "DocumentNamePrefix",
  EXECUTION_ID: "ExecutionId",
  EXECUTION_STATUS: "ExecutionStatus",
  OPS_ITEM_ID: "OpsItemId",
  PARENT_EXECUTION_ID: "ParentExecutionId",
  START_TIME_AFTER: "StartTimeAfter",
  START_TIME_BEFORE: "StartTimeBefore",
  TAG_KEY: "TagKey",
  TARGET_RESOURCE_GROUP: "TargetResourceGroup"
};
var AutomationExecutionStatus = {
  APPROVED: "Approved",
  CANCELLED: "Cancelled",
  CANCELLING: "Cancelling",
  CHANGE_CALENDAR_OVERRIDE_APPROVED: "ChangeCalendarOverrideApproved",
  CHANGE_CALENDAR_OVERRIDE_REJECTED: "ChangeCalendarOverrideRejected",
  COMPLETED_WITH_FAILURE: "CompletedWithFailure",
  COMPLETED_WITH_SUCCESS: "CompletedWithSuccess",
  EXITED: "Exited",
  FAILED: "Failed",
  INPROGRESS: "InProgress",
  PENDING: "Pending",
  PENDING_APPROVAL: "PendingApproval",
  PENDING_CHANGE_CALENDAR_OVERRIDE: "PendingChangeCalendarOverride",
  REJECTED: "Rejected",
  RUNBOOK_INPROGRESS: "RunbookInProgress",
  SCHEDULED: "Scheduled",
  SUCCESS: "Success",
  TIMEDOUT: "TimedOut",
  WAITING: "Waiting"
};
var AutomationSubtype = {
  ChangeRequest: "ChangeRequest"
};
var AutomationType = {
  CrossAccount: "CrossAccount",
  Local: "Local"
};
var ExecutionMode = {
  Auto: "Auto",
  Interactive: "Interactive"
};
var InvalidFilterKey = class _InvalidFilterKey extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidFilterKey",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidFilterKey");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidFilterKey.prototype);
  }
};
var InvalidFilterValue = class _InvalidFilterValue extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidFilterValue",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidFilterValue");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidFilterValue.prototype);
    this.Message = opts.Message;
  }
};
var AutomationExecutionNotFoundException = class _AutomationExecutionNotFoundException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AutomationExecutionNotFoundException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AutomationExecutionNotFoundException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _AutomationExecutionNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var StepExecutionFilterKey = {
  ACTION: "Action",
  PARENT_STEP_EXECUTION_ID: "ParentStepExecutionId",
  PARENT_STEP_ITERATION: "ParentStepIteration",
  PARENT_STEP_ITERATOR_VALUE: "ParentStepIteratorValue",
  START_TIME_AFTER: "StartTimeAfter",
  START_TIME_BEFORE: "StartTimeBefore",
  STEP_EXECUTION_ID: "StepExecutionId",
  STEP_EXECUTION_STATUS: "StepExecutionStatus",
  STEP_NAME: "StepName"
};
var DocumentPermissionType = {
  SHARE: "Share"
};
var InvalidPermissionType = class _InvalidPermissionType extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidPermissionType",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidPermissionType");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidPermissionType.prototype);
    this.Message = opts.Message;
  }
};
var PatchDeploymentStatus = {
  Approved: "APPROVED",
  ExplicitApproved: "EXPLICIT_APPROVED",
  ExplicitRejected: "EXPLICIT_REJECTED",
  PendingApproval: "PENDING_APPROVAL"
};
var UnsupportedOperatingSystem = class _UnsupportedOperatingSystem extends SSMServiceException {
  constructor(opts) {
    super({
      name: "UnsupportedOperatingSystem",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "UnsupportedOperatingSystem");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _UnsupportedOperatingSystem.prototype);
    this.Message = opts.Message;
  }
};
var InstanceInformationFilterKey = {
  ACTIVATION_IDS: "ActivationIds",
  AGENT_VERSION: "AgentVersion",
  ASSOCIATION_STATUS: "AssociationStatus",
  IAM_ROLE: "IamRole",
  INSTANCE_IDS: "InstanceIds",
  PING_STATUS: "PingStatus",
  PLATFORM_TYPES: "PlatformTypes",
  RESOURCE_TYPE: "ResourceType"
};
var PingStatus = {
  CONNECTION_LOST: "ConnectionLost",
  INACTIVE: "Inactive",
  ONLINE: "Online"
};
var ResourceType = {
  EC2_INSTANCE: "EC2Instance",
  MANAGED_INSTANCE: "ManagedInstance"
};
var SourceType = {
  AWS_EC2_INSTANCE: "AWS::EC2::Instance",
  AWS_IOT_THING: "AWS::IoT::Thing",
  AWS_SSM_MANAGEDINSTANCE: "AWS::SSM::ManagedInstance"
};
var InvalidInstanceInformationFilterValue = class _InvalidInstanceInformationFilterValue extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidInstanceInformationFilterValue",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidInstanceInformationFilterValue");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidInstanceInformationFilterValue.prototype);
  }
};
var PatchComplianceDataState = {
  Failed: "FAILED",
  Installed: "INSTALLED",
  InstalledOther: "INSTALLED_OTHER",
  InstalledPendingReboot: "INSTALLED_PENDING_REBOOT",
  InstalledRejected: "INSTALLED_REJECTED",
  Missing: "MISSING",
  NotApplicable: "NOT_APPLICABLE"
};
var PatchOperationType = {
  INSTALL: "Install",
  SCAN: "Scan"
};
var RebootOption = {
  NO_REBOOT: "NoReboot",
  REBOOT_IF_NEEDED: "RebootIfNeeded"
};
var InstancePatchStateOperatorType = {
  EQUAL: "Equal",
  GREATER_THAN: "GreaterThan",
  LESS_THAN: "LessThan",
  NOT_EQUAL: "NotEqual"
};
var InstancePropertyFilterOperator = {
  BEGIN_WITH: "BeginWith",
  EQUAL: "Equal",
  GREATER_THAN: "GreaterThan",
  LESS_THAN: "LessThan",
  NOT_EQUAL: "NotEqual"
};
var InstancePropertyFilterKey = {
  ACTIVATION_IDS: "ActivationIds",
  AGENT_VERSION: "AgentVersion",
  ASSOCIATION_STATUS: "AssociationStatus",
  DOCUMENT_NAME: "DocumentName",
  IAM_ROLE: "IamRole",
  INSTANCE_IDS: "InstanceIds",
  PING_STATUS: "PingStatus",
  PLATFORM_TYPES: "PlatformTypes",
  RESOURCE_TYPE: "ResourceType"
};
var InvalidInstancePropertyFilterValue = class _InvalidInstancePropertyFilterValue extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidInstancePropertyFilterValue",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidInstancePropertyFilterValue");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidInstancePropertyFilterValue.prototype);
  }
};
var InventoryDeletionStatus = {
  COMPLETE: "Complete",
  IN_PROGRESS: "InProgress"
};
var InvalidDeletionIdException = class _InvalidDeletionIdException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidDeletionIdException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidDeletionIdException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidDeletionIdException.prototype);
    this.Message = opts.Message;
  }
};
var MaintenanceWindowExecutionStatus = {
  Cancelled: "CANCELLED",
  Cancelling: "CANCELLING",
  Failed: "FAILED",
  InProgress: "IN_PROGRESS",
  Pending: "PENDING",
  SkippedOverlapping: "SKIPPED_OVERLAPPING",
  Success: "SUCCESS",
  TimedOut: "TIMED_OUT"
};
var MaintenanceWindowTaskType = {
  Automation: "AUTOMATION",
  Lambda: "LAMBDA",
  RunCommand: "RUN_COMMAND",
  StepFunctions: "STEP_FUNCTIONS"
};
var MaintenanceWindowResourceType = {
  Instance: "INSTANCE",
  ResourceGroup: "RESOURCE_GROUP"
};
var CreateAssociationRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: SENSITIVE_STRING }
});
var AssociationDescriptionFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: SENSITIVE_STRING }
});
var CreateAssociationResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.AssociationDescription && {
    AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription)
  }
});
var CreateAssociationBatchRequestEntryFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: SENSITIVE_STRING }
});
var CreateAssociationBatchRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Entries && {
    Entries: obj.Entries.map((item) => CreateAssociationBatchRequestEntryFilterSensitiveLog(item))
  }
});
var FailedCreateAssociationFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Entry && { Entry: CreateAssociationBatchRequestEntryFilterSensitiveLog(obj.Entry) }
});
var CreateAssociationBatchResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Successful && { Successful: obj.Successful.map((item) => AssociationDescriptionFilterSensitiveLog(item)) },
  ...obj.Failed && { Failed: obj.Failed.map((item) => FailedCreateAssociationFilterSensitiveLog(item)) }
});
var CreateMaintenanceWindowRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var PatchSourceFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Configuration && { Configuration: SENSITIVE_STRING }
});
var CreatePatchBaselineRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }
});
var DescribeAssociationResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.AssociationDescription && {
    AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription)
  }
});
var InstanceInformationFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.IPAddress && { IPAddress: SENSITIVE_STRING }
});
var DescribeInstanceInformationResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.InstanceInformationList && {
    InstanceInformationList: obj.InstanceInformationList.map((item) => InstanceInformationFilterSensitiveLog(item))
  }
});
var InstancePatchStateFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING }
});
var DescribeInstancePatchStatesResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.InstancePatchStates && {
    InstancePatchStates: obj.InstancePatchStates.map((item) => InstancePatchStateFilterSensitiveLog(item))
  }
});
var DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.InstancePatchStates && {
    InstancePatchStates: obj.InstancePatchStates.map((item) => InstancePatchStateFilterSensitiveLog(item))
  }
});
var InstancePropertyFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.IPAddress && { IPAddress: SENSITIVE_STRING }
});
var DescribeInstancePropertiesResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.InstanceProperties && {
    InstanceProperties: obj.InstanceProperties.map((item) => InstancePropertyFilterSensitiveLog(item))
  }
});
var MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: SENSITIVE_STRING },
  ...obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING }
});
var DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.WindowExecutionTaskInvocationIdentities && {
    WindowExecutionTaskInvocationIdentities: obj.WindowExecutionTaskInvocationIdentities.map((item) => MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog(item))
  }
});
var MaintenanceWindowIdentityFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var DescribeMaintenanceWindowsResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.WindowIdentities && {
    WindowIdentities: obj.WindowIdentities.map((item) => MaintenanceWindowIdentityFilterSensitiveLog(item))
  }
});

// node_modules/@aws-sdk/client-ssm/dist-es/models/models_1.js
var MaintenanceWindowTaskCutoffBehavior = {
  CancelTask: "CANCEL_TASK",
  ContinueTask: "CONTINUE_TASK"
};
var OpsItemFilterKey = {
  ACCOUNT_ID: "AccountId",
  ACTUAL_END_TIME: "ActualEndTime",
  ACTUAL_START_TIME: "ActualStartTime",
  AUTOMATION_ID: "AutomationId",
  CATEGORY: "Category",
  CHANGE_REQUEST_APPROVER_ARN: "ChangeRequestByApproverArn",
  CHANGE_REQUEST_APPROVER_NAME: "ChangeRequestByApproverName",
  CHANGE_REQUEST_REQUESTER_ARN: "ChangeRequestByRequesterArn",
  CHANGE_REQUEST_REQUESTER_NAME: "ChangeRequestByRequesterName",
  CHANGE_REQUEST_TARGETS_RESOURCE_GROUP: "ChangeRequestByTargetsResourceGroup",
  CHANGE_REQUEST_TEMPLATE: "ChangeRequestByTemplate",
  CREATED_BY: "CreatedBy",
  CREATED_TIME: "CreatedTime",
  INSIGHT_TYPE: "InsightByType",
  LAST_MODIFIED_TIME: "LastModifiedTime",
  OPERATIONAL_DATA: "OperationalData",
  OPERATIONAL_DATA_KEY: "OperationalDataKey",
  OPERATIONAL_DATA_VALUE: "OperationalDataValue",
  OPSITEM_ID: "OpsItemId",
  OPSITEM_TYPE: "OpsItemType",
  PLANNED_END_TIME: "PlannedEndTime",
  PLANNED_START_TIME: "PlannedStartTime",
  PRIORITY: "Priority",
  RESOURCE_ID: "ResourceId",
  SEVERITY: "Severity",
  SOURCE: "Source",
  STATUS: "Status",
  TITLE: "Title"
};
var OpsItemFilterOperator = {
  CONTAINS: "Contains",
  EQUAL: "Equal",
  GREATER_THAN: "GreaterThan",
  LESS_THAN: "LessThan"
};
var OpsItemStatus = {
  APPROVED: "Approved",
  CANCELLED: "Cancelled",
  CANCELLING: "Cancelling",
  CHANGE_CALENDAR_OVERRIDE_APPROVED: "ChangeCalendarOverrideApproved",
  CHANGE_CALENDAR_OVERRIDE_REJECTED: "ChangeCalendarOverrideRejected",
  CLOSED: "Closed",
  COMPLETED_WITH_FAILURE: "CompletedWithFailure",
  COMPLETED_WITH_SUCCESS: "CompletedWithSuccess",
  FAILED: "Failed",
  IN_PROGRESS: "InProgress",
  OPEN: "Open",
  PENDING: "Pending",
  PENDING_APPROVAL: "PendingApproval",
  PENDING_CHANGE_CALENDAR_OVERRIDE: "PendingChangeCalendarOverride",
  REJECTED: "Rejected",
  RESOLVED: "Resolved",
  RUNBOOK_IN_PROGRESS: "RunbookInProgress",
  SCHEDULED: "Scheduled",
  TIMED_OUT: "TimedOut"
};
var ParametersFilterKey = {
  KEY_ID: "KeyId",
  NAME: "Name",
  TYPE: "Type"
};
var ParameterTier = {
  ADVANCED: "Advanced",
  INTELLIGENT_TIERING: "Intelligent-Tiering",
  STANDARD: "Standard"
};
var ParameterType = {
  SECURE_STRING: "SecureString",
  STRING: "String",
  STRING_LIST: "StringList"
};
var InvalidFilterOption = class _InvalidFilterOption extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidFilterOption",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidFilterOption");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidFilterOption.prototype);
  }
};
var PatchSet = {
  Application: "APPLICATION",
  Os: "OS"
};
var PatchProperty = {
  PatchClassification: "CLASSIFICATION",
  PatchMsrcSeverity: "MSRC_SEVERITY",
  PatchPriority: "PRIORITY",
  PatchProductFamily: "PRODUCT_FAMILY",
  PatchSeverity: "SEVERITY",
  Product: "PRODUCT"
};
var SessionFilterKey = {
  INVOKED_AFTER: "InvokedAfter",
  INVOKED_BEFORE: "InvokedBefore",
  OWNER: "Owner",
  SESSION_ID: "SessionId",
  STATUS: "Status",
  TARGET_ID: "Target"
};
var SessionState = {
  ACTIVE: "Active",
  HISTORY: "History"
};
var SessionStatus = {
  CONNECTED: "Connected",
  CONNECTING: "Connecting",
  DISCONNECTED: "Disconnected",
  FAILED: "Failed",
  TERMINATED: "Terminated",
  TERMINATING: "Terminating"
};
var OpsItemRelatedItemAssociationNotFoundException = class _OpsItemRelatedItemAssociationNotFoundException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsItemRelatedItemAssociationNotFoundException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsItemRelatedItemAssociationNotFoundException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _OpsItemRelatedItemAssociationNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var CalendarState = {
  CLOSED: "CLOSED",
  OPEN: "OPEN"
};
var InvalidDocumentType = class _InvalidDocumentType extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidDocumentType",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidDocumentType");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidDocumentType.prototype);
    this.Message = opts.Message;
  }
};
var UnsupportedCalendarException = class _UnsupportedCalendarException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "UnsupportedCalendarException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "UnsupportedCalendarException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _UnsupportedCalendarException.prototype);
    this.Message = opts.Message;
  }
};
var CommandInvocationStatus = {
  CANCELLED: "Cancelled",
  CANCELLING: "Cancelling",
  DELAYED: "Delayed",
  FAILED: "Failed",
  IN_PROGRESS: "InProgress",
  PENDING: "Pending",
  SUCCESS: "Success",
  TIMED_OUT: "TimedOut"
};
var InvalidPluginName = class _InvalidPluginName extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidPluginName",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidPluginName");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidPluginName.prototype);
  }
};
var InvocationDoesNotExist = class _InvocationDoesNotExist extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvocationDoesNotExist",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvocationDoesNotExist");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvocationDoesNotExist.prototype);
  }
};
var ConnectionStatus = {
  CONNECTED: "connected",
  NOT_CONNECTED: "notconnected"
};
var UnsupportedFeatureRequiredException = class _UnsupportedFeatureRequiredException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "UnsupportedFeatureRequiredException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "UnsupportedFeatureRequiredException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _UnsupportedFeatureRequiredException.prototype);
    this.Message = opts.Message;
  }
};
var AttachmentHashType = {
  SHA256: "Sha256"
};
var ImpactType = {
  MUTATING: "Mutating",
  NON_MUTATING: "NonMutating",
  UNDETERMINED: "Undetermined"
};
var ExecutionPreview;
(function(ExecutionPreview2) {
  ExecutionPreview2.visit = (value, visitor) => {
    if (value.Automation !== void 0)
      return visitor.Automation(value.Automation);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };
})(ExecutionPreview || (ExecutionPreview = {}));
var ExecutionPreviewStatus = {
  FAILED: "Failed",
  IN_PROGRESS: "InProgress",
  PENDING: "Pending",
  SUCCESS: "Success"
};
var InventoryQueryOperatorType = {
  BEGIN_WITH: "BeginWith",
  EQUAL: "Equal",
  EXISTS: "Exists",
  GREATER_THAN: "GreaterThan",
  LESS_THAN: "LessThan",
  NOT_EQUAL: "NotEqual"
};
var InvalidAggregatorException = class _InvalidAggregatorException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidAggregatorException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidAggregatorException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidAggregatorException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidInventoryGroupException = class _InvalidInventoryGroupException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidInventoryGroupException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidInventoryGroupException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidInventoryGroupException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidResultAttributeException = class _InvalidResultAttributeException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidResultAttributeException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidResultAttributeException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidResultAttributeException.prototype);
    this.Message = opts.Message;
  }
};
var InventoryAttributeDataType = {
  NUMBER: "number",
  STRING: "string"
};
var NotificationEvent = {
  ALL: "All",
  CANCELLED: "Cancelled",
  FAILED: "Failed",
  IN_PROGRESS: "InProgress",
  SUCCESS: "Success",
  TIMED_OUT: "TimedOut"
};
var NotificationType = {
  Command: "Command",
  Invocation: "Invocation"
};
var OpsFilterOperatorType = {
  BEGIN_WITH: "BeginWith",
  EQUAL: "Equal",
  EXISTS: "Exists",
  GREATER_THAN: "GreaterThan",
  LESS_THAN: "LessThan",
  NOT_EQUAL: "NotEqual"
};
var InvalidKeyId = class _InvalidKeyId extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidKeyId",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidKeyId");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidKeyId.prototype);
  }
};
var ParameterVersionNotFound = class _ParameterVersionNotFound extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ParameterVersionNotFound",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ParameterVersionNotFound");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _ParameterVersionNotFound.prototype);
  }
};
var ServiceSettingNotFound = class _ServiceSettingNotFound extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ServiceSettingNotFound",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ServiceSettingNotFound");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ServiceSettingNotFound.prototype);
    this.Message = opts.Message;
  }
};
var ParameterVersionLabelLimitExceeded = class _ParameterVersionLabelLimitExceeded extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ParameterVersionLabelLimitExceeded",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ParameterVersionLabelLimitExceeded");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _ParameterVersionLabelLimitExceeded.prototype);
  }
};
var AssociationFilterKey = {
  AssociationId: "AssociationId",
  AssociationName: "AssociationName",
  InstanceId: "InstanceId",
  LastExecutedAfter: "LastExecutedAfter",
  LastExecutedBefore: "LastExecutedBefore",
  Name: "Name",
  ResourceGroupName: "ResourceGroupName",
  Status: "AssociationStatusName"
};
var CommandFilterKey = {
  DOCUMENT_NAME: "DocumentName",
  EXECUTION_STAGE: "ExecutionStage",
  INVOKED_AFTER: "InvokedAfter",
  INVOKED_BEFORE: "InvokedBefore",
  STATUS: "Status"
};
var CommandPluginStatus = {
  CANCELLED: "Cancelled",
  FAILED: "Failed",
  IN_PROGRESS: "InProgress",
  PENDING: "Pending",
  SUCCESS: "Success",
  TIMED_OUT: "TimedOut"
};
var CommandStatus = {
  CANCELLED: "Cancelled",
  CANCELLING: "Cancelling",
  FAILED: "Failed",
  IN_PROGRESS: "InProgress",
  PENDING: "Pending",
  SUCCESS: "Success",
  TIMED_OUT: "TimedOut"
};
var ComplianceQueryOperatorType = {
  BeginWith: "BEGIN_WITH",
  Equal: "EQUAL",
  GreaterThan: "GREATER_THAN",
  LessThan: "LESS_THAN",
  NotEqual: "NOT_EQUAL"
};
var ComplianceSeverity = {
  Critical: "CRITICAL",
  High: "HIGH",
  Informational: "INFORMATIONAL",
  Low: "LOW",
  Medium: "MEDIUM",
  Unspecified: "UNSPECIFIED"
};
var ComplianceStatus = {
  Compliant: "COMPLIANT",
  NonCompliant: "NON_COMPLIANT"
};
var DocumentMetadataEnum = {
  DocumentReviews: "DocumentReviews"
};
var DocumentReviewCommentType = {
  Comment: "Comment"
};
var DocumentFilterKey = {
  DocumentType: "DocumentType",
  Name: "Name",
  Owner: "Owner",
  PlatformTypes: "PlatformTypes"
};
var NodeFilterKey = {
  ACCOUNT_ID: "AccountId",
  AGENT_TYPE: "AgentType",
  AGENT_VERSION: "AgentVersion",
  COMPUTER_NAME: "ComputerName",
  INSTANCE_ID: "InstanceId",
  INSTANCE_STATUS: "InstanceStatus",
  IP_ADDRESS: "IpAddress",
  MANAGED_STATUS: "ManagedStatus",
  ORGANIZATIONAL_UNIT_ID: "OrganizationalUnitId",
  ORGANIZATIONAL_UNIT_PATH: "OrganizationalUnitPath",
  PLATFORM_NAME: "PlatformName",
  PLATFORM_TYPE: "PlatformType",
  PLATFORM_VERSION: "PlatformVersion",
  REGION: "Region",
  RESOURCE_TYPE: "ResourceType"
};
var NodeFilterOperatorType = {
  BEGIN_WITH: "BeginWith",
  EQUAL: "Equal",
  NOT_EQUAL: "NotEqual"
};
var ManagedStatus = {
  ALL: "All",
  MANAGED: "Managed",
  UNMANAGED: "Unmanaged"
};
var NodeType;
(function(NodeType2) {
  NodeType2.visit = (value, visitor) => {
    if (value.Instance !== void 0)
      return visitor.Instance(value.Instance);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };
})(NodeType || (NodeType = {}));
var UnsupportedOperationException = class _UnsupportedOperationException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "UnsupportedOperationException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "UnsupportedOperationException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _UnsupportedOperationException.prototype);
    this.Message = opts.Message;
  }
};
var NodeAggregatorType = {
  COUNT: "Count"
};
var NodeAttributeName = {
  AGENT_VERSION: "AgentVersion",
  PLATFORM_NAME: "PlatformName",
  PLATFORM_TYPE: "PlatformType",
  PLATFORM_VERSION: "PlatformVersion",
  REGION: "Region",
  RESOURCE_TYPE: "ResourceType"
};
var NodeTypeName = {
  INSTANCE: "Instance"
};
var OpsItemEventFilterKey = {
  OPSITEM_ID: "OpsItemId"
};
var OpsItemEventFilterOperator = {
  EQUAL: "Equal"
};
var OpsItemRelatedItemsFilterKey = {
  ASSOCIATION_ID: "AssociationId",
  RESOURCE_TYPE: "ResourceType",
  RESOURCE_URI: "ResourceUri"
};
var OpsItemRelatedItemsFilterOperator = {
  EQUAL: "Equal"
};
var LastResourceDataSyncStatus = {
  FAILED: "Failed",
  INPROGRESS: "InProgress",
  SUCCESSFUL: "Successful"
};
var DocumentPermissionLimit = class _DocumentPermissionLimit extends SSMServiceException {
  constructor(opts) {
    super({
      name: "DocumentPermissionLimit",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "DocumentPermissionLimit");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _DocumentPermissionLimit.prototype);
    this.Message = opts.Message;
  }
};
var ComplianceTypeCountLimitExceededException = class _ComplianceTypeCountLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ComplianceTypeCountLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ComplianceTypeCountLimitExceededException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ComplianceTypeCountLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidItemContentException = class _InvalidItemContentException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidItemContentException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidItemContentException");
    __publicField(this, "$fault", "client");
    __publicField(this, "TypeName");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidItemContentException.prototype);
    this.TypeName = opts.TypeName;
    this.Message = opts.Message;
  }
};
var ItemSizeLimitExceededException = class _ItemSizeLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ItemSizeLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ItemSizeLimitExceededException");
    __publicField(this, "$fault", "client");
    __publicField(this, "TypeName");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ItemSizeLimitExceededException.prototype);
    this.TypeName = opts.TypeName;
    this.Message = opts.Message;
  }
};
var ComplianceUploadType = {
  Complete: "COMPLETE",
  Partial: "PARTIAL"
};
var TotalSizeLimitExceededException = class _TotalSizeLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "TotalSizeLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "TotalSizeLimitExceededException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _TotalSizeLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var CustomSchemaCountLimitExceededException = class _CustomSchemaCountLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "CustomSchemaCountLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "CustomSchemaCountLimitExceededException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _CustomSchemaCountLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidInventoryItemContextException = class _InvalidInventoryItemContextException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidInventoryItemContextException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidInventoryItemContextException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidInventoryItemContextException.prototype);
    this.Message = opts.Message;
  }
};
var ItemContentMismatchException = class _ItemContentMismatchException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ItemContentMismatchException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ItemContentMismatchException");
    __publicField(this, "$fault", "client");
    __publicField(this, "TypeName");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ItemContentMismatchException.prototype);
    this.TypeName = opts.TypeName;
    this.Message = opts.Message;
  }
};
var SubTypeCountLimitExceededException = class _SubTypeCountLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "SubTypeCountLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "SubTypeCountLimitExceededException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _SubTypeCountLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var UnsupportedInventoryItemContextException = class _UnsupportedInventoryItemContextException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "UnsupportedInventoryItemContextException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "UnsupportedInventoryItemContextException");
    __publicField(this, "$fault", "client");
    __publicField(this, "TypeName");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _UnsupportedInventoryItemContextException.prototype);
    this.TypeName = opts.TypeName;
    this.Message = opts.Message;
  }
};
var UnsupportedInventorySchemaVersionException = class _UnsupportedInventorySchemaVersionException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "UnsupportedInventorySchemaVersionException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "UnsupportedInventorySchemaVersionException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _UnsupportedInventorySchemaVersionException.prototype);
    this.Message = opts.Message;
  }
};
var HierarchyLevelLimitExceededException = class _HierarchyLevelLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "HierarchyLevelLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "HierarchyLevelLimitExceededException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _HierarchyLevelLimitExceededException.prototype);
  }
};
var HierarchyTypeMismatchException = class _HierarchyTypeMismatchException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "HierarchyTypeMismatchException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "HierarchyTypeMismatchException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _HierarchyTypeMismatchException.prototype);
  }
};
var IncompatiblePolicyException = class _IncompatiblePolicyException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "IncompatiblePolicyException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "IncompatiblePolicyException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _IncompatiblePolicyException.prototype);
  }
};
var InvalidAllowedPatternException = class _InvalidAllowedPatternException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidAllowedPatternException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidAllowedPatternException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidAllowedPatternException.prototype);
  }
};
var InvalidPolicyAttributeException = class _InvalidPolicyAttributeException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidPolicyAttributeException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidPolicyAttributeException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidPolicyAttributeException.prototype);
  }
};
var InvalidPolicyTypeException = class _InvalidPolicyTypeException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidPolicyTypeException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidPolicyTypeException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidPolicyTypeException.prototype);
  }
};
var ParameterAlreadyExists = class _ParameterAlreadyExists extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ParameterAlreadyExists",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ParameterAlreadyExists");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _ParameterAlreadyExists.prototype);
  }
};
var ParameterLimitExceeded = class _ParameterLimitExceeded extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ParameterLimitExceeded",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ParameterLimitExceeded");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _ParameterLimitExceeded.prototype);
  }
};
var ParameterMaxVersionLimitExceeded = class _ParameterMaxVersionLimitExceeded extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ParameterMaxVersionLimitExceeded",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ParameterMaxVersionLimitExceeded");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _ParameterMaxVersionLimitExceeded.prototype);
  }
};
var ParameterPatternMismatchException = class _ParameterPatternMismatchException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ParameterPatternMismatchException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ParameterPatternMismatchException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _ParameterPatternMismatchException.prototype);
  }
};
var PoliciesLimitExceededException = class _PoliciesLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "PoliciesLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "PoliciesLimitExceededException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _PoliciesLimitExceededException.prototype);
  }
};
var UnsupportedParameterType = class _UnsupportedParameterType extends SSMServiceException {
  constructor(opts) {
    super({
      name: "UnsupportedParameterType",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "UnsupportedParameterType");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _UnsupportedParameterType.prototype);
  }
};
var ResourcePolicyLimitExceededException = class _ResourcePolicyLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourcePolicyLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourcePolicyLimitExceededException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Limit");
    __publicField(this, "LimitType");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourcePolicyLimitExceededException.prototype);
    this.Limit = opts.Limit;
    this.LimitType = opts.LimitType;
    this.Message = opts.Message;
  }
};
var FeatureNotAvailableException = class _FeatureNotAvailableException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "FeatureNotAvailableException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "FeatureNotAvailableException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _FeatureNotAvailableException.prototype);
    this.Message = opts.Message;
  }
};
var MaintenanceWindowTargetFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING },
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var DescribeMaintenanceWindowTargetsResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Targets && { Targets: obj.Targets.map((item) => MaintenanceWindowTargetFilterSensitiveLog(item)) }
});
var MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Values && { Values: SENSITIVE_STRING }
});
var MaintenanceWindowTaskFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.TaskParameters && { TaskParameters: SENSITIVE_STRING },
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var DescribeMaintenanceWindowTasksResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Tasks && { Tasks: obj.Tasks.map((item) => MaintenanceWindowTaskFilterSensitiveLog(item)) }
});
var BaselineOverrideFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }
});
var GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog = (obj) => ({
  ...obj
});
var GetMaintenanceWindowResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.TaskParameters && { TaskParameters: SENSITIVE_STRING }
});
var GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: SENSITIVE_STRING },
  ...obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING }
});
var MaintenanceWindowLambdaParametersFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Payload && { Payload: SENSITIVE_STRING }
});
var MaintenanceWindowRunCommandParametersFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: SENSITIVE_STRING }
});
var MaintenanceWindowStepFunctionsParametersFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Input && { Input: SENSITIVE_STRING }
});
var MaintenanceWindowTaskInvocationParametersFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.RunCommand && { RunCommand: MaintenanceWindowRunCommandParametersFilterSensitiveLog(obj.RunCommand) },
  ...obj.StepFunctions && {
    StepFunctions: MaintenanceWindowStepFunctionsParametersFilterSensitiveLog(obj.StepFunctions)
  },
  ...obj.Lambda && { Lambda: MaintenanceWindowLambdaParametersFilterSensitiveLog(obj.Lambda) }
});
var GetMaintenanceWindowTaskResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.TaskParameters && { TaskParameters: SENSITIVE_STRING },
  ...obj.TaskInvocationParameters && {
    TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters)
  },
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var ParameterFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Value && { Value: SENSITIVE_STRING }
});
var GetParameterResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameter && { Parameter: ParameterFilterSensitiveLog(obj.Parameter) }
});
var ParameterHistoryFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Value && { Value: SENSITIVE_STRING }
});
var GetParameterHistoryResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: obj.Parameters.map((item) => ParameterHistoryFilterSensitiveLog(item)) }
});
var GetParametersResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: obj.Parameters.map((item) => ParameterFilterSensitiveLog(item)) }
});
var GetParametersByPathResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: obj.Parameters.map((item) => ParameterFilterSensitiveLog(item)) }
});
var GetPatchBaselineResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }
});
var AssociationVersionInfoFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: SENSITIVE_STRING }
});
var ListAssociationVersionsResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.AssociationVersions && {
    AssociationVersions: obj.AssociationVersions.map((item) => AssociationVersionInfoFilterSensitiveLog(item))
  }
});
var CommandFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: SENSITIVE_STRING }
});
var ListCommandsResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Commands && { Commands: obj.Commands.map((item) => CommandFilterSensitiveLog(item)) }
});
var InstanceInfoFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.IpAddress && { IpAddress: SENSITIVE_STRING }
});
var NodeTypeFilterSensitiveLog = (obj) => {
  if (obj.Instance !== void 0)
    return { Instance: InstanceInfoFilterSensitiveLog(obj.Instance) };
  if (obj.$unknown !== void 0)
    return { [obj.$unknown[0]]: "UNKNOWN" };
};
var NodeFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.NodeType && { NodeType: NodeTypeFilterSensitiveLog(obj.NodeType) }
});
var ListNodesResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Nodes && { Nodes: obj.Nodes.map((item) => NodeFilterSensitiveLog(item)) }
});
var PutParameterRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Value && { Value: SENSITIVE_STRING }
});
var RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING },
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.TaskParameters && { TaskParameters: SENSITIVE_STRING },
  ...obj.TaskInvocationParameters && {
    TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters)
  },
  ...obj.Description && { Description: SENSITIVE_STRING }
});

// node_modules/@aws-sdk/client-ssm/dist-es/models/models_2.js
var AutomationStepNotFoundException = class _AutomationStepNotFoundException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AutomationStepNotFoundException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AutomationStepNotFoundException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _AutomationStepNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidAutomationSignalException = class _InvalidAutomationSignalException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidAutomationSignalException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidAutomationSignalException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidAutomationSignalException.prototype);
    this.Message = opts.Message;
  }
};
var SignalType = {
  APPROVE: "Approve",
  REJECT: "Reject",
  RESUME: "Resume",
  START_STEP: "StartStep",
  STOP_STEP: "StopStep"
};
var InvalidNotificationConfig = class _InvalidNotificationConfig extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidNotificationConfig",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidNotificationConfig");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidNotificationConfig.prototype);
    this.Message = opts.Message;
  }
};
var InvalidOutputFolder = class _InvalidOutputFolder extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidOutputFolder",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidOutputFolder");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _InvalidOutputFolder.prototype);
  }
};
var InvalidRole = class _InvalidRole extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidRole",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidRole");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidRole.prototype);
    this.Message = opts.Message;
  }
};
var InvalidAssociation = class _InvalidAssociation extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidAssociation",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidAssociation");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidAssociation.prototype);
    this.Message = opts.Message;
  }
};
var AutomationDefinitionNotFoundException = class _AutomationDefinitionNotFoundException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AutomationDefinitionNotFoundException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AutomationDefinitionNotFoundException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _AutomationDefinitionNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var AutomationDefinitionVersionNotFoundException = class _AutomationDefinitionVersionNotFoundException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AutomationDefinitionVersionNotFoundException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AutomationDefinitionVersionNotFoundException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _AutomationDefinitionVersionNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var AutomationExecutionLimitExceededException = class _AutomationExecutionLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AutomationExecutionLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AutomationExecutionLimitExceededException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _AutomationExecutionLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidAutomationExecutionParametersException = class _InvalidAutomationExecutionParametersException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidAutomationExecutionParametersException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidAutomationExecutionParametersException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidAutomationExecutionParametersException.prototype);
    this.Message = opts.Message;
  }
};
var AutomationDefinitionNotApprovedException = class _AutomationDefinitionNotApprovedException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AutomationDefinitionNotApprovedException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AutomationDefinitionNotApprovedException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _AutomationDefinitionNotApprovedException.prototype);
    this.Message = opts.Message;
  }
};
var ExecutionInputs;
(function(ExecutionInputs2) {
  ExecutionInputs2.visit = (value, visitor) => {
    if (value.Automation !== void 0)
      return visitor.Automation(value.Automation);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };
})(ExecutionInputs || (ExecutionInputs = {}));
var ValidationException = class _ValidationException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ValidationException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    __publicField(this, "ReasonCode");
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.Message = opts.Message;
    this.ReasonCode = opts.ReasonCode;
  }
};
var TargetNotConnected = class _TargetNotConnected extends SSMServiceException {
  constructor(opts) {
    super({
      name: "TargetNotConnected",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "TargetNotConnected");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _TargetNotConnected.prototype);
    this.Message = opts.Message;
  }
};
var InvalidAutomationStatusUpdateException = class _InvalidAutomationStatusUpdateException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidAutomationStatusUpdateException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidAutomationStatusUpdateException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidAutomationStatusUpdateException.prototype);
    this.Message = opts.Message;
  }
};
var StopType = {
  CANCEL: "Cancel",
  COMPLETE: "Complete"
};
var AssociationVersionLimitExceeded = class _AssociationVersionLimitExceeded extends SSMServiceException {
  constructor(opts) {
    super({
      name: "AssociationVersionLimitExceeded",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "AssociationVersionLimitExceeded");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _AssociationVersionLimitExceeded.prototype);
    this.Message = opts.Message;
  }
};
var InvalidUpdate = class _InvalidUpdate extends SSMServiceException {
  constructor(opts) {
    super({
      name: "InvalidUpdate",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "InvalidUpdate");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _InvalidUpdate.prototype);
    this.Message = opts.Message;
  }
};
var StatusUnchanged = class _StatusUnchanged extends SSMServiceException {
  constructor(opts) {
    super({
      name: "StatusUnchanged",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "StatusUnchanged");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _StatusUnchanged.prototype);
  }
};
var DocumentVersionLimitExceeded = class _DocumentVersionLimitExceeded extends SSMServiceException {
  constructor(opts) {
    super({
      name: "DocumentVersionLimitExceeded",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "DocumentVersionLimitExceeded");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _DocumentVersionLimitExceeded.prototype);
    this.Message = opts.Message;
  }
};
var DuplicateDocumentContent = class _DuplicateDocumentContent extends SSMServiceException {
  constructor(opts) {
    super({
      name: "DuplicateDocumentContent",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "DuplicateDocumentContent");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _DuplicateDocumentContent.prototype);
    this.Message = opts.Message;
  }
};
var DuplicateDocumentVersionName = class _DuplicateDocumentVersionName extends SSMServiceException {
  constructor(opts) {
    super({
      name: "DuplicateDocumentVersionName",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "DuplicateDocumentVersionName");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _DuplicateDocumentVersionName.prototype);
    this.Message = opts.Message;
  }
};
var DocumentReviewAction = {
  Approve: "Approve",
  Reject: "Reject",
  SendForReview: "SendForReview",
  UpdateReview: "UpdateReview"
};
var OpsMetadataKeyLimitExceededException = class _OpsMetadataKeyLimitExceededException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "OpsMetadataKeyLimitExceededException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "OpsMetadataKeyLimitExceededException");
    __publicField(this, "$fault", "client");
    Object.setPrototypeOf(this, _OpsMetadataKeyLimitExceededException.prototype);
  }
};
var ResourceDataSyncConflictException = class _ResourceDataSyncConflictException extends SSMServiceException {
  constructor(opts) {
    super({
      name: "ResourceDataSyncConflictException",
      $fault: "client",
      ...opts
    });
    __publicField(this, "name", "ResourceDataSyncConflictException");
    __publicField(this, "$fault", "client");
    __publicField(this, "Message");
    Object.setPrototypeOf(this, _ResourceDataSyncConflictException.prototype);
    this.Message = opts.Message;
  }
};
var SendCommandRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: SENSITIVE_STRING }
});
var SendCommandResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Command && { Command: CommandFilterSensitiveLog(obj.Command) }
});
var UpdateAssociationRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Parameters && { Parameters: SENSITIVE_STRING }
});
var UpdateAssociationResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.AssociationDescription && {
    AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription)
  }
});
var UpdateAssociationStatusResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.AssociationDescription && {
    AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription)
  }
});
var UpdateMaintenanceWindowRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var UpdateMaintenanceWindowResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var UpdateMaintenanceWindowTargetRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING },
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var UpdateMaintenanceWindowTargetResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING },
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var UpdateMaintenanceWindowTaskRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.TaskParameters && { TaskParameters: SENSITIVE_STRING },
  ...obj.TaskInvocationParameters && {
    TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters)
  },
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var UpdateMaintenanceWindowTaskResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.TaskParameters && { TaskParameters: SENSITIVE_STRING },
  ...obj.TaskInvocationParameters && {
    TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters)
  },
  ...obj.Description && { Description: SENSITIVE_STRING }
});
var UpdatePatchBaselineRequestFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }
});
var UpdatePatchBaselineResultFilterSensitiveLog = (obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }
});

// node_modules/@aws-sdk/client-ssm/dist-es/protocols/Aws_json1_1.js
var se_AddTagsToResourceCommand = async (input, context) => {
  const headers = sharedHeaders("AddTagsToResource");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_AssociateOpsItemRelatedItemCommand = async (input, context) => {
  const headers = sharedHeaders("AssociateOpsItemRelatedItem");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CancelCommandCommand = async (input, context) => {
  const headers = sharedHeaders("CancelCommand");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CancelMaintenanceWindowExecutionCommand = async (input, context) => {
  const headers = sharedHeaders("CancelMaintenanceWindowExecution");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CreateActivationCommand = async (input, context) => {
  const headers = sharedHeaders("CreateActivation");
  let body;
  body = JSON.stringify(se_CreateActivationRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CreateAssociationCommand = async (input, context) => {
  const headers = sharedHeaders("CreateAssociation");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CreateAssociationBatchCommand = async (input, context) => {
  const headers = sharedHeaders("CreateAssociationBatch");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CreateDocumentCommand = async (input, context) => {
  const headers = sharedHeaders("CreateDocument");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CreateMaintenanceWindowCommand = async (input, context) => {
  const headers = sharedHeaders("CreateMaintenanceWindow");
  let body;
  body = JSON.stringify(se_CreateMaintenanceWindowRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CreateOpsItemCommand = async (input, context) => {
  const headers = sharedHeaders("CreateOpsItem");
  let body;
  body = JSON.stringify(se_CreateOpsItemRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CreateOpsMetadataCommand = async (input, context) => {
  const headers = sharedHeaders("CreateOpsMetadata");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CreatePatchBaselineCommand = async (input, context) => {
  const headers = sharedHeaders("CreatePatchBaseline");
  let body;
  body = JSON.stringify(se_CreatePatchBaselineRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_CreateResourceDataSyncCommand = async (input, context) => {
  const headers = sharedHeaders("CreateResourceDataSync");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteActivationCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteActivation");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteAssociationCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteAssociation");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteDocumentCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteDocument");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteInventoryCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteInventory");
  let body;
  body = JSON.stringify(se_DeleteInventoryRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteMaintenanceWindowCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteMaintenanceWindow");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteOpsItemCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteOpsItem");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteOpsMetadataCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteOpsMetadata");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteParameterCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteParameter");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteParametersCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteParameters");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeletePatchBaselineCommand = async (input, context) => {
  const headers = sharedHeaders("DeletePatchBaseline");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteResourceDataSyncCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteResourceDataSync");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeleteResourcePolicyCommand = async (input, context) => {
  const headers = sharedHeaders("DeleteResourcePolicy");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeregisterManagedInstanceCommand = async (input, context) => {
  const headers = sharedHeaders("DeregisterManagedInstance");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeregisterPatchBaselineForPatchGroupCommand = async (input, context) => {
  const headers = sharedHeaders("DeregisterPatchBaselineForPatchGroup");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeregisterTargetFromMaintenanceWindowCommand = async (input, context) => {
  const headers = sharedHeaders("DeregisterTargetFromMaintenanceWindow");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DeregisterTaskFromMaintenanceWindowCommand = async (input, context) => {
  const headers = sharedHeaders("DeregisterTaskFromMaintenanceWindow");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeActivationsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeActivations");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeAssociationCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeAssociation");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeAssociationExecutionsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeAssociationExecutions");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeAssociationExecutionTargetsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeAssociationExecutionTargets");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeAutomationExecutionsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeAutomationExecutions");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeAutomationStepExecutionsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeAutomationStepExecutions");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeAvailablePatchesCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeAvailablePatches");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeDocumentCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeDocument");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeDocumentPermissionCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeDocumentPermission");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeEffectiveInstanceAssociationsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeEffectiveInstanceAssociations");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeEffectivePatchesForPatchBaselineCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeEffectivePatchesForPatchBaseline");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeInstanceAssociationsStatusCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeInstanceAssociationsStatus");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeInstanceInformationCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeInstanceInformation");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeInstancePatchesCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeInstancePatches");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeInstancePatchStatesCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeInstancePatchStates");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeInstancePatchStatesForPatchGroupCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeInstancePatchStatesForPatchGroup");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeInstancePropertiesCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeInstanceProperties");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeInventoryDeletionsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeInventoryDeletions");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeMaintenanceWindowExecutionsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeMaintenanceWindowExecutions");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeMaintenanceWindowExecutionTaskInvocationsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeMaintenanceWindowExecutionTaskInvocations");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeMaintenanceWindowExecutionTasksCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeMaintenanceWindowExecutionTasks");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeMaintenanceWindowsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeMaintenanceWindows");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeMaintenanceWindowScheduleCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeMaintenanceWindowSchedule");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeMaintenanceWindowsForTargetCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeMaintenanceWindowsForTarget");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeMaintenanceWindowTargetsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeMaintenanceWindowTargets");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeMaintenanceWindowTasksCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeMaintenanceWindowTasks");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeOpsItemsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeOpsItems");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeParametersCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeParameters");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribePatchBaselinesCommand = async (input, context) => {
  const headers = sharedHeaders("DescribePatchBaselines");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribePatchGroupsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribePatchGroups");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribePatchGroupStateCommand = async (input, context) => {
  const headers = sharedHeaders("DescribePatchGroupState");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribePatchPropertiesCommand = async (input, context) => {
  const headers = sharedHeaders("DescribePatchProperties");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DescribeSessionsCommand = async (input, context) => {
  const headers = sharedHeaders("DescribeSessions");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_DisassociateOpsItemRelatedItemCommand = async (input, context) => {
  const headers = sharedHeaders("DisassociateOpsItemRelatedItem");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetAutomationExecutionCommand = async (input, context) => {
  const headers = sharedHeaders("GetAutomationExecution");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetCalendarStateCommand = async (input, context) => {
  const headers = sharedHeaders("GetCalendarState");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetCommandInvocationCommand = async (input, context) => {
  const headers = sharedHeaders("GetCommandInvocation");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetConnectionStatusCommand = async (input, context) => {
  const headers = sharedHeaders("GetConnectionStatus");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetDefaultPatchBaselineCommand = async (input, context) => {
  const headers = sharedHeaders("GetDefaultPatchBaseline");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetDeployablePatchSnapshotForInstanceCommand = async (input, context) => {
  const headers = sharedHeaders("GetDeployablePatchSnapshotForInstance");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetDocumentCommand = async (input, context) => {
  const headers = sharedHeaders("GetDocument");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetExecutionPreviewCommand = async (input, context) => {
  const headers = sharedHeaders("GetExecutionPreview");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetInventoryCommand = async (input, context) => {
  const headers = sharedHeaders("GetInventory");
  let body;
  body = JSON.stringify(se_GetInventoryRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetInventorySchemaCommand = async (input, context) => {
  const headers = sharedHeaders("GetInventorySchema");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetMaintenanceWindowCommand = async (input, context) => {
  const headers = sharedHeaders("GetMaintenanceWindow");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetMaintenanceWindowExecutionCommand = async (input, context) => {
  const headers = sharedHeaders("GetMaintenanceWindowExecution");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetMaintenanceWindowExecutionTaskCommand = async (input, context) => {
  const headers = sharedHeaders("GetMaintenanceWindowExecutionTask");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetMaintenanceWindowExecutionTaskInvocationCommand = async (input, context) => {
  const headers = sharedHeaders("GetMaintenanceWindowExecutionTaskInvocation");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetMaintenanceWindowTaskCommand = async (input, context) => {
  const headers = sharedHeaders("GetMaintenanceWindowTask");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetOpsItemCommand = async (input, context) => {
  const headers = sharedHeaders("GetOpsItem");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetOpsMetadataCommand = async (input, context) => {
  const headers = sharedHeaders("GetOpsMetadata");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetOpsSummaryCommand = async (input, context) => {
  const headers = sharedHeaders("GetOpsSummary");
  let body;
  body = JSON.stringify(se_GetOpsSummaryRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetParameterCommand = async (input, context) => {
  const headers = sharedHeaders("GetParameter");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetParameterHistoryCommand = async (input, context) => {
  const headers = sharedHeaders("GetParameterHistory");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetParametersCommand = async (input, context) => {
  const headers = sharedHeaders("GetParameters");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetParametersByPathCommand = async (input, context) => {
  const headers = sharedHeaders("GetParametersByPath");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetPatchBaselineCommand = async (input, context) => {
  const headers = sharedHeaders("GetPatchBaseline");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetPatchBaselineForPatchGroupCommand = async (input, context) => {
  const headers = sharedHeaders("GetPatchBaselineForPatchGroup");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetResourcePoliciesCommand = async (input, context) => {
  const headers = sharedHeaders("GetResourcePolicies");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_GetServiceSettingCommand = async (input, context) => {
  const headers = sharedHeaders("GetServiceSetting");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_LabelParameterVersionCommand = async (input, context) => {
  const headers = sharedHeaders("LabelParameterVersion");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListAssociationsCommand = async (input, context) => {
  const headers = sharedHeaders("ListAssociations");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListAssociationVersionsCommand = async (input, context) => {
  const headers = sharedHeaders("ListAssociationVersions");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListCommandInvocationsCommand = async (input, context) => {
  const headers = sharedHeaders("ListCommandInvocations");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListCommandsCommand = async (input, context) => {
  const headers = sharedHeaders("ListCommands");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListComplianceItemsCommand = async (input, context) => {
  const headers = sharedHeaders("ListComplianceItems");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListComplianceSummariesCommand = async (input, context) => {
  const headers = sharedHeaders("ListComplianceSummaries");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListDocumentMetadataHistoryCommand = async (input, context) => {
  const headers = sharedHeaders("ListDocumentMetadataHistory");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListDocumentsCommand = async (input, context) => {
  const headers = sharedHeaders("ListDocuments");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListDocumentVersionsCommand = async (input, context) => {
  const headers = sharedHeaders("ListDocumentVersions");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListInventoryEntriesCommand = async (input, context) => {
  const headers = sharedHeaders("ListInventoryEntries");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListNodesCommand = async (input, context) => {
  const headers = sharedHeaders("ListNodes");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListNodesSummaryCommand = async (input, context) => {
  const headers = sharedHeaders("ListNodesSummary");
  let body;
  body = JSON.stringify(se_ListNodesSummaryRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListOpsItemEventsCommand = async (input, context) => {
  const headers = sharedHeaders("ListOpsItemEvents");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListOpsItemRelatedItemsCommand = async (input, context) => {
  const headers = sharedHeaders("ListOpsItemRelatedItems");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListOpsMetadataCommand = async (input, context) => {
  const headers = sharedHeaders("ListOpsMetadata");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListResourceComplianceSummariesCommand = async (input, context) => {
  const headers = sharedHeaders("ListResourceComplianceSummaries");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListResourceDataSyncCommand = async (input, context) => {
  const headers = sharedHeaders("ListResourceDataSync");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ListTagsForResourceCommand = async (input, context) => {
  const headers = sharedHeaders("ListTagsForResource");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ModifyDocumentPermissionCommand = async (input, context) => {
  const headers = sharedHeaders("ModifyDocumentPermission");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_PutComplianceItemsCommand = async (input, context) => {
  const headers = sharedHeaders("PutComplianceItems");
  let body;
  body = JSON.stringify(se_PutComplianceItemsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_PutInventoryCommand = async (input, context) => {
  const headers = sharedHeaders("PutInventory");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_PutParameterCommand = async (input, context) => {
  const headers = sharedHeaders("PutParameter");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_PutResourcePolicyCommand = async (input, context) => {
  const headers = sharedHeaders("PutResourcePolicy");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_RegisterDefaultPatchBaselineCommand = async (input, context) => {
  const headers = sharedHeaders("RegisterDefaultPatchBaseline");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_RegisterPatchBaselineForPatchGroupCommand = async (input, context) => {
  const headers = sharedHeaders("RegisterPatchBaselineForPatchGroup");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_RegisterTargetWithMaintenanceWindowCommand = async (input, context) => {
  const headers = sharedHeaders("RegisterTargetWithMaintenanceWindow");
  let body;
  body = JSON.stringify(se_RegisterTargetWithMaintenanceWindowRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_RegisterTaskWithMaintenanceWindowCommand = async (input, context) => {
  const headers = sharedHeaders("RegisterTaskWithMaintenanceWindow");
  let body;
  body = JSON.stringify(se_RegisterTaskWithMaintenanceWindowRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_RemoveTagsFromResourceCommand = async (input, context) => {
  const headers = sharedHeaders("RemoveTagsFromResource");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ResetServiceSettingCommand = async (input, context) => {
  const headers = sharedHeaders("ResetServiceSetting");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_ResumeSessionCommand = async (input, context) => {
  const headers = sharedHeaders("ResumeSession");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_SendAutomationSignalCommand = async (input, context) => {
  const headers = sharedHeaders("SendAutomationSignal");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_SendCommandCommand = async (input, context) => {
  const headers = sharedHeaders("SendCommand");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_StartAssociationsOnceCommand = async (input, context) => {
  const headers = sharedHeaders("StartAssociationsOnce");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_StartAutomationExecutionCommand = async (input, context) => {
  const headers = sharedHeaders("StartAutomationExecution");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_StartChangeRequestExecutionCommand = async (input, context) => {
  const headers = sharedHeaders("StartChangeRequestExecution");
  let body;
  body = JSON.stringify(se_StartChangeRequestExecutionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_StartExecutionPreviewCommand = async (input, context) => {
  const headers = sharedHeaders("StartExecutionPreview");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_StartSessionCommand = async (input, context) => {
  const headers = sharedHeaders("StartSession");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_StopAutomationExecutionCommand = async (input, context) => {
  const headers = sharedHeaders("StopAutomationExecution");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_TerminateSessionCommand = async (input, context) => {
  const headers = sharedHeaders("TerminateSession");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UnlabelParameterVersionCommand = async (input, context) => {
  const headers = sharedHeaders("UnlabelParameterVersion");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateAssociationCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateAssociation");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateAssociationStatusCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateAssociationStatus");
  let body;
  body = JSON.stringify(se_UpdateAssociationStatusRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateDocumentCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateDocument");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateDocumentDefaultVersionCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateDocumentDefaultVersion");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateDocumentMetadataCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateDocumentMetadata");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateMaintenanceWindowCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateMaintenanceWindow");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateMaintenanceWindowTargetCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateMaintenanceWindowTarget");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateMaintenanceWindowTaskCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateMaintenanceWindowTask");
  let body;
  body = JSON.stringify(se_UpdateMaintenanceWindowTaskRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateManagedInstanceRoleCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateManagedInstanceRole");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateOpsItemCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateOpsItem");
  let body;
  body = JSON.stringify(se_UpdateOpsItemRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateOpsMetadataCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateOpsMetadata");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdatePatchBaselineCommand = async (input, context) => {
  const headers = sharedHeaders("UpdatePatchBaseline");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateResourceDataSyncCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateResourceDataSync");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var se_UpdateServiceSettingCommand = async (input, context) => {
  const headers = sharedHeaders("UpdateServiceSetting");
  let body;
  body = JSON.stringify(_json(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
};
var de_AddTagsToResourceCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_AssociateOpsItemRelatedItemCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CancelCommandCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CancelMaintenanceWindowExecutionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CreateActivationCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CreateAssociationCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_CreateAssociationResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CreateAssociationBatchCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_CreateAssociationBatchResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CreateDocumentCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_CreateDocumentResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CreateMaintenanceWindowCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CreateOpsItemCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CreateOpsMetadataCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CreatePatchBaselineCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CreateResourceDataSyncCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteActivationCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteAssociationCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteDocumentCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteInventoryCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteMaintenanceWindowCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteOpsItemCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteOpsMetadataCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteParameterCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteParametersCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeletePatchBaselineCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteResourceDataSyncCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeleteResourcePolicyCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeregisterManagedInstanceCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeregisterPatchBaselineForPatchGroupCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeregisterTargetFromMaintenanceWindowCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DeregisterTaskFromMaintenanceWindowCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeActivationsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeActivationsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeAssociationCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeAssociationResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeAssociationExecutionsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeAssociationExecutionsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeAssociationExecutionTargetsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeAssociationExecutionTargetsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeAutomationExecutionsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeAutomationExecutionsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeAutomationStepExecutionsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeAutomationStepExecutionsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeAvailablePatchesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeAvailablePatchesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeDocumentCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeDocumentResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeDocumentPermissionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeEffectiveInstanceAssociationsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeEffectivePatchesForPatchBaselineCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeEffectivePatchesForPatchBaselineResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeInstanceAssociationsStatusCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeInstanceAssociationsStatusResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeInstanceInformationCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeInstanceInformationResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeInstancePatchesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeInstancePatchesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeInstancePatchStatesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeInstancePatchStatesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeInstancePatchStatesForPatchGroupCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeInstancePatchStatesForPatchGroupResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeInstancePropertiesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeInstancePropertiesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeInventoryDeletionsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeInventoryDeletionsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeMaintenanceWindowExecutionsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeMaintenanceWindowExecutionsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeMaintenanceWindowExecutionTaskInvocationsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeMaintenanceWindowExecutionTaskInvocationsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeMaintenanceWindowExecutionTasksCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeMaintenanceWindowExecutionTasksResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeMaintenanceWindowsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeMaintenanceWindowScheduleCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeMaintenanceWindowsForTargetCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeMaintenanceWindowTargetsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeMaintenanceWindowTasksCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeOpsItemsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeOpsItemsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeParametersCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeParametersResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribePatchBaselinesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribePatchGroupsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribePatchGroupStateCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribePatchPropertiesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DescribeSessionsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_DescribeSessionsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_DisassociateOpsItemRelatedItemCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetAutomationExecutionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetAutomationExecutionResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetCalendarStateCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetCommandInvocationCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetConnectionStatusCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetDefaultPatchBaselineCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetDeployablePatchSnapshotForInstanceCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetDocumentCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetDocumentResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetExecutionPreviewCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetExecutionPreviewResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetInventoryCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetInventorySchemaCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetMaintenanceWindowCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetMaintenanceWindowResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetMaintenanceWindowExecutionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetMaintenanceWindowExecutionResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetMaintenanceWindowExecutionTaskCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetMaintenanceWindowExecutionTaskResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetMaintenanceWindowExecutionTaskInvocationCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetMaintenanceWindowExecutionTaskInvocationResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetMaintenanceWindowTaskCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetMaintenanceWindowTaskResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetOpsItemCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetOpsItemResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetOpsMetadataCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetOpsSummaryCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetParameterCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetParameterResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetParameterHistoryCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetParameterHistoryResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetParametersCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetParametersResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetParametersByPathCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetParametersByPathResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetPatchBaselineCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetPatchBaselineResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetPatchBaselineForPatchGroupCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetResourcePoliciesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_GetServiceSettingCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_GetServiceSettingResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_LabelParameterVersionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListAssociationsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListAssociationsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListAssociationVersionsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListAssociationVersionsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListCommandInvocationsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListCommandInvocationsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListCommandsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListCommandsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListComplianceItemsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListComplianceItemsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListComplianceSummariesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListDocumentMetadataHistoryCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListDocumentMetadataHistoryResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListDocumentsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListDocumentsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListDocumentVersionsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListDocumentVersionsResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListInventoryEntriesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListNodesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListNodesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListNodesSummaryCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListOpsItemEventsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListOpsItemEventsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListOpsItemRelatedItemsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListOpsItemRelatedItemsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListOpsMetadataCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListOpsMetadataResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListResourceComplianceSummariesCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListResourceComplianceSummariesResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListResourceDataSyncCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ListResourceDataSyncResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ListTagsForResourceCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ModifyDocumentPermissionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_PutComplianceItemsCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_PutInventoryCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_PutParameterCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_PutResourcePolicyCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_RegisterDefaultPatchBaselineCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_RegisterPatchBaselineForPatchGroupCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_RegisterTargetWithMaintenanceWindowCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_RegisterTaskWithMaintenanceWindowCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_RemoveTagsFromResourceCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ResetServiceSettingCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_ResetServiceSettingResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_ResumeSessionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_SendAutomationSignalCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_SendCommandCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_SendCommandResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_StartAssociationsOnceCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_StartAutomationExecutionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_StartChangeRequestExecutionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_StartExecutionPreviewCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_StartSessionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_StopAutomationExecutionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_TerminateSessionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UnlabelParameterVersionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateAssociationCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_UpdateAssociationResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateAssociationStatusCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_UpdateAssociationStatusResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateDocumentCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_UpdateDocumentResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateDocumentDefaultVersionCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateDocumentMetadataCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateMaintenanceWindowCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateMaintenanceWindowTargetCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateMaintenanceWindowTaskCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_UpdateMaintenanceWindowTaskResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateManagedInstanceRoleCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateOpsItemCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateOpsMetadataCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdatePatchBaselineCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = de_UpdatePatchBaselineResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateResourceDataSyncCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_UpdateServiceSettingCommand = async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseJsonBody(output.body, context);
  let contents = {};
  contents = _json(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
};
var de_CommandError = async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseJsonErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalServerError":
    case "com.amazonaws.ssm#InternalServerError":
      throw await de_InternalServerErrorRes(parsedOutput, context);
    case "InvalidResourceId":
    case "com.amazonaws.ssm#InvalidResourceId":
      throw await de_InvalidResourceIdRes(parsedOutput, context);
    case "InvalidResourceType":
    case "com.amazonaws.ssm#InvalidResourceType":
      throw await de_InvalidResourceTypeRes(parsedOutput, context);
    case "TooManyTagsError":
    case "com.amazonaws.ssm#TooManyTagsError":
      throw await de_TooManyTagsErrorRes(parsedOutput, context);
    case "TooManyUpdates":
    case "com.amazonaws.ssm#TooManyUpdates":
      throw await de_TooManyUpdatesRes(parsedOutput, context);
    case "OpsItemConflictException":
    case "com.amazonaws.ssm#OpsItemConflictException":
      throw await de_OpsItemConflictExceptionRes(parsedOutput, context);
    case "OpsItemInvalidParameterException":
    case "com.amazonaws.ssm#OpsItemInvalidParameterException":
      throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);
    case "OpsItemLimitExceededException":
    case "com.amazonaws.ssm#OpsItemLimitExceededException":
      throw await de_OpsItemLimitExceededExceptionRes(parsedOutput, context);
    case "OpsItemNotFoundException":
    case "com.amazonaws.ssm#OpsItemNotFoundException":
      throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);
    case "OpsItemRelatedItemAlreadyExistsException":
    case "com.amazonaws.ssm#OpsItemRelatedItemAlreadyExistsException":
      throw await de_OpsItemRelatedItemAlreadyExistsExceptionRes(parsedOutput, context);
    case "DuplicateInstanceId":
    case "com.amazonaws.ssm#DuplicateInstanceId":
      throw await de_DuplicateInstanceIdRes(parsedOutput, context);
    case "InvalidCommandId":
    case "com.amazonaws.ssm#InvalidCommandId":
      throw await de_InvalidCommandIdRes(parsedOutput, context);
    case "InvalidInstanceId":
    case "com.amazonaws.ssm#InvalidInstanceId":
      throw await de_InvalidInstanceIdRes(parsedOutput, context);
    case "DoesNotExistException":
    case "com.amazonaws.ssm#DoesNotExistException":
      throw await de_DoesNotExistExceptionRes(parsedOutput, context);
    case "InvalidParameters":
    case "com.amazonaws.ssm#InvalidParameters":
      throw await de_InvalidParametersRes(parsedOutput, context);
    case "AssociationAlreadyExists":
    case "com.amazonaws.ssm#AssociationAlreadyExists":
      throw await de_AssociationAlreadyExistsRes(parsedOutput, context);
    case "AssociationLimitExceeded":
    case "com.amazonaws.ssm#AssociationLimitExceeded":
      throw await de_AssociationLimitExceededRes(parsedOutput, context);
    case "InvalidDocument":
    case "com.amazonaws.ssm#InvalidDocument":
      throw await de_InvalidDocumentRes(parsedOutput, context);
    case "InvalidDocumentVersion":
    case "com.amazonaws.ssm#InvalidDocumentVersion":
      throw await de_InvalidDocumentVersionRes(parsedOutput, context);
    case "InvalidOutputLocation":
    case "com.amazonaws.ssm#InvalidOutputLocation":
      throw await de_InvalidOutputLocationRes(parsedOutput, context);
    case "InvalidSchedule":
    case "com.amazonaws.ssm#InvalidSchedule":
      throw await de_InvalidScheduleRes(parsedOutput, context);
    case "InvalidTag":
    case "com.amazonaws.ssm#InvalidTag":
      throw await de_InvalidTagRes(parsedOutput, context);
    case "InvalidTarget":
    case "com.amazonaws.ssm#InvalidTarget":
      throw await de_InvalidTargetRes(parsedOutput, context);
    case "InvalidTargetMaps":
    case "com.amazonaws.ssm#InvalidTargetMaps":
      throw await de_InvalidTargetMapsRes(parsedOutput, context);
    case "UnsupportedPlatformType":
    case "com.amazonaws.ssm#UnsupportedPlatformType":
      throw await de_UnsupportedPlatformTypeRes(parsedOutput, context);
    case "DocumentAlreadyExists":
    case "com.amazonaws.ssm#DocumentAlreadyExists":
      throw await de_DocumentAlreadyExistsRes(parsedOutput, context);
    case "DocumentLimitExceeded":
    case "com.amazonaws.ssm#DocumentLimitExceeded":
      throw await de_DocumentLimitExceededRes(parsedOutput, context);
    case "InvalidDocumentContent":
    case "com.amazonaws.ssm#InvalidDocumentContent":
      throw await de_InvalidDocumentContentRes(parsedOutput, context);
    case "InvalidDocumentSchemaVersion":
    case "com.amazonaws.ssm#InvalidDocumentSchemaVersion":
      throw await de_InvalidDocumentSchemaVersionRes(parsedOutput, context);
    case "MaxDocumentSizeExceeded":
    case "com.amazonaws.ssm#MaxDocumentSizeExceeded":
      throw await de_MaxDocumentSizeExceededRes(parsedOutput, context);
    case "IdempotentParameterMismatch":
    case "com.amazonaws.ssm#IdempotentParameterMismatch":
      throw await de_IdempotentParameterMismatchRes(parsedOutput, context);
    case "ResourceLimitExceededException":
    case "com.amazonaws.ssm#ResourceLimitExceededException":
      throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);
    case "OpsItemAccessDeniedException":
    case "com.amazonaws.ssm#OpsItemAccessDeniedException":
      throw await de_OpsItemAccessDeniedExceptionRes(parsedOutput, context);
    case "OpsItemAlreadyExistsException":
    case "com.amazonaws.ssm#OpsItemAlreadyExistsException":
      throw await de_OpsItemAlreadyExistsExceptionRes(parsedOutput, context);
    case "OpsMetadataAlreadyExistsException":
    case "com.amazonaws.ssm#OpsMetadataAlreadyExistsException":
      throw await de_OpsMetadataAlreadyExistsExceptionRes(parsedOutput, context);
    case "OpsMetadataInvalidArgumentException":
    case "com.amazonaws.ssm#OpsMetadataInvalidArgumentException":
      throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);
    case "OpsMetadataLimitExceededException":
    case "com.amazonaws.ssm#OpsMetadataLimitExceededException":
      throw await de_OpsMetadataLimitExceededExceptionRes(parsedOutput, context);
    case "OpsMetadataTooManyUpdatesException":
    case "com.amazonaws.ssm#OpsMetadataTooManyUpdatesException":
      throw await de_OpsMetadataTooManyUpdatesExceptionRes(parsedOutput, context);
    case "ResourceDataSyncAlreadyExistsException":
    case "com.amazonaws.ssm#ResourceDataSyncAlreadyExistsException":
      throw await de_ResourceDataSyncAlreadyExistsExceptionRes(parsedOutput, context);
    case "ResourceDataSyncCountExceededException":
    case "com.amazonaws.ssm#ResourceDataSyncCountExceededException":
      throw await de_ResourceDataSyncCountExceededExceptionRes(parsedOutput, context);
    case "ResourceDataSyncInvalidConfigurationException":
    case "com.amazonaws.ssm#ResourceDataSyncInvalidConfigurationException":
      throw await de_ResourceDataSyncInvalidConfigurationExceptionRes(parsedOutput, context);
    case "InvalidActivation":
    case "com.amazonaws.ssm#InvalidActivation":
      throw await de_InvalidActivationRes(parsedOutput, context);
    case "InvalidActivationId":
    case "com.amazonaws.ssm#InvalidActivationId":
      throw await de_InvalidActivationIdRes(parsedOutput, context);
    case "AssociationDoesNotExist":
    case "com.amazonaws.ssm#AssociationDoesNotExist":
      throw await de_AssociationDoesNotExistRes(parsedOutput, context);
    case "AssociatedInstances":
    case "com.amazonaws.ssm#AssociatedInstances":
      throw await de_AssociatedInstancesRes(parsedOutput, context);
    case "InvalidDocumentOperation":
    case "com.amazonaws.ssm#InvalidDocumentOperation":
      throw await de_InvalidDocumentOperationRes(parsedOutput, context);
    case "InvalidDeleteInventoryParametersException":
    case "com.amazonaws.ssm#InvalidDeleteInventoryParametersException":
      throw await de_InvalidDeleteInventoryParametersExceptionRes(parsedOutput, context);
    case "InvalidInventoryRequestException":
    case "com.amazonaws.ssm#InvalidInventoryRequestException":
      throw await de_InvalidInventoryRequestExceptionRes(parsedOutput, context);
    case "InvalidOptionException":
    case "com.amazonaws.ssm#InvalidOptionException":
      throw await de_InvalidOptionExceptionRes(parsedOutput, context);
    case "InvalidTypeNameException":
    case "com.amazonaws.ssm#InvalidTypeNameException":
      throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);
    case "OpsMetadataNotFoundException":
    case "com.amazonaws.ssm#OpsMetadataNotFoundException":
      throw await de_OpsMetadataNotFoundExceptionRes(parsedOutput, context);
    case "ParameterNotFound":
    case "com.amazonaws.ssm#ParameterNotFound":
      throw await de_ParameterNotFoundRes(parsedOutput, context);
    case "ResourceInUseException":
    case "com.amazonaws.ssm#ResourceInUseException":
      throw await de_ResourceInUseExceptionRes(parsedOutput, context);
    case "ResourceDataSyncNotFoundException":
    case "com.amazonaws.ssm#ResourceDataSyncNotFoundException":
      throw await de_ResourceDataSyncNotFoundExceptionRes(parsedOutput, context);
    case "MalformedResourcePolicyDocumentException":
    case "com.amazonaws.ssm#MalformedResourcePolicyDocumentException":
      throw await de_MalformedResourcePolicyDocumentExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.ssm#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ResourcePolicyConflictException":
    case "com.amazonaws.ssm#ResourcePolicyConflictException":
      throw await de_ResourcePolicyConflictExceptionRes(parsedOutput, context);
    case "ResourcePolicyInvalidParameterException":
    case "com.amazonaws.ssm#ResourcePolicyInvalidParameterException":
      throw await de_ResourcePolicyInvalidParameterExceptionRes(parsedOutput, context);
    case "ResourcePolicyNotFoundException":
    case "com.amazonaws.ssm#ResourcePolicyNotFoundException":
      throw await de_ResourcePolicyNotFoundExceptionRes(parsedOutput, context);
    case "TargetInUseException":
    case "com.amazonaws.ssm#TargetInUseException":
      throw await de_TargetInUseExceptionRes(parsedOutput, context);
    case "InvalidFilter":
    case "com.amazonaws.ssm#InvalidFilter":
      throw await de_InvalidFilterRes(parsedOutput, context);
    case "InvalidNextToken":
    case "com.amazonaws.ssm#InvalidNextToken":
      throw await de_InvalidNextTokenRes(parsedOutput, context);
    case "InvalidAssociationVersion":
    case "com.amazonaws.ssm#InvalidAssociationVersion":
      throw await de_InvalidAssociationVersionRes(parsedOutput, context);
    case "AssociationExecutionDoesNotExist":
    case "com.amazonaws.ssm#AssociationExecutionDoesNotExist":
      throw await de_AssociationExecutionDoesNotExistRes(parsedOutput, context);
    case "InvalidFilterKey":
    case "com.amazonaws.ssm#InvalidFilterKey":
      throw await de_InvalidFilterKeyRes(parsedOutput, context);
    case "InvalidFilterValue":
    case "com.amazonaws.ssm#InvalidFilterValue":
      throw await de_InvalidFilterValueRes(parsedOutput, context);
    case "AutomationExecutionNotFoundException":
    case "com.amazonaws.ssm#AutomationExecutionNotFoundException":
      throw await de_AutomationExecutionNotFoundExceptionRes(parsedOutput, context);
    case "InvalidPermissionType":
    case "com.amazonaws.ssm#InvalidPermissionType":
      throw await de_InvalidPermissionTypeRes(parsedOutput, context);
    case "UnsupportedOperatingSystem":
    case "com.amazonaws.ssm#UnsupportedOperatingSystem":
      throw await de_UnsupportedOperatingSystemRes(parsedOutput, context);
    case "InvalidInstanceInformationFilterValue":
    case "com.amazonaws.ssm#InvalidInstanceInformationFilterValue":
      throw await de_InvalidInstanceInformationFilterValueRes(parsedOutput, context);
    case "InvalidInstancePropertyFilterValue":
    case "com.amazonaws.ssm#InvalidInstancePropertyFilterValue":
      throw await de_InvalidInstancePropertyFilterValueRes(parsedOutput, context);
    case "InvalidDeletionIdException":
    case "com.amazonaws.ssm#InvalidDeletionIdException":
      throw await de_InvalidDeletionIdExceptionRes(parsedOutput, context);
    case "InvalidFilterOption":
    case "com.amazonaws.ssm#InvalidFilterOption":
      throw await de_InvalidFilterOptionRes(parsedOutput, context);
    case "OpsItemRelatedItemAssociationNotFoundException":
    case "com.amazonaws.ssm#OpsItemRelatedItemAssociationNotFoundException":
      throw await de_OpsItemRelatedItemAssociationNotFoundExceptionRes(parsedOutput, context);
    case "InvalidDocumentType":
    case "com.amazonaws.ssm#InvalidDocumentType":
      throw await de_InvalidDocumentTypeRes(parsedOutput, context);
    case "UnsupportedCalendarException":
    case "com.amazonaws.ssm#UnsupportedCalendarException":
      throw await de_UnsupportedCalendarExceptionRes(parsedOutput, context);
    case "InvalidPluginName":
    case "com.amazonaws.ssm#InvalidPluginName":
      throw await de_InvalidPluginNameRes(parsedOutput, context);
    case "InvocationDoesNotExist":
    case "com.amazonaws.ssm#InvocationDoesNotExist":
      throw await de_InvocationDoesNotExistRes(parsedOutput, context);
    case "UnsupportedFeatureRequiredException":
    case "com.amazonaws.ssm#UnsupportedFeatureRequiredException":
      throw await de_UnsupportedFeatureRequiredExceptionRes(parsedOutput, context);
    case "InvalidAggregatorException":
    case "com.amazonaws.ssm#InvalidAggregatorException":
      throw await de_InvalidAggregatorExceptionRes(parsedOutput, context);
    case "InvalidInventoryGroupException":
    case "com.amazonaws.ssm#InvalidInventoryGroupException":
      throw await de_InvalidInventoryGroupExceptionRes(parsedOutput, context);
    case "InvalidResultAttributeException":
    case "com.amazonaws.ssm#InvalidResultAttributeException":
      throw await de_InvalidResultAttributeExceptionRes(parsedOutput, context);
    case "InvalidKeyId":
    case "com.amazonaws.ssm#InvalidKeyId":
      throw await de_InvalidKeyIdRes(parsedOutput, context);
    case "ParameterVersionNotFound":
    case "com.amazonaws.ssm#ParameterVersionNotFound":
      throw await de_ParameterVersionNotFoundRes(parsedOutput, context);
    case "ServiceSettingNotFound":
    case "com.amazonaws.ssm#ServiceSettingNotFound":
      throw await de_ServiceSettingNotFoundRes(parsedOutput, context);
    case "ParameterVersionLabelLimitExceeded":
    case "com.amazonaws.ssm#ParameterVersionLabelLimitExceeded":
      throw await de_ParameterVersionLabelLimitExceededRes(parsedOutput, context);
    case "UnsupportedOperationException":
    case "com.amazonaws.ssm#UnsupportedOperationException":
      throw await de_UnsupportedOperationExceptionRes(parsedOutput, context);
    case "DocumentPermissionLimit":
    case "com.amazonaws.ssm#DocumentPermissionLimit":
      throw await de_DocumentPermissionLimitRes(parsedOutput, context);
    case "ComplianceTypeCountLimitExceededException":
    case "com.amazonaws.ssm#ComplianceTypeCountLimitExceededException":
      throw await de_ComplianceTypeCountLimitExceededExceptionRes(parsedOutput, context);
    case "InvalidItemContentException":
    case "com.amazonaws.ssm#InvalidItemContentException":
      throw await de_InvalidItemContentExceptionRes(parsedOutput, context);
    case "ItemSizeLimitExceededException":
    case "com.amazonaws.ssm#ItemSizeLimitExceededException":
      throw await de_ItemSizeLimitExceededExceptionRes(parsedOutput, context);
    case "TotalSizeLimitExceededException":
    case "com.amazonaws.ssm#TotalSizeLimitExceededException":
      throw await de_TotalSizeLimitExceededExceptionRes(parsedOutput, context);
    case "CustomSchemaCountLimitExceededException":
    case "com.amazonaws.ssm#CustomSchemaCountLimitExceededException":
      throw await de_CustomSchemaCountLimitExceededExceptionRes(parsedOutput, context);
    case "InvalidInventoryItemContextException":
    case "com.amazonaws.ssm#InvalidInventoryItemContextException":
      throw await de_InvalidInventoryItemContextExceptionRes(parsedOutput, context);
    case "ItemContentMismatchException":
    case "com.amazonaws.ssm#ItemContentMismatchException":
      throw await de_ItemContentMismatchExceptionRes(parsedOutput, context);
    case "SubTypeCountLimitExceededException":
    case "com.amazonaws.ssm#SubTypeCountLimitExceededException":
      throw await de_SubTypeCountLimitExceededExceptionRes(parsedOutput, context);
    case "UnsupportedInventoryItemContextException":
    case "com.amazonaws.ssm#UnsupportedInventoryItemContextException":
      throw await de_UnsupportedInventoryItemContextExceptionRes(parsedOutput, context);
    case "UnsupportedInventorySchemaVersionException":
    case "com.amazonaws.ssm#UnsupportedInventorySchemaVersionException":
      throw await de_UnsupportedInventorySchemaVersionExceptionRes(parsedOutput, context);
    case "HierarchyLevelLimitExceededException":
    case "com.amazonaws.ssm#HierarchyLevelLimitExceededException":
      throw await de_HierarchyLevelLimitExceededExceptionRes(parsedOutput, context);
    case "HierarchyTypeMismatchException":
    case "com.amazonaws.ssm#HierarchyTypeMismatchException":
      throw await de_HierarchyTypeMismatchExceptionRes(parsedOutput, context);
    case "IncompatiblePolicyException":
    case "com.amazonaws.ssm#IncompatiblePolicyException":
      throw await de_IncompatiblePolicyExceptionRes(parsedOutput, context);
    case "InvalidAllowedPatternException":
    case "com.amazonaws.ssm#InvalidAllowedPatternException":
      throw await de_InvalidAllowedPatternExceptionRes(parsedOutput, context);
    case "InvalidPolicyAttributeException":
    case "com.amazonaws.ssm#InvalidPolicyAttributeException":
      throw await de_InvalidPolicyAttributeExceptionRes(parsedOutput, context);
    case "InvalidPolicyTypeException":
    case "com.amazonaws.ssm#InvalidPolicyTypeException":
      throw await de_InvalidPolicyTypeExceptionRes(parsedOutput, context);
    case "ParameterAlreadyExists":
    case "com.amazonaws.ssm#ParameterAlreadyExists":
      throw await de_ParameterAlreadyExistsRes(parsedOutput, context);
    case "ParameterLimitExceeded":
    case "com.amazonaws.ssm#ParameterLimitExceeded":
      throw await de_ParameterLimitExceededRes(parsedOutput, context);
    case "ParameterMaxVersionLimitExceeded":
    case "com.amazonaws.ssm#ParameterMaxVersionLimitExceeded":
      throw await de_ParameterMaxVersionLimitExceededRes(parsedOutput, context);
    case "ParameterPatternMismatchException":
    case "com.amazonaws.ssm#ParameterPatternMismatchException":
      throw await de_ParameterPatternMismatchExceptionRes(parsedOutput, context);
    case "PoliciesLimitExceededException":
    case "com.amazonaws.ssm#PoliciesLimitExceededException":
      throw await de_PoliciesLimitExceededExceptionRes(parsedOutput, context);
    case "UnsupportedParameterType":
    case "com.amazonaws.ssm#UnsupportedParameterType":
      throw await de_UnsupportedParameterTypeRes(parsedOutput, context);
    case "ResourcePolicyLimitExceededException":
    case "com.amazonaws.ssm#ResourcePolicyLimitExceededException":
      throw await de_ResourcePolicyLimitExceededExceptionRes(parsedOutput, context);
    case "AlreadyExistsException":
    case "com.amazonaws.ssm#AlreadyExistsException":
      throw await de_AlreadyExistsExceptionRes(parsedOutput, context);
    case "FeatureNotAvailableException":
    case "com.amazonaws.ssm#FeatureNotAvailableException":
      throw await de_FeatureNotAvailableExceptionRes(parsedOutput, context);
    case "AutomationStepNotFoundException":
    case "com.amazonaws.ssm#AutomationStepNotFoundException":
      throw await de_AutomationStepNotFoundExceptionRes(parsedOutput, context);
    case "InvalidAutomationSignalException":
    case "com.amazonaws.ssm#InvalidAutomationSignalException":
      throw await de_InvalidAutomationSignalExceptionRes(parsedOutput, context);
    case "InvalidNotificationConfig":
    case "com.amazonaws.ssm#InvalidNotificationConfig":
      throw await de_InvalidNotificationConfigRes(parsedOutput, context);
    case "InvalidOutputFolder":
    case "com.amazonaws.ssm#InvalidOutputFolder":
      throw await de_InvalidOutputFolderRes(parsedOutput, context);
    case "InvalidRole":
    case "com.amazonaws.ssm#InvalidRole":
      throw await de_InvalidRoleRes(parsedOutput, context);
    case "InvalidAssociation":
    case "com.amazonaws.ssm#InvalidAssociation":
      throw await de_InvalidAssociationRes(parsedOutput, context);
    case "AutomationDefinitionNotFoundException":
    case "com.amazonaws.ssm#AutomationDefinitionNotFoundException":
      throw await de_AutomationDefinitionNotFoundExceptionRes(parsedOutput, context);
    case "AutomationDefinitionVersionNotFoundException":
    case "com.amazonaws.ssm#AutomationDefinitionVersionNotFoundException":
      throw await de_AutomationDefinitionVersionNotFoundExceptionRes(parsedOutput, context);
    case "AutomationExecutionLimitExceededException":
    case "com.amazonaws.ssm#AutomationExecutionLimitExceededException":
      throw await de_AutomationExecutionLimitExceededExceptionRes(parsedOutput, context);
    case "InvalidAutomationExecutionParametersException":
    case "com.amazonaws.ssm#InvalidAutomationExecutionParametersException":
      throw await de_InvalidAutomationExecutionParametersExceptionRes(parsedOutput, context);
    case "AutomationDefinitionNotApprovedException":
    case "com.amazonaws.ssm#AutomationDefinitionNotApprovedException":
      throw await de_AutomationDefinitionNotApprovedExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.ssm#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "TargetNotConnected":
    case "com.amazonaws.ssm#TargetNotConnected":
      throw await de_TargetNotConnectedRes(parsedOutput, context);
    case "InvalidAutomationStatusUpdateException":
    case "com.amazonaws.ssm#InvalidAutomationStatusUpdateException":
      throw await de_InvalidAutomationStatusUpdateExceptionRes(parsedOutput, context);
    case "AssociationVersionLimitExceeded":
    case "com.amazonaws.ssm#AssociationVersionLimitExceeded":
      throw await de_AssociationVersionLimitExceededRes(parsedOutput, context);
    case "InvalidUpdate":
    case "com.amazonaws.ssm#InvalidUpdate":
      throw await de_InvalidUpdateRes(parsedOutput, context);
    case "StatusUnchanged":
    case "com.amazonaws.ssm#StatusUnchanged":
      throw await de_StatusUnchangedRes(parsedOutput, context);
    case "DocumentVersionLimitExceeded":
    case "com.amazonaws.ssm#DocumentVersionLimitExceeded":
      throw await de_DocumentVersionLimitExceededRes(parsedOutput, context);
    case "DuplicateDocumentContent":
    case "com.amazonaws.ssm#DuplicateDocumentContent":
      throw await de_DuplicateDocumentContentRes(parsedOutput, context);
    case "DuplicateDocumentVersionName":
    case "com.amazonaws.ssm#DuplicateDocumentVersionName":
      throw await de_DuplicateDocumentVersionNameRes(parsedOutput, context);
    case "OpsMetadataKeyLimitExceededException":
    case "com.amazonaws.ssm#OpsMetadataKeyLimitExceededException":
      throw await de_OpsMetadataKeyLimitExceededExceptionRes(parsedOutput, context);
    case "ResourceDataSyncConflictException":
    case "com.amazonaws.ssm#ResourceDataSyncConflictException":
      throw await de_ResourceDataSyncConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
};
var de_AlreadyExistsExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AssociatedInstancesRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AssociatedInstances({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AssociationAlreadyExistsRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AssociationAlreadyExists({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AssociationDoesNotExistRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AssociationDoesNotExist({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AssociationExecutionDoesNotExistRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AssociationExecutionDoesNotExist({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AssociationLimitExceededRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AssociationLimitExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AssociationVersionLimitExceededRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AssociationVersionLimitExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AutomationDefinitionNotApprovedExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AutomationDefinitionNotApprovedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AutomationDefinitionNotFoundExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AutomationDefinitionNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AutomationDefinitionVersionNotFoundExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AutomationDefinitionVersionNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AutomationExecutionLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AutomationExecutionLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AutomationExecutionNotFoundExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AutomationExecutionNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_AutomationStepNotFoundExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new AutomationStepNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ComplianceTypeCountLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ComplianceTypeCountLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_CustomSchemaCountLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new CustomSchemaCountLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_DocumentAlreadyExistsRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new DocumentAlreadyExists({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_DocumentLimitExceededRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new DocumentLimitExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_DocumentPermissionLimitRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new DocumentPermissionLimit({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_DocumentVersionLimitExceededRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new DocumentVersionLimitExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_DoesNotExistExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new DoesNotExistException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_DuplicateDocumentContentRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new DuplicateDocumentContent({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_DuplicateDocumentVersionNameRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new DuplicateDocumentVersionName({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_DuplicateInstanceIdRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new DuplicateInstanceId({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_FeatureNotAvailableExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new FeatureNotAvailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_HierarchyLevelLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new HierarchyLevelLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_HierarchyTypeMismatchExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new HierarchyTypeMismatchException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_IdempotentParameterMismatchRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new IdempotentParameterMismatch({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_IncompatiblePolicyExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new IncompatiblePolicyException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InternalServerErrorRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InternalServerError({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidActivationRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidActivation({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidActivationIdRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidActivationId({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidAggregatorExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidAggregatorException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidAllowedPatternExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidAllowedPatternException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidAssociationRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidAssociation({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidAssociationVersionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidAssociationVersion({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidAutomationExecutionParametersExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidAutomationExecutionParametersException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidAutomationSignalExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidAutomationSignalException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidAutomationStatusUpdateExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidAutomationStatusUpdateException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidCommandIdRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidCommandId({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidDeleteInventoryParametersExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidDeleteInventoryParametersException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidDeletionIdExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidDeletionIdException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidDocumentRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidDocument({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidDocumentContentRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidDocumentContent({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidDocumentOperationRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidDocumentOperation({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidDocumentSchemaVersionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidDocumentSchemaVersion({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidDocumentTypeRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidDocumentType({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidDocumentVersionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidDocumentVersion({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidFilterRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidFilter({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidFilterKeyRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidFilterKey({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidFilterOptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidFilterOption({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidFilterValueRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidFilterValue({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidInstanceIdRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidInstanceId({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidInstanceInformationFilterValueRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidInstanceInformationFilterValue({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidInstancePropertyFilterValueRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidInstancePropertyFilterValue({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidInventoryGroupExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidInventoryGroupException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidInventoryItemContextExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidInventoryItemContextException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidInventoryRequestExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidInventoryRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidItemContentExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidItemContentException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidKeyIdRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidKeyId({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidNextTokenRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidNextToken({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidNotificationConfigRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidNotificationConfig({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidOptionExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidOptionException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidOutputFolderRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidOutputFolder({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidOutputLocationRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidOutputLocation({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidParametersRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidParameters({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidPermissionTypeRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidPermissionType({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidPluginNameRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidPluginName({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidPolicyAttributeExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidPolicyAttributeException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidPolicyTypeExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidPolicyTypeException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidResourceIdRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidResourceId({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidResourceTypeRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidResourceType({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidResultAttributeExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidResultAttributeException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidRoleRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidRole({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidScheduleRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidSchedule({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidTagRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidTag({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidTargetRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidTarget({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidTargetMapsRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidTargetMaps({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidTypeNameExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidTypeNameException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvalidUpdateRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvalidUpdate({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_InvocationDoesNotExistRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new InvocationDoesNotExist({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ItemContentMismatchExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ItemContentMismatchException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ItemSizeLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ItemSizeLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_MalformedResourcePolicyDocumentExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new MalformedResourcePolicyDocumentException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_MaxDocumentSizeExceededRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new MaxDocumentSizeExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsItemAccessDeniedExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsItemAccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsItemAlreadyExistsExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsItemAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsItemConflictExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsItemConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsItemInvalidParameterExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsItemInvalidParameterException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsItemLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsItemLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsItemNotFoundExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsItemNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsItemRelatedItemAlreadyExistsExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsItemRelatedItemAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsItemRelatedItemAssociationNotFoundExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsItemRelatedItemAssociationNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsMetadataAlreadyExistsExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsMetadataAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsMetadataInvalidArgumentExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsMetadataInvalidArgumentException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsMetadataKeyLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsMetadataKeyLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsMetadataLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsMetadataLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsMetadataNotFoundExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsMetadataNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_OpsMetadataTooManyUpdatesExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new OpsMetadataTooManyUpdatesException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ParameterAlreadyExistsRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ParameterAlreadyExists({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ParameterLimitExceededRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ParameterLimitExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ParameterMaxVersionLimitExceededRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ParameterMaxVersionLimitExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ParameterNotFoundRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ParameterNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ParameterPatternMismatchExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ParameterPatternMismatchException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ParameterVersionLabelLimitExceededRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ParameterVersionLabelLimitExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ParameterVersionNotFoundRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ParameterVersionNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_PoliciesLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new PoliciesLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourceDataSyncAlreadyExistsExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourceDataSyncAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourceDataSyncConflictExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourceDataSyncConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourceDataSyncCountExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourceDataSyncCountExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourceDataSyncInvalidConfigurationExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourceDataSyncInvalidConfigurationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourceDataSyncNotFoundExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourceDataSyncNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourceInUseExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourceInUseException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourceLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourceLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourcePolicyConflictExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourcePolicyConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourcePolicyInvalidParameterExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourcePolicyInvalidParameterException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourcePolicyLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourcePolicyLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ResourcePolicyNotFoundExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ResourcePolicyNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ServiceSettingNotFoundRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ServiceSettingNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_StatusUnchangedRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new StatusUnchanged({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_SubTypeCountLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new SubTypeCountLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_TargetInUseExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new TargetInUseException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_TargetNotConnectedRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new TargetNotConnected({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_TooManyTagsErrorRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new TooManyTagsError({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_TooManyUpdatesRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new TooManyUpdates({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_TotalSizeLimitExceededExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new TotalSizeLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_UnsupportedCalendarExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new UnsupportedCalendarException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_UnsupportedFeatureRequiredExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new UnsupportedFeatureRequiredException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_UnsupportedInventoryItemContextExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new UnsupportedInventoryItemContextException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_UnsupportedInventorySchemaVersionExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new UnsupportedInventorySchemaVersionException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_UnsupportedOperatingSystemRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new UnsupportedOperatingSystem({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_UnsupportedOperationExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new UnsupportedOperationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_UnsupportedParameterTypeRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new UnsupportedParameterType({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_UnsupportedPlatformTypeRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new UnsupportedPlatformType({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var de_ValidationExceptionRes = async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = _json(body);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return decorateServiceException(exception, body);
};
var se_AssociationStatus = (input, context) => {
  return take(input, {
    AdditionalInfo: [],
    Date: (_) => _.getTime() / 1e3,
    Message: [],
    Name: []
  });
};
var se_ComplianceExecutionSummary = (input, context) => {
  return take(input, {
    ExecutionId: [],
    ExecutionTime: (_) => _.getTime() / 1e3,
    ExecutionType: []
  });
};
var se_CreateActivationRequest = (input, context) => {
  return take(input, {
    DefaultInstanceName: [],
    Description: [],
    ExpirationDate: (_) => _.getTime() / 1e3,
    IamRole: [],
    RegistrationLimit: [],
    RegistrationMetadata: _json,
    Tags: _json
  });
};
var se_CreateMaintenanceWindowRequest = (input, context) => {
  return take(input, {
    AllowUnassociatedTargets: [],
    ClientToken: [true, (_) => _ ?? v4_default()],
    Cutoff: [],
    Description: [],
    Duration: [],
    EndDate: [],
    Name: [],
    Schedule: [],
    ScheduleOffset: [],
    ScheduleTimezone: [],
    StartDate: [],
    Tags: _json
  });
};
var se_CreateOpsItemRequest = (input, context) => {
  return take(input, {
    AccountId: [],
    ActualEndTime: (_) => _.getTime() / 1e3,
    ActualStartTime: (_) => _.getTime() / 1e3,
    Category: [],
    Description: [],
    Notifications: _json,
    OperationalData: _json,
    OpsItemType: [],
    PlannedEndTime: (_) => _.getTime() / 1e3,
    PlannedStartTime: (_) => _.getTime() / 1e3,
    Priority: [],
    RelatedOpsItems: _json,
    Severity: [],
    Source: [],
    Tags: _json,
    Title: []
  });
};
var se_CreatePatchBaselineRequest = (input, context) => {
  return take(input, {
    ApprovalRules: _json,
    ApprovedPatches: _json,
    ApprovedPatchesComplianceLevel: [],
    ApprovedPatchesEnableNonSecurity: [],
    ClientToken: [true, (_) => _ ?? v4_default()],
    Description: [],
    GlobalFilters: _json,
    Name: [],
    OperatingSystem: [],
    RejectedPatches: _json,
    RejectedPatchesAction: [],
    Sources: _json,
    Tags: _json
  });
};
var se_DeleteInventoryRequest = (input, context) => {
  return take(input, {
    ClientToken: [true, (_) => _ ?? v4_default()],
    DryRun: [],
    SchemaDeleteOption: [],
    TypeName: []
  });
};
var se_GetInventoryRequest = (input, context) => {
  return take(input, {
    Aggregators: (_) => se_InventoryAggregatorList(_, context),
    Filters: _json,
    MaxResults: [],
    NextToken: [],
    ResultAttributes: _json
  });
};
var se_GetOpsSummaryRequest = (input, context) => {
  return take(input, {
    Aggregators: (_) => se_OpsAggregatorList(_, context),
    Filters: _json,
    MaxResults: [],
    NextToken: [],
    ResultAttributes: _json,
    SyncName: []
  });
};
var se_InventoryAggregator = (input, context) => {
  return take(input, {
    Aggregators: (_) => se_InventoryAggregatorList(_, context),
    Expression: [],
    Groups: _json
  });
};
var se_InventoryAggregatorList = (input, context) => {
  return input.filter((e2) => e2 != null).map((entry) => {
    return se_InventoryAggregator(entry, context);
  });
};
var se_ListNodesSummaryRequest = (input, context) => {
  return take(input, {
    Aggregators: (_) => se_NodeAggregatorList(_, context),
    Filters: _json,
    MaxResults: [],
    NextToken: [],
    SyncName: []
  });
};
var se_MaintenanceWindowLambdaParameters = (input, context) => {
  return take(input, {
    ClientContext: [],
    Payload: context.base64Encoder,
    Qualifier: []
  });
};
var se_MaintenanceWindowTaskInvocationParameters = (input, context) => {
  return take(input, {
    Automation: _json,
    Lambda: (_) => se_MaintenanceWindowLambdaParameters(_, context),
    RunCommand: _json,
    StepFunctions: _json
  });
};
var se_NodeAggregator = (input, context) => {
  return take(input, {
    AggregatorType: [],
    Aggregators: (_) => se_NodeAggregatorList(_, context),
    AttributeName: [],
    TypeName: []
  });
};
var se_NodeAggregatorList = (input, context) => {
  return input.filter((e2) => e2 != null).map((entry) => {
    return se_NodeAggregator(entry, context);
  });
};
var se_OpsAggregator = (input, context) => {
  return take(input, {
    AggregatorType: [],
    Aggregators: (_) => se_OpsAggregatorList(_, context),
    AttributeName: [],
    Filters: _json,
    TypeName: [],
    Values: _json
  });
};
var se_OpsAggregatorList = (input, context) => {
  return input.filter((e2) => e2 != null).map((entry) => {
    return se_OpsAggregator(entry, context);
  });
};
var se_PutComplianceItemsRequest = (input, context) => {
  return take(input, {
    ComplianceType: [],
    ExecutionSummary: (_) => se_ComplianceExecutionSummary(_, context),
    ItemContentHash: [],
    Items: _json,
    ResourceId: [],
    ResourceType: [],
    UploadType: []
  });
};
var se_RegisterTargetWithMaintenanceWindowRequest = (input, context) => {
  return take(input, {
    ClientToken: [true, (_) => _ ?? v4_default()],
    Description: [],
    Name: [],
    OwnerInformation: [],
    ResourceType: [],
    Targets: _json,
    WindowId: []
  });
};
var se_RegisterTaskWithMaintenanceWindowRequest = (input, context) => {
  return take(input, {
    AlarmConfiguration: _json,
    ClientToken: [true, (_) => _ ?? v4_default()],
    CutoffBehavior: [],
    Description: [],
    LoggingInfo: _json,
    MaxConcurrency: [],
    MaxErrors: [],
    Name: [],
    Priority: [],
    ServiceRoleArn: [],
    Targets: _json,
    TaskArn: [],
    TaskInvocationParameters: (_) => se_MaintenanceWindowTaskInvocationParameters(_, context),
    TaskParameters: _json,
    TaskType: [],
    WindowId: []
  });
};
var se_StartChangeRequestExecutionRequest = (input, context) => {
  return take(input, {
    AutoApprove: [],
    ChangeDetails: [],
    ChangeRequestName: [],
    ClientToken: [],
    DocumentName: [],
    DocumentVersion: [],
    Parameters: _json,
    Runbooks: _json,
    ScheduledEndTime: (_) => _.getTime() / 1e3,
    ScheduledTime: (_) => _.getTime() / 1e3,
    Tags: _json
  });
};
var se_UpdateAssociationStatusRequest = (input, context) => {
  return take(input, {
    AssociationStatus: (_) => se_AssociationStatus(_, context),
    InstanceId: [],
    Name: []
  });
};
var se_UpdateMaintenanceWindowTaskRequest = (input, context) => {
  return take(input, {
    AlarmConfiguration: _json,
    CutoffBehavior: [],
    Description: [],
    LoggingInfo: _json,
    MaxConcurrency: [],
    MaxErrors: [],
    Name: [],
    Priority: [],
    Replace: [],
    ServiceRoleArn: [],
    Targets: _json,
    TaskArn: [],
    TaskInvocationParameters: (_) => se_MaintenanceWindowTaskInvocationParameters(_, context),
    TaskParameters: _json,
    WindowId: [],
    WindowTaskId: []
  });
};
var se_UpdateOpsItemRequest = (input, context) => {
  return take(input, {
    ActualEndTime: (_) => _.getTime() / 1e3,
    ActualStartTime: (_) => _.getTime() / 1e3,
    Category: [],
    Description: [],
    Notifications: _json,
    OperationalData: _json,
    OperationalDataToDelete: _json,
    OpsItemArn: [],
    OpsItemId: [],
    PlannedEndTime: (_) => _.getTime() / 1e3,
    PlannedStartTime: (_) => _.getTime() / 1e3,
    Priority: [],
    RelatedOpsItems: _json,
    Severity: [],
    Status: [],
    Title: []
  });
};
var de_Activation = (output, context) => {
  return take(output, {
    ActivationId: expectString,
    CreatedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    DefaultInstanceName: expectString,
    Description: expectString,
    ExpirationDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Expired: expectBoolean,
    IamRole: expectString,
    RegistrationLimit: expectInt32,
    RegistrationsCount: expectInt32,
    Tags: _json
  });
};
var de_ActivationList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_Activation(entry, context);
  });
  return retVal;
};
var de_Association = (output, context) => {
  return take(output, {
    AssociationId: expectString,
    AssociationName: expectString,
    AssociationVersion: expectString,
    DocumentVersion: expectString,
    Duration: expectInt32,
    InstanceId: expectString,
    LastExecutionDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Name: expectString,
    Overview: _json,
    ScheduleExpression: expectString,
    ScheduleOffset: expectInt32,
    TargetMaps: _json,
    Targets: _json
  });
};
var de_AssociationDescription = (output, context) => {
  return take(output, {
    AlarmConfiguration: _json,
    ApplyOnlyAtCronInterval: expectBoolean,
    AssociationId: expectString,
    AssociationName: expectString,
    AssociationVersion: expectString,
    AutomationTargetParameterName: expectString,
    CalendarNames: _json,
    ComplianceSeverity: expectString,
    Date: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    DocumentVersion: expectString,
    Duration: expectInt32,
    InstanceId: expectString,
    LastExecutionDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastSuccessfulExecutionDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastUpdateAssociationDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    MaxConcurrency: expectString,
    MaxErrors: expectString,
    Name: expectString,
    OutputLocation: _json,
    Overview: _json,
    Parameters: _json,
    ScheduleExpression: expectString,
    ScheduleOffset: expectInt32,
    Status: (_) => de_AssociationStatus(_, context),
    SyncCompliance: expectString,
    TargetLocations: _json,
    TargetMaps: _json,
    Targets: _json,
    TriggeredAlarms: _json
  });
};
var de_AssociationDescriptionList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_AssociationDescription(entry, context);
  });
  return retVal;
};
var de_AssociationExecution = (output, context) => {
  return take(output, {
    AlarmConfiguration: _json,
    AssociationId: expectString,
    AssociationVersion: expectString,
    CreatedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    DetailedStatus: expectString,
    ExecutionId: expectString,
    LastExecutionDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ResourceCountByStatus: expectString,
    Status: expectString,
    TriggeredAlarms: _json
  });
};
var de_AssociationExecutionsList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_AssociationExecution(entry, context);
  });
  return retVal;
};
var de_AssociationExecutionTarget = (output, context) => {
  return take(output, {
    AssociationId: expectString,
    AssociationVersion: expectString,
    DetailedStatus: expectString,
    ExecutionId: expectString,
    LastExecutionDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    OutputSource: _json,
    ResourceId: expectString,
    ResourceType: expectString,
    Status: expectString
  });
};
var de_AssociationExecutionTargetsList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_AssociationExecutionTarget(entry, context);
  });
  return retVal;
};
var de_AssociationList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_Association(entry, context);
  });
  return retVal;
};
var de_AssociationStatus = (output, context) => {
  return take(output, {
    AdditionalInfo: expectString,
    Date: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Message: expectString,
    Name: expectString
  });
};
var de_AssociationVersionInfo = (output, context) => {
  return take(output, {
    ApplyOnlyAtCronInterval: expectBoolean,
    AssociationId: expectString,
    AssociationName: expectString,
    AssociationVersion: expectString,
    CalendarNames: _json,
    ComplianceSeverity: expectString,
    CreatedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    DocumentVersion: expectString,
    Duration: expectInt32,
    MaxConcurrency: expectString,
    MaxErrors: expectString,
    Name: expectString,
    OutputLocation: _json,
    Parameters: _json,
    ScheduleExpression: expectString,
    ScheduleOffset: expectInt32,
    SyncCompliance: expectString,
    TargetLocations: _json,
    TargetMaps: _json,
    Targets: _json
  });
};
var de_AssociationVersionList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_AssociationVersionInfo(entry, context);
  });
  return retVal;
};
var de_AutomationExecution = (output, context) => {
  return take(output, {
    AlarmConfiguration: _json,
    AssociationId: expectString,
    AutomationExecutionId: expectString,
    AutomationExecutionStatus: expectString,
    AutomationSubtype: expectString,
    ChangeRequestName: expectString,
    CurrentAction: expectString,
    CurrentStepName: expectString,
    DocumentName: expectString,
    DocumentVersion: expectString,
    ExecutedBy: expectString,
    ExecutionEndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ExecutionStartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    FailureMessage: expectString,
    MaxConcurrency: expectString,
    MaxErrors: expectString,
    Mode: expectString,
    OpsItemId: expectString,
    Outputs: _json,
    Parameters: _json,
    ParentAutomationExecutionId: expectString,
    ProgressCounters: _json,
    ResolvedTargets: _json,
    Runbooks: _json,
    ScheduledTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    StepExecutions: (_) => de_StepExecutionList(_, context),
    StepExecutionsTruncated: expectBoolean,
    Target: expectString,
    TargetLocations: _json,
    TargetLocationsURL: expectString,
    TargetMaps: _json,
    TargetParameterName: expectString,
    Targets: _json,
    TriggeredAlarms: _json,
    Variables: _json
  });
};
var de_AutomationExecutionMetadata = (output, context) => {
  return take(output, {
    AlarmConfiguration: _json,
    AssociationId: expectString,
    AutomationExecutionId: expectString,
    AutomationExecutionStatus: expectString,
    AutomationSubtype: expectString,
    AutomationType: expectString,
    ChangeRequestName: expectString,
    CurrentAction: expectString,
    CurrentStepName: expectString,
    DocumentName: expectString,
    DocumentVersion: expectString,
    ExecutedBy: expectString,
    ExecutionEndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ExecutionStartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    FailureMessage: expectString,
    LogFile: expectString,
    MaxConcurrency: expectString,
    MaxErrors: expectString,
    Mode: expectString,
    OpsItemId: expectString,
    Outputs: _json,
    ParentAutomationExecutionId: expectString,
    ResolvedTargets: _json,
    Runbooks: _json,
    ScheduledTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Target: expectString,
    TargetLocationsURL: expectString,
    TargetMaps: _json,
    TargetParameterName: expectString,
    Targets: _json,
    TriggeredAlarms: _json
  });
};
var de_AutomationExecutionMetadataList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_AutomationExecutionMetadata(entry, context);
  });
  return retVal;
};
var de_Command = (output, context) => {
  return take(output, {
    AlarmConfiguration: _json,
    CloudWatchOutputConfig: _json,
    CommandId: expectString,
    Comment: expectString,
    CompletedCount: expectInt32,
    DeliveryTimedOutCount: expectInt32,
    DocumentName: expectString,
    DocumentVersion: expectString,
    ErrorCount: expectInt32,
    ExpiresAfter: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    InstanceIds: _json,
    MaxConcurrency: expectString,
    MaxErrors: expectString,
    NotificationConfig: _json,
    OutputS3BucketName: expectString,
    OutputS3KeyPrefix: expectString,
    OutputS3Region: expectString,
    Parameters: _json,
    RequestedDateTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ServiceRole: expectString,
    Status: expectString,
    StatusDetails: expectString,
    TargetCount: expectInt32,
    Targets: _json,
    TimeoutSeconds: expectInt32,
    TriggeredAlarms: _json
  });
};
var de_CommandInvocation = (output, context) => {
  return take(output, {
    CloudWatchOutputConfig: _json,
    CommandId: expectString,
    CommandPlugins: (_) => de_CommandPluginList(_, context),
    Comment: expectString,
    DocumentName: expectString,
    DocumentVersion: expectString,
    InstanceId: expectString,
    InstanceName: expectString,
    NotificationConfig: _json,
    RequestedDateTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ServiceRole: expectString,
    StandardErrorUrl: expectString,
    StandardOutputUrl: expectString,
    Status: expectString,
    StatusDetails: expectString,
    TraceOutput: expectString
  });
};
var de_CommandInvocationList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_CommandInvocation(entry, context);
  });
  return retVal;
};
var de_CommandList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_Command(entry, context);
  });
  return retVal;
};
var de_CommandPlugin = (output, context) => {
  return take(output, {
    Name: expectString,
    Output: expectString,
    OutputS3BucketName: expectString,
    OutputS3KeyPrefix: expectString,
    OutputS3Region: expectString,
    ResponseCode: expectInt32,
    ResponseFinishDateTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ResponseStartDateTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    StandardErrorUrl: expectString,
    StandardOutputUrl: expectString,
    Status: expectString,
    StatusDetails: expectString
  });
};
var de_CommandPluginList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_CommandPlugin(entry, context);
  });
  return retVal;
};
var de_ComplianceExecutionSummary = (output, context) => {
  return take(output, {
    ExecutionId: expectString,
    ExecutionTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ExecutionType: expectString
  });
};
var de_ComplianceItem = (output, context) => {
  return take(output, {
    ComplianceType: expectString,
    Details: _json,
    ExecutionSummary: (_) => de_ComplianceExecutionSummary(_, context),
    Id: expectString,
    ResourceId: expectString,
    ResourceType: expectString,
    Severity: expectString,
    Status: expectString,
    Title: expectString
  });
};
var de_ComplianceItemList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_ComplianceItem(entry, context);
  });
  return retVal;
};
var de_CreateAssociationBatchResult = (output, context) => {
  return take(output, {
    Failed: _json,
    Successful: (_) => de_AssociationDescriptionList(_, context)
  });
};
var de_CreateAssociationResult = (output, context) => {
  return take(output, {
    AssociationDescription: (_) => de_AssociationDescription(_, context)
  });
};
var de_CreateDocumentResult = (output, context) => {
  return take(output, {
    DocumentDescription: (_) => de_DocumentDescription(_, context)
  });
};
var de_DescribeActivationsResult = (output, context) => {
  return take(output, {
    ActivationList: (_) => de_ActivationList(_, context),
    NextToken: expectString
  });
};
var de_DescribeAssociationExecutionsResult = (output, context) => {
  return take(output, {
    AssociationExecutions: (_) => de_AssociationExecutionsList(_, context),
    NextToken: expectString
  });
};
var de_DescribeAssociationExecutionTargetsResult = (output, context) => {
  return take(output, {
    AssociationExecutionTargets: (_) => de_AssociationExecutionTargetsList(_, context),
    NextToken: expectString
  });
};
var de_DescribeAssociationResult = (output, context) => {
  return take(output, {
    AssociationDescription: (_) => de_AssociationDescription(_, context)
  });
};
var de_DescribeAutomationExecutionsResult = (output, context) => {
  return take(output, {
    AutomationExecutionMetadataList: (_) => de_AutomationExecutionMetadataList(_, context),
    NextToken: expectString
  });
};
var de_DescribeAutomationStepExecutionsResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    StepExecutions: (_) => de_StepExecutionList(_, context)
  });
};
var de_DescribeAvailablePatchesResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    Patches: (_) => de_PatchList(_, context)
  });
};
var de_DescribeDocumentResult = (output, context) => {
  return take(output, {
    Document: (_) => de_DocumentDescription(_, context)
  });
};
var de_DescribeEffectivePatchesForPatchBaselineResult = (output, context) => {
  return take(output, {
    EffectivePatches: (_) => de_EffectivePatchList(_, context),
    NextToken: expectString
  });
};
var de_DescribeInstanceAssociationsStatusResult = (output, context) => {
  return take(output, {
    InstanceAssociationStatusInfos: (_) => de_InstanceAssociationStatusInfos(_, context),
    NextToken: expectString
  });
};
var de_DescribeInstanceInformationResult = (output, context) => {
  return take(output, {
    InstanceInformationList: (_) => de_InstanceInformationList(_, context),
    NextToken: expectString
  });
};
var de_DescribeInstancePatchesResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    Patches: (_) => de_PatchComplianceDataList(_, context)
  });
};
var de_DescribeInstancePatchStatesForPatchGroupResult = (output, context) => {
  return take(output, {
    InstancePatchStates: (_) => de_InstancePatchStatesList(_, context),
    NextToken: expectString
  });
};
var de_DescribeInstancePatchStatesResult = (output, context) => {
  return take(output, {
    InstancePatchStates: (_) => de_InstancePatchStateList(_, context),
    NextToken: expectString
  });
};
var de_DescribeInstancePropertiesResult = (output, context) => {
  return take(output, {
    InstanceProperties: (_) => de_InstanceProperties(_, context),
    NextToken: expectString
  });
};
var de_DescribeInventoryDeletionsResult = (output, context) => {
  return take(output, {
    InventoryDeletions: (_) => de_InventoryDeletionsList(_, context),
    NextToken: expectString
  });
};
var de_DescribeMaintenanceWindowExecutionsResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    WindowExecutions: (_) => de_MaintenanceWindowExecutionList(_, context)
  });
};
var de_DescribeMaintenanceWindowExecutionTaskInvocationsResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    WindowExecutionTaskInvocationIdentities: (_) => de_MaintenanceWindowExecutionTaskInvocationIdentityList(_, context)
  });
};
var de_DescribeMaintenanceWindowExecutionTasksResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    WindowExecutionTaskIdentities: (_) => de_MaintenanceWindowExecutionTaskIdentityList(_, context)
  });
};
var de_DescribeOpsItemsResponse = (output, context) => {
  return take(output, {
    NextToken: expectString,
    OpsItemSummaries: (_) => de_OpsItemSummaries(_, context)
  });
};
var de_DescribeParametersResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    Parameters: (_) => de_ParameterMetadataList(_, context)
  });
};
var de_DescribeSessionsResponse = (output, context) => {
  return take(output, {
    NextToken: expectString,
    Sessions: (_) => de_SessionList(_, context)
  });
};
var de_DocumentDescription = (output, context) => {
  return take(output, {
    ApprovedVersion: expectString,
    AttachmentsInformation: _json,
    Author: expectString,
    Category: _json,
    CategoryEnum: _json,
    CreatedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    DefaultVersion: expectString,
    Description: expectString,
    DisplayName: expectString,
    DocumentFormat: expectString,
    DocumentType: expectString,
    DocumentVersion: expectString,
    Hash: expectString,
    HashType: expectString,
    LatestVersion: expectString,
    Name: expectString,
    Owner: expectString,
    Parameters: _json,
    PendingReviewVersion: expectString,
    PlatformTypes: _json,
    Requires: _json,
    ReviewInformation: (_) => de_ReviewInformationList(_, context),
    ReviewStatus: expectString,
    SchemaVersion: expectString,
    Sha1: expectString,
    Status: expectString,
    StatusInformation: expectString,
    Tags: _json,
    TargetType: expectString,
    VersionName: expectString
  });
};
var de_DocumentIdentifier = (output, context) => {
  return take(output, {
    Author: expectString,
    CreatedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    DisplayName: expectString,
    DocumentFormat: expectString,
    DocumentType: expectString,
    DocumentVersion: expectString,
    Name: expectString,
    Owner: expectString,
    PlatformTypes: _json,
    Requires: _json,
    ReviewStatus: expectString,
    SchemaVersion: expectString,
    Tags: _json,
    TargetType: expectString,
    VersionName: expectString
  });
};
var de_DocumentIdentifierList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_DocumentIdentifier(entry, context);
  });
  return retVal;
};
var de_DocumentMetadataResponseInfo = (output, context) => {
  return take(output, {
    ReviewerResponse: (_) => de_DocumentReviewerResponseList(_, context)
  });
};
var de_DocumentReviewerResponseList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_DocumentReviewerResponseSource(entry, context);
  });
  return retVal;
};
var de_DocumentReviewerResponseSource = (output, context) => {
  return take(output, {
    Comment: _json,
    CreateTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ReviewStatus: expectString,
    Reviewer: expectString,
    UpdatedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_)))
  });
};
var de_DocumentVersionInfo = (output, context) => {
  return take(output, {
    CreatedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    DisplayName: expectString,
    DocumentFormat: expectString,
    DocumentVersion: expectString,
    IsDefaultVersion: expectBoolean,
    Name: expectString,
    ReviewStatus: expectString,
    Status: expectString,
    StatusInformation: expectString,
    VersionName: expectString
  });
};
var de_DocumentVersionList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_DocumentVersionInfo(entry, context);
  });
  return retVal;
};
var de_EffectivePatch = (output, context) => {
  return take(output, {
    Patch: (_) => de_Patch(_, context),
    PatchStatus: (_) => de_PatchStatus(_, context)
  });
};
var de_EffectivePatchList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_EffectivePatch(entry, context);
  });
  return retVal;
};
var de_GetAutomationExecutionResult = (output, context) => {
  return take(output, {
    AutomationExecution: (_) => de_AutomationExecution(_, context)
  });
};
var de_GetDocumentResult = (output, context) => {
  return take(output, {
    AttachmentsContent: _json,
    Content: expectString,
    CreatedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    DisplayName: expectString,
    DocumentFormat: expectString,
    DocumentType: expectString,
    DocumentVersion: expectString,
    Name: expectString,
    Requires: _json,
    ReviewStatus: expectString,
    Status: expectString,
    StatusInformation: expectString,
    VersionName: expectString
  });
};
var de_GetExecutionPreviewResponse = (output, context) => {
  return take(output, {
    EndedAt: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ExecutionPreview: (_) => _json(awsExpectUnion(_)),
    ExecutionPreviewId: expectString,
    Status: expectString,
    StatusMessage: expectString
  });
};
var de_GetMaintenanceWindowExecutionResult = (output, context) => {
  return take(output, {
    EndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    StartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Status: expectString,
    StatusDetails: expectString,
    TaskIds: _json,
    WindowExecutionId: expectString
  });
};
var de_GetMaintenanceWindowExecutionTaskInvocationResult = (output, context) => {
  return take(output, {
    EndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ExecutionId: expectString,
    InvocationId: expectString,
    OwnerInformation: expectString,
    Parameters: expectString,
    StartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Status: expectString,
    StatusDetails: expectString,
    TaskExecutionId: expectString,
    TaskType: expectString,
    WindowExecutionId: expectString,
    WindowTargetId: expectString
  });
};
var de_GetMaintenanceWindowExecutionTaskResult = (output, context) => {
  return take(output, {
    AlarmConfiguration: _json,
    EndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    MaxConcurrency: expectString,
    MaxErrors: expectString,
    Priority: expectInt32,
    ServiceRole: expectString,
    StartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Status: expectString,
    StatusDetails: expectString,
    TaskArn: expectString,
    TaskExecutionId: expectString,
    TaskParameters: _json,
    TriggeredAlarms: _json,
    Type: expectString,
    WindowExecutionId: expectString
  });
};
var de_GetMaintenanceWindowResult = (output, context) => {
  return take(output, {
    AllowUnassociatedTargets: expectBoolean,
    CreatedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Cutoff: expectInt32,
    Description: expectString,
    Duration: expectInt32,
    Enabled: expectBoolean,
    EndDate: expectString,
    ModifiedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Name: expectString,
    NextExecutionTime: expectString,
    Schedule: expectString,
    ScheduleOffset: expectInt32,
    ScheduleTimezone: expectString,
    StartDate: expectString,
    WindowId: expectString
  });
};
var de_GetMaintenanceWindowTaskResult = (output, context) => {
  return take(output, {
    AlarmConfiguration: _json,
    CutoffBehavior: expectString,
    Description: expectString,
    LoggingInfo: _json,
    MaxConcurrency: expectString,
    MaxErrors: expectString,
    Name: expectString,
    Priority: expectInt32,
    ServiceRoleArn: expectString,
    Targets: _json,
    TaskArn: expectString,
    TaskInvocationParameters: (_) => de_MaintenanceWindowTaskInvocationParameters(_, context),
    TaskParameters: _json,
    TaskType: expectString,
    WindowId: expectString,
    WindowTaskId: expectString
  });
};
var de_GetOpsItemResponse = (output, context) => {
  return take(output, {
    OpsItem: (_) => de_OpsItem(_, context)
  });
};
var de_GetParameterHistoryResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    Parameters: (_) => de_ParameterHistoryList(_, context)
  });
};
var de_GetParameterResult = (output, context) => {
  return take(output, {
    Parameter: (_) => de_Parameter(_, context)
  });
};
var de_GetParametersByPathResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    Parameters: (_) => de_ParameterList(_, context)
  });
};
var de_GetParametersResult = (output, context) => {
  return take(output, {
    InvalidParameters: _json,
    Parameters: (_) => de_ParameterList(_, context)
  });
};
var de_GetPatchBaselineResult = (output, context) => {
  return take(output, {
    ApprovalRules: _json,
    ApprovedPatches: _json,
    ApprovedPatchesComplianceLevel: expectString,
    ApprovedPatchesEnableNonSecurity: expectBoolean,
    BaselineId: expectString,
    CreatedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Description: expectString,
    GlobalFilters: _json,
    ModifiedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Name: expectString,
    OperatingSystem: expectString,
    PatchGroups: _json,
    RejectedPatches: _json,
    RejectedPatchesAction: expectString,
    Sources: _json
  });
};
var de_GetServiceSettingResult = (output, context) => {
  return take(output, {
    ServiceSetting: (_) => de_ServiceSetting(_, context)
  });
};
var de_InstanceAssociationStatusInfo = (output, context) => {
  return take(output, {
    AssociationId: expectString,
    AssociationName: expectString,
    AssociationVersion: expectString,
    DetailedStatus: expectString,
    DocumentVersion: expectString,
    ErrorCode: expectString,
    ExecutionDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ExecutionSummary: expectString,
    InstanceId: expectString,
    Name: expectString,
    OutputUrl: _json,
    Status: expectString
  });
};
var de_InstanceAssociationStatusInfos = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_InstanceAssociationStatusInfo(entry, context);
  });
  return retVal;
};
var de_InstanceInformation = (output, context) => {
  return take(output, {
    ActivationId: expectString,
    AgentVersion: expectString,
    AssociationOverview: _json,
    AssociationStatus: expectString,
    ComputerName: expectString,
    IPAddress: expectString,
    IamRole: expectString,
    InstanceId: expectString,
    IsLatestVersion: expectBoolean,
    LastAssociationExecutionDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastPingDateTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastSuccessfulAssociationExecutionDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Name: expectString,
    PingStatus: expectString,
    PlatformName: expectString,
    PlatformType: expectString,
    PlatformVersion: expectString,
    RegistrationDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ResourceType: expectString,
    SourceId: expectString,
    SourceType: expectString
  });
};
var de_InstanceInformationList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_InstanceInformation(entry, context);
  });
  return retVal;
};
var de_InstancePatchState = (output, context) => {
  return take(output, {
    BaselineId: expectString,
    CriticalNonCompliantCount: expectInt32,
    FailedCount: expectInt32,
    InstallOverrideList: expectString,
    InstalledCount: expectInt32,
    InstalledOtherCount: expectInt32,
    InstalledPendingRebootCount: expectInt32,
    InstalledRejectedCount: expectInt32,
    InstanceId: expectString,
    LastNoRebootInstallOperationTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    MissingCount: expectInt32,
    NotApplicableCount: expectInt32,
    Operation: expectString,
    OperationEndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    OperationStartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    OtherNonCompliantCount: expectInt32,
    OwnerInformation: expectString,
    PatchGroup: expectString,
    RebootOption: expectString,
    SecurityNonCompliantCount: expectInt32,
    SnapshotId: expectString,
    UnreportedNotApplicableCount: expectInt32
  });
};
var de_InstancePatchStateList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_InstancePatchState(entry, context);
  });
  return retVal;
};
var de_InstancePatchStatesList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_InstancePatchState(entry, context);
  });
  return retVal;
};
var de_InstanceProperties = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_InstanceProperty(entry, context);
  });
  return retVal;
};
var de_InstanceProperty = (output, context) => {
  return take(output, {
    ActivationId: expectString,
    AgentVersion: expectString,
    Architecture: expectString,
    AssociationOverview: _json,
    AssociationStatus: expectString,
    ComputerName: expectString,
    IPAddress: expectString,
    IamRole: expectString,
    InstanceId: expectString,
    InstanceRole: expectString,
    InstanceState: expectString,
    InstanceType: expectString,
    KeyName: expectString,
    LastAssociationExecutionDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastPingDateTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastSuccessfulAssociationExecutionDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LaunchTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Name: expectString,
    PingStatus: expectString,
    PlatformName: expectString,
    PlatformType: expectString,
    PlatformVersion: expectString,
    RegistrationDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ResourceType: expectString,
    SourceId: expectString,
    SourceType: expectString
  });
};
var de_InventoryDeletionsList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_InventoryDeletionStatusItem(entry, context);
  });
  return retVal;
};
var de_InventoryDeletionStatusItem = (output, context) => {
  return take(output, {
    DeletionId: expectString,
    DeletionStartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    DeletionSummary: _json,
    LastStatus: expectString,
    LastStatusMessage: expectString,
    LastStatusUpdateTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    TypeName: expectString
  });
};
var de_ListAssociationsResult = (output, context) => {
  return take(output, {
    Associations: (_) => de_AssociationList(_, context),
    NextToken: expectString
  });
};
var de_ListAssociationVersionsResult = (output, context) => {
  return take(output, {
    AssociationVersions: (_) => de_AssociationVersionList(_, context),
    NextToken: expectString
  });
};
var de_ListCommandInvocationsResult = (output, context) => {
  return take(output, {
    CommandInvocations: (_) => de_CommandInvocationList(_, context),
    NextToken: expectString
  });
};
var de_ListCommandsResult = (output, context) => {
  return take(output, {
    Commands: (_) => de_CommandList(_, context),
    NextToken: expectString
  });
};
var de_ListComplianceItemsResult = (output, context) => {
  return take(output, {
    ComplianceItems: (_) => de_ComplianceItemList(_, context),
    NextToken: expectString
  });
};
var de_ListDocumentMetadataHistoryResponse = (output, context) => {
  return take(output, {
    Author: expectString,
    DocumentVersion: expectString,
    Metadata: (_) => de_DocumentMetadataResponseInfo(_, context),
    Name: expectString,
    NextToken: expectString
  });
};
var de_ListDocumentsResult = (output, context) => {
  return take(output, {
    DocumentIdentifiers: (_) => de_DocumentIdentifierList(_, context),
    NextToken: expectString
  });
};
var de_ListDocumentVersionsResult = (output, context) => {
  return take(output, {
    DocumentVersions: (_) => de_DocumentVersionList(_, context),
    NextToken: expectString
  });
};
var de_ListNodesResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    Nodes: (_) => de_NodeList(_, context)
  });
};
var de_ListOpsItemEventsResponse = (output, context) => {
  return take(output, {
    NextToken: expectString,
    Summaries: (_) => de_OpsItemEventSummaries(_, context)
  });
};
var de_ListOpsItemRelatedItemsResponse = (output, context) => {
  return take(output, {
    NextToken: expectString,
    Summaries: (_) => de_OpsItemRelatedItemSummaries(_, context)
  });
};
var de_ListOpsMetadataResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    OpsMetadataList: (_) => de_OpsMetadataList(_, context)
  });
};
var de_ListResourceComplianceSummariesResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    ResourceComplianceSummaryItems: (_) => de_ResourceComplianceSummaryItemList(_, context)
  });
};
var de_ListResourceDataSyncResult = (output, context) => {
  return take(output, {
    NextToken: expectString,
    ResourceDataSyncItems: (_) => de_ResourceDataSyncItemList(_, context)
  });
};
var de_MaintenanceWindowExecution = (output, context) => {
  return take(output, {
    EndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    StartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Status: expectString,
    StatusDetails: expectString,
    WindowExecutionId: expectString,
    WindowId: expectString
  });
};
var de_MaintenanceWindowExecutionList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_MaintenanceWindowExecution(entry, context);
  });
  return retVal;
};
var de_MaintenanceWindowExecutionTaskIdentity = (output, context) => {
  return take(output, {
    AlarmConfiguration: _json,
    EndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    StartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Status: expectString,
    StatusDetails: expectString,
    TaskArn: expectString,
    TaskExecutionId: expectString,
    TaskType: expectString,
    TriggeredAlarms: _json,
    WindowExecutionId: expectString
  });
};
var de_MaintenanceWindowExecutionTaskIdentityList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_MaintenanceWindowExecutionTaskIdentity(entry, context);
  });
  return retVal;
};
var de_MaintenanceWindowExecutionTaskInvocationIdentity = (output, context) => {
  return take(output, {
    EndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ExecutionId: expectString,
    InvocationId: expectString,
    OwnerInformation: expectString,
    Parameters: expectString,
    StartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Status: expectString,
    StatusDetails: expectString,
    TaskExecutionId: expectString,
    TaskType: expectString,
    WindowExecutionId: expectString,
    WindowTargetId: expectString
  });
};
var de_MaintenanceWindowExecutionTaskInvocationIdentityList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_MaintenanceWindowExecutionTaskInvocationIdentity(entry, context);
  });
  return retVal;
};
var de_MaintenanceWindowLambdaParameters = (output, context) => {
  return take(output, {
    ClientContext: expectString,
    Payload: context.base64Decoder,
    Qualifier: expectString
  });
};
var de_MaintenanceWindowTaskInvocationParameters = (output, context) => {
  return take(output, {
    Automation: _json,
    Lambda: (_) => de_MaintenanceWindowLambdaParameters(_, context),
    RunCommand: _json,
    StepFunctions: _json
  });
};
var de_Node = (output, context) => {
  return take(output, {
    CaptureTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Id: expectString,
    NodeType: (_) => _json(awsExpectUnion(_)),
    Owner: _json,
    Region: expectString
  });
};
var de_NodeList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_Node(entry, context);
  });
  return retVal;
};
var de_OpsItem = (output, context) => {
  return take(output, {
    ActualEndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ActualStartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Category: expectString,
    CreatedBy: expectString,
    CreatedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Description: expectString,
    LastModifiedBy: expectString,
    LastModifiedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Notifications: _json,
    OperationalData: _json,
    OpsItemArn: expectString,
    OpsItemId: expectString,
    OpsItemType: expectString,
    PlannedEndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    PlannedStartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Priority: expectInt32,
    RelatedOpsItems: _json,
    Severity: expectString,
    Source: expectString,
    Status: expectString,
    Title: expectString,
    Version: expectString
  });
};
var de_OpsItemEventSummaries = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_OpsItemEventSummary(entry, context);
  });
  return retVal;
};
var de_OpsItemEventSummary = (output, context) => {
  return take(output, {
    CreatedBy: _json,
    CreatedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Detail: expectString,
    DetailType: expectString,
    EventId: expectString,
    OpsItemId: expectString,
    Source: expectString
  });
};
var de_OpsItemRelatedItemSummaries = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_OpsItemRelatedItemSummary(entry, context);
  });
  return retVal;
};
var de_OpsItemRelatedItemSummary = (output, context) => {
  return take(output, {
    AssociationId: expectString,
    AssociationType: expectString,
    CreatedBy: _json,
    CreatedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastModifiedBy: _json,
    LastModifiedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    OpsItemId: expectString,
    ResourceType: expectString,
    ResourceUri: expectString
  });
};
var de_OpsItemSummaries = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_OpsItemSummary(entry, context);
  });
  return retVal;
};
var de_OpsItemSummary = (output, context) => {
  return take(output, {
    ActualEndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ActualStartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Category: expectString,
    CreatedBy: expectString,
    CreatedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastModifiedBy: expectString,
    LastModifiedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    OperationalData: _json,
    OpsItemId: expectString,
    OpsItemType: expectString,
    PlannedEndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    PlannedStartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Priority: expectInt32,
    Severity: expectString,
    Source: expectString,
    Status: expectString,
    Title: expectString
  });
};
var de_OpsMetadata = (output, context) => {
  return take(output, {
    CreationDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastModifiedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastModifiedUser: expectString,
    OpsMetadataArn: expectString,
    ResourceId: expectString
  });
};
var de_OpsMetadataList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_OpsMetadata(entry, context);
  });
  return retVal;
};
var de_Parameter = (output, context) => {
  return take(output, {
    ARN: expectString,
    DataType: expectString,
    LastModifiedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Name: expectString,
    Selector: expectString,
    SourceResult: expectString,
    Type: expectString,
    Value: expectString,
    Version: expectLong
  });
};
var de_ParameterHistory = (output, context) => {
  return take(output, {
    AllowedPattern: expectString,
    DataType: expectString,
    Description: expectString,
    KeyId: expectString,
    Labels: _json,
    LastModifiedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastModifiedUser: expectString,
    Name: expectString,
    Policies: _json,
    Tier: expectString,
    Type: expectString,
    Value: expectString,
    Version: expectLong
  });
};
var de_ParameterHistoryList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_ParameterHistory(entry, context);
  });
  return retVal;
};
var de_ParameterList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_Parameter(entry, context);
  });
  return retVal;
};
var de_ParameterMetadata = (output, context) => {
  return take(output, {
    ARN: expectString,
    AllowedPattern: expectString,
    DataType: expectString,
    Description: expectString,
    KeyId: expectString,
    LastModifiedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastModifiedUser: expectString,
    Name: expectString,
    Policies: _json,
    Tier: expectString,
    Type: expectString,
    Version: expectLong
  });
};
var de_ParameterMetadataList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_ParameterMetadata(entry, context);
  });
  return retVal;
};
var de_Patch = (output, context) => {
  return take(output, {
    AdvisoryIds: _json,
    Arch: expectString,
    BugzillaIds: _json,
    CVEIds: _json,
    Classification: expectString,
    ContentUrl: expectString,
    Description: expectString,
    Epoch: expectInt32,
    Id: expectString,
    KbNumber: expectString,
    Language: expectString,
    MsrcNumber: expectString,
    MsrcSeverity: expectString,
    Name: expectString,
    Product: expectString,
    ProductFamily: expectString,
    Release: expectString,
    ReleaseDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Repository: expectString,
    Severity: expectString,
    Title: expectString,
    Vendor: expectString,
    Version: expectString
  });
};
var de_PatchComplianceData = (output, context) => {
  return take(output, {
    CVEIds: expectString,
    Classification: expectString,
    InstalledTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    KBId: expectString,
    Severity: expectString,
    State: expectString,
    Title: expectString
  });
};
var de_PatchComplianceDataList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_PatchComplianceData(entry, context);
  });
  return retVal;
};
var de_PatchList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_Patch(entry, context);
  });
  return retVal;
};
var de_PatchStatus = (output, context) => {
  return take(output, {
    ApprovalDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ComplianceLevel: expectString,
    DeploymentStatus: expectString
  });
};
var de_ResetServiceSettingResult = (output, context) => {
  return take(output, {
    ServiceSetting: (_) => de_ServiceSetting(_, context)
  });
};
var de_ResourceComplianceSummaryItem = (output, context) => {
  return take(output, {
    ComplianceType: expectString,
    CompliantSummary: _json,
    ExecutionSummary: (_) => de_ComplianceExecutionSummary(_, context),
    NonCompliantSummary: _json,
    OverallSeverity: expectString,
    ResourceId: expectString,
    ResourceType: expectString,
    Status: expectString
  });
};
var de_ResourceComplianceSummaryItemList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_ResourceComplianceSummaryItem(entry, context);
  });
  return retVal;
};
var de_ResourceDataSyncItem = (output, context) => {
  return take(output, {
    LastStatus: expectString,
    LastSuccessfulSyncTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastSyncStatusMessage: expectString,
    LastSyncTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    S3Destination: _json,
    SyncCreatedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    SyncLastModifiedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    SyncName: expectString,
    SyncSource: _json,
    SyncType: expectString
  });
};
var de_ResourceDataSyncItemList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_ResourceDataSyncItem(entry, context);
  });
  return retVal;
};
var de_ReviewInformation = (output, context) => {
  return take(output, {
    ReviewedTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Reviewer: expectString,
    Status: expectString
  });
};
var de_ReviewInformationList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_ReviewInformation(entry, context);
  });
  return retVal;
};
var de_SendCommandResult = (output, context) => {
  return take(output, {
    Command: (_) => de_Command(_, context)
  });
};
var de_ServiceSetting = (output, context) => {
  return take(output, {
    ARN: expectString,
    LastModifiedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    LastModifiedUser: expectString,
    SettingId: expectString,
    SettingValue: expectString,
    Status: expectString
  });
};
var de_Session = (output, context) => {
  return take(output, {
    Details: expectString,
    DocumentName: expectString,
    EndDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    MaxSessionDuration: expectString,
    OutputUrl: _json,
    Owner: expectString,
    Reason: expectString,
    SessionId: expectString,
    StartDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Status: expectString,
    Target: expectString
  });
};
var de_SessionList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_Session(entry, context);
  });
  return retVal;
};
var de_StepExecution = (output, context) => {
  return take(output, {
    Action: expectString,
    ExecutionEndTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    ExecutionStartTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    FailureDetails: _json,
    FailureMessage: expectString,
    Inputs: _json,
    IsCritical: expectBoolean,
    IsEnd: expectBoolean,
    MaxAttempts: expectInt32,
    NextStep: expectString,
    OnFailure: expectString,
    Outputs: _json,
    OverriddenParameters: _json,
    ParentStepDetails: _json,
    Response: expectString,
    ResponseCode: expectString,
    StepExecutionId: expectString,
    StepName: expectString,
    StepStatus: expectString,
    TargetLocation: _json,
    Targets: _json,
    TimeoutSeconds: expectLong,
    TriggeredAlarms: _json,
    ValidNextSteps: _json
  });
};
var de_StepExecutionList = (output, context) => {
  const retVal = (output || []).filter((e2) => e2 != null).map((entry) => {
    return de_StepExecution(entry, context);
  });
  return retVal;
};
var de_UpdateAssociationResult = (output, context) => {
  return take(output, {
    AssociationDescription: (_) => de_AssociationDescription(_, context)
  });
};
var de_UpdateAssociationStatusResult = (output, context) => {
  return take(output, {
    AssociationDescription: (_) => de_AssociationDescription(_, context)
  });
};
var de_UpdateDocumentResult = (output, context) => {
  return take(output, {
    DocumentDescription: (_) => de_DocumentDescription(_, context)
  });
};
var de_UpdateMaintenanceWindowTaskResult = (output, context) => {
  return take(output, {
    AlarmConfiguration: _json,
    CutoffBehavior: expectString,
    Description: expectString,
    LoggingInfo: _json,
    MaxConcurrency: expectString,
    MaxErrors: expectString,
    Name: expectString,
    Priority: expectInt32,
    ServiceRoleArn: expectString,
    Targets: _json,
    TaskArn: expectString,
    TaskInvocationParameters: (_) => de_MaintenanceWindowTaskInvocationParameters(_, context),
    TaskParameters: _json,
    WindowId: expectString,
    WindowTaskId: expectString
  });
};
var de_UpdatePatchBaselineResult = (output, context) => {
  return take(output, {
    ApprovalRules: _json,
    ApprovedPatches: _json,
    ApprovedPatchesComplianceLevel: expectString,
    ApprovedPatchesEnableNonSecurity: expectBoolean,
    BaselineId: expectString,
    CreatedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Description: expectString,
    GlobalFilters: _json,
    ModifiedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
    Name: expectString,
    OperatingSystem: expectString,
    RejectedPatches: _json,
    RejectedPatchesAction: expectString,
    Sources: _json
  });
};
var deserializeMetadata = (output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
});
var throwDefaultError = withBaseException(SSMServiceException);
var buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new HttpRequest(contents);
};
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `AmazonSSM.${operation}`
  };
}

// node_modules/@aws-sdk/client-ssm/dist-es/commands/AddTagsToResourceCommand.js
var AddTagsToResourceCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "AddTagsToResource", {}).n("SSMClient", "AddTagsToResourceCommand").f(void 0, void 0).ser(se_AddTagsToResourceCommand).de(de_AddTagsToResourceCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/AssociateOpsItemRelatedItemCommand.js
var AssociateOpsItemRelatedItemCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "AssociateOpsItemRelatedItem", {}).n("SSMClient", "AssociateOpsItemRelatedItemCommand").f(void 0, void 0).ser(se_AssociateOpsItemRelatedItemCommand).de(de_AssociateOpsItemRelatedItemCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CancelCommandCommand.js
var CancelCommandCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CancelCommand", {}).n("SSMClient", "CancelCommandCommand").f(void 0, void 0).ser(se_CancelCommandCommand).de(de_CancelCommandCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CancelMaintenanceWindowExecutionCommand.js
var CancelMaintenanceWindowExecutionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CancelMaintenanceWindowExecution", {}).n("SSMClient", "CancelMaintenanceWindowExecutionCommand").f(void 0, void 0).ser(se_CancelMaintenanceWindowExecutionCommand).de(de_CancelMaintenanceWindowExecutionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CreateActivationCommand.js
var CreateActivationCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CreateActivation", {}).n("SSMClient", "CreateActivationCommand").f(void 0, void 0).ser(se_CreateActivationCommand).de(de_CreateActivationCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CreateAssociationBatchCommand.js
var CreateAssociationBatchCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CreateAssociationBatch", {}).n("SSMClient", "CreateAssociationBatchCommand").f(CreateAssociationBatchRequestFilterSensitiveLog, CreateAssociationBatchResultFilterSensitiveLog).ser(se_CreateAssociationBatchCommand).de(de_CreateAssociationBatchCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CreateAssociationCommand.js
var CreateAssociationCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CreateAssociation", {}).n("SSMClient", "CreateAssociationCommand").f(CreateAssociationRequestFilterSensitiveLog, CreateAssociationResultFilterSensitiveLog).ser(se_CreateAssociationCommand).de(de_CreateAssociationCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CreateDocumentCommand.js
var CreateDocumentCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CreateDocument", {}).n("SSMClient", "CreateDocumentCommand").f(void 0, void 0).ser(se_CreateDocumentCommand).de(de_CreateDocumentCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CreateMaintenanceWindowCommand.js
var CreateMaintenanceWindowCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CreateMaintenanceWindow", {}).n("SSMClient", "CreateMaintenanceWindowCommand").f(CreateMaintenanceWindowRequestFilterSensitiveLog, void 0).ser(se_CreateMaintenanceWindowCommand).de(de_CreateMaintenanceWindowCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CreateOpsItemCommand.js
var CreateOpsItemCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CreateOpsItem", {}).n("SSMClient", "CreateOpsItemCommand").f(void 0, void 0).ser(se_CreateOpsItemCommand).de(de_CreateOpsItemCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CreateOpsMetadataCommand.js
var CreateOpsMetadataCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CreateOpsMetadata", {}).n("SSMClient", "CreateOpsMetadataCommand").f(void 0, void 0).ser(se_CreateOpsMetadataCommand).de(de_CreateOpsMetadataCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CreatePatchBaselineCommand.js
var CreatePatchBaselineCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CreatePatchBaseline", {}).n("SSMClient", "CreatePatchBaselineCommand").f(CreatePatchBaselineRequestFilterSensitiveLog, void 0).ser(se_CreatePatchBaselineCommand).de(de_CreatePatchBaselineCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/CreateResourceDataSyncCommand.js
var CreateResourceDataSyncCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "CreateResourceDataSync", {}).n("SSMClient", "CreateResourceDataSyncCommand").f(void 0, void 0).ser(se_CreateResourceDataSyncCommand).de(de_CreateResourceDataSyncCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteActivationCommand.js
var DeleteActivationCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteActivation", {}).n("SSMClient", "DeleteActivationCommand").f(void 0, void 0).ser(se_DeleteActivationCommand).de(de_DeleteActivationCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteAssociationCommand.js
var DeleteAssociationCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteAssociation", {}).n("SSMClient", "DeleteAssociationCommand").f(void 0, void 0).ser(se_DeleteAssociationCommand).de(de_DeleteAssociationCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteDocumentCommand.js
var DeleteDocumentCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteDocument", {}).n("SSMClient", "DeleteDocumentCommand").f(void 0, void 0).ser(se_DeleteDocumentCommand).de(de_DeleteDocumentCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteInventoryCommand.js
var DeleteInventoryCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteInventory", {}).n("SSMClient", "DeleteInventoryCommand").f(void 0, void 0).ser(se_DeleteInventoryCommand).de(de_DeleteInventoryCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteMaintenanceWindowCommand.js
var DeleteMaintenanceWindowCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteMaintenanceWindow", {}).n("SSMClient", "DeleteMaintenanceWindowCommand").f(void 0, void 0).ser(se_DeleteMaintenanceWindowCommand).de(de_DeleteMaintenanceWindowCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteOpsItemCommand.js
var DeleteOpsItemCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteOpsItem", {}).n("SSMClient", "DeleteOpsItemCommand").f(void 0, void 0).ser(se_DeleteOpsItemCommand).de(de_DeleteOpsItemCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteOpsMetadataCommand.js
var DeleteOpsMetadataCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteOpsMetadata", {}).n("SSMClient", "DeleteOpsMetadataCommand").f(void 0, void 0).ser(se_DeleteOpsMetadataCommand).de(de_DeleteOpsMetadataCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteParameterCommand.js
var DeleteParameterCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteParameter", {}).n("SSMClient", "DeleteParameterCommand").f(void 0, void 0).ser(se_DeleteParameterCommand).de(de_DeleteParameterCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteParametersCommand.js
var DeleteParametersCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteParameters", {}).n("SSMClient", "DeleteParametersCommand").f(void 0, void 0).ser(se_DeleteParametersCommand).de(de_DeleteParametersCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeletePatchBaselineCommand.js
var DeletePatchBaselineCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeletePatchBaseline", {}).n("SSMClient", "DeletePatchBaselineCommand").f(void 0, void 0).ser(se_DeletePatchBaselineCommand).de(de_DeletePatchBaselineCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteResourceDataSyncCommand.js
var DeleteResourceDataSyncCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteResourceDataSync", {}).n("SSMClient", "DeleteResourceDataSyncCommand").f(void 0, void 0).ser(se_DeleteResourceDataSyncCommand).de(de_DeleteResourceDataSyncCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeleteResourcePolicyCommand.js
var DeleteResourcePolicyCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeleteResourcePolicy", {}).n("SSMClient", "DeleteResourcePolicyCommand").f(void 0, void 0).ser(se_DeleteResourcePolicyCommand).de(de_DeleteResourcePolicyCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeregisterManagedInstanceCommand.js
var DeregisterManagedInstanceCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeregisterManagedInstance", {}).n("SSMClient", "DeregisterManagedInstanceCommand").f(void 0, void 0).ser(se_DeregisterManagedInstanceCommand).de(de_DeregisterManagedInstanceCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeregisterPatchBaselineForPatchGroupCommand.js
var DeregisterPatchBaselineForPatchGroupCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeregisterPatchBaselineForPatchGroup", {}).n("SSMClient", "DeregisterPatchBaselineForPatchGroupCommand").f(void 0, void 0).ser(se_DeregisterPatchBaselineForPatchGroupCommand).de(de_DeregisterPatchBaselineForPatchGroupCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeregisterTargetFromMaintenanceWindowCommand.js
var DeregisterTargetFromMaintenanceWindowCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeregisterTargetFromMaintenanceWindow", {}).n("SSMClient", "DeregisterTargetFromMaintenanceWindowCommand").f(void 0, void 0).ser(se_DeregisterTargetFromMaintenanceWindowCommand).de(de_DeregisterTargetFromMaintenanceWindowCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DeregisterTaskFromMaintenanceWindowCommand.js
var DeregisterTaskFromMaintenanceWindowCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DeregisterTaskFromMaintenanceWindow", {}).n("SSMClient", "DeregisterTaskFromMaintenanceWindowCommand").f(void 0, void 0).ser(se_DeregisterTaskFromMaintenanceWindowCommand).de(de_DeregisterTaskFromMaintenanceWindowCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeActivationsCommand.js
var DescribeActivationsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeActivations", {}).n("SSMClient", "DescribeActivationsCommand").f(void 0, void 0).ser(se_DescribeActivationsCommand).de(de_DescribeActivationsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeAssociationCommand.js
var DescribeAssociationCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeAssociation", {}).n("SSMClient", "DescribeAssociationCommand").f(void 0, DescribeAssociationResultFilterSensitiveLog).ser(se_DescribeAssociationCommand).de(de_DescribeAssociationCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeAssociationExecutionsCommand.js
var DescribeAssociationExecutionsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeAssociationExecutions", {}).n("SSMClient", "DescribeAssociationExecutionsCommand").f(void 0, void 0).ser(se_DescribeAssociationExecutionsCommand).de(de_DescribeAssociationExecutionsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeAssociationExecutionTargetsCommand.js
var DescribeAssociationExecutionTargetsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeAssociationExecutionTargets", {}).n("SSMClient", "DescribeAssociationExecutionTargetsCommand").f(void 0, void 0).ser(se_DescribeAssociationExecutionTargetsCommand).de(de_DescribeAssociationExecutionTargetsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeAutomationExecutionsCommand.js
var DescribeAutomationExecutionsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeAutomationExecutions", {}).n("SSMClient", "DescribeAutomationExecutionsCommand").f(void 0, void 0).ser(se_DescribeAutomationExecutionsCommand).de(de_DescribeAutomationExecutionsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeAutomationStepExecutionsCommand.js
var DescribeAutomationStepExecutionsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeAutomationStepExecutions", {}).n("SSMClient", "DescribeAutomationStepExecutionsCommand").f(void 0, void 0).ser(se_DescribeAutomationStepExecutionsCommand).de(de_DescribeAutomationStepExecutionsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeAvailablePatchesCommand.js
var DescribeAvailablePatchesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeAvailablePatches", {}).n("SSMClient", "DescribeAvailablePatchesCommand").f(void 0, void 0).ser(se_DescribeAvailablePatchesCommand).de(de_DescribeAvailablePatchesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeDocumentCommand.js
var DescribeDocumentCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeDocument", {}).n("SSMClient", "DescribeDocumentCommand").f(void 0, void 0).ser(se_DescribeDocumentCommand).de(de_DescribeDocumentCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeDocumentPermissionCommand.js
var DescribeDocumentPermissionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeDocumentPermission", {}).n("SSMClient", "DescribeDocumentPermissionCommand").f(void 0, void 0).ser(se_DescribeDocumentPermissionCommand).de(de_DescribeDocumentPermissionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeEffectiveInstanceAssociationsCommand.js
var DescribeEffectiveInstanceAssociationsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeEffectiveInstanceAssociations", {}).n("SSMClient", "DescribeEffectiveInstanceAssociationsCommand").f(void 0, void 0).ser(se_DescribeEffectiveInstanceAssociationsCommand).de(de_DescribeEffectiveInstanceAssociationsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeEffectivePatchesForPatchBaselineCommand.js
var DescribeEffectivePatchesForPatchBaselineCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeEffectivePatchesForPatchBaseline", {}).n("SSMClient", "DescribeEffectivePatchesForPatchBaselineCommand").f(void 0, void 0).ser(se_DescribeEffectivePatchesForPatchBaselineCommand).de(de_DescribeEffectivePatchesForPatchBaselineCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeInstanceAssociationsStatusCommand.js
var DescribeInstanceAssociationsStatusCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeInstanceAssociationsStatus", {}).n("SSMClient", "DescribeInstanceAssociationsStatusCommand").f(void 0, void 0).ser(se_DescribeInstanceAssociationsStatusCommand).de(de_DescribeInstanceAssociationsStatusCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeInstanceInformationCommand.js
var DescribeInstanceInformationCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeInstanceInformation", {}).n("SSMClient", "DescribeInstanceInformationCommand").f(void 0, DescribeInstanceInformationResultFilterSensitiveLog).ser(se_DescribeInstanceInformationCommand).de(de_DescribeInstanceInformationCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeInstancePatchesCommand.js
var DescribeInstancePatchesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeInstancePatches", {}).n("SSMClient", "DescribeInstancePatchesCommand").f(void 0, void 0).ser(se_DescribeInstancePatchesCommand).de(de_DescribeInstancePatchesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeInstancePatchStatesCommand.js
var DescribeInstancePatchStatesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeInstancePatchStates", {}).n("SSMClient", "DescribeInstancePatchStatesCommand").f(void 0, DescribeInstancePatchStatesResultFilterSensitiveLog).ser(se_DescribeInstancePatchStatesCommand).de(de_DescribeInstancePatchStatesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeInstancePatchStatesForPatchGroupCommand.js
var DescribeInstancePatchStatesForPatchGroupCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeInstancePatchStatesForPatchGroup", {}).n("SSMClient", "DescribeInstancePatchStatesForPatchGroupCommand").f(void 0, DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog).ser(se_DescribeInstancePatchStatesForPatchGroupCommand).de(de_DescribeInstancePatchStatesForPatchGroupCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeInstancePropertiesCommand.js
var DescribeInstancePropertiesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeInstanceProperties", {}).n("SSMClient", "DescribeInstancePropertiesCommand").f(void 0, DescribeInstancePropertiesResultFilterSensitiveLog).ser(se_DescribeInstancePropertiesCommand).de(de_DescribeInstancePropertiesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeInventoryDeletionsCommand.js
var DescribeInventoryDeletionsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeInventoryDeletions", {}).n("SSMClient", "DescribeInventoryDeletionsCommand").f(void 0, void 0).ser(se_DescribeInventoryDeletionsCommand).de(de_DescribeInventoryDeletionsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeMaintenanceWindowExecutionsCommand.js
var DescribeMaintenanceWindowExecutionsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeMaintenanceWindowExecutions", {}).n("SSMClient", "DescribeMaintenanceWindowExecutionsCommand").f(void 0, void 0).ser(se_DescribeMaintenanceWindowExecutionsCommand).de(de_DescribeMaintenanceWindowExecutionsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeMaintenanceWindowExecutionTaskInvocationsCommand.js
var DescribeMaintenanceWindowExecutionTaskInvocationsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeMaintenanceWindowExecutionTaskInvocations", {}).n("SSMClient", "DescribeMaintenanceWindowExecutionTaskInvocationsCommand").f(void 0, DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog).ser(se_DescribeMaintenanceWindowExecutionTaskInvocationsCommand).de(de_DescribeMaintenanceWindowExecutionTaskInvocationsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeMaintenanceWindowExecutionTasksCommand.js
var DescribeMaintenanceWindowExecutionTasksCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeMaintenanceWindowExecutionTasks", {}).n("SSMClient", "DescribeMaintenanceWindowExecutionTasksCommand").f(void 0, void 0).ser(se_DescribeMaintenanceWindowExecutionTasksCommand).de(de_DescribeMaintenanceWindowExecutionTasksCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeMaintenanceWindowScheduleCommand.js
var DescribeMaintenanceWindowScheduleCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeMaintenanceWindowSchedule", {}).n("SSMClient", "DescribeMaintenanceWindowScheduleCommand").f(void 0, void 0).ser(se_DescribeMaintenanceWindowScheduleCommand).de(de_DescribeMaintenanceWindowScheduleCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeMaintenanceWindowsCommand.js
var DescribeMaintenanceWindowsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeMaintenanceWindows", {}).n("SSMClient", "DescribeMaintenanceWindowsCommand").f(void 0, DescribeMaintenanceWindowsResultFilterSensitiveLog).ser(se_DescribeMaintenanceWindowsCommand).de(de_DescribeMaintenanceWindowsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeMaintenanceWindowsForTargetCommand.js
var DescribeMaintenanceWindowsForTargetCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeMaintenanceWindowsForTarget", {}).n("SSMClient", "DescribeMaintenanceWindowsForTargetCommand").f(void 0, void 0).ser(se_DescribeMaintenanceWindowsForTargetCommand).de(de_DescribeMaintenanceWindowsForTargetCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeMaintenanceWindowTargetsCommand.js
var DescribeMaintenanceWindowTargetsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeMaintenanceWindowTargets", {}).n("SSMClient", "DescribeMaintenanceWindowTargetsCommand").f(void 0, DescribeMaintenanceWindowTargetsResultFilterSensitiveLog).ser(se_DescribeMaintenanceWindowTargetsCommand).de(de_DescribeMaintenanceWindowTargetsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeMaintenanceWindowTasksCommand.js
var DescribeMaintenanceWindowTasksCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeMaintenanceWindowTasks", {}).n("SSMClient", "DescribeMaintenanceWindowTasksCommand").f(void 0, DescribeMaintenanceWindowTasksResultFilterSensitiveLog).ser(se_DescribeMaintenanceWindowTasksCommand).de(de_DescribeMaintenanceWindowTasksCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeOpsItemsCommand.js
var DescribeOpsItemsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeOpsItems", {}).n("SSMClient", "DescribeOpsItemsCommand").f(void 0, void 0).ser(se_DescribeOpsItemsCommand).de(de_DescribeOpsItemsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeParametersCommand.js
var DescribeParametersCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeParameters", {}).n("SSMClient", "DescribeParametersCommand").f(void 0, void 0).ser(se_DescribeParametersCommand).de(de_DescribeParametersCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribePatchBaselinesCommand.js
var DescribePatchBaselinesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribePatchBaselines", {}).n("SSMClient", "DescribePatchBaselinesCommand").f(void 0, void 0).ser(se_DescribePatchBaselinesCommand).de(de_DescribePatchBaselinesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribePatchGroupsCommand.js
var DescribePatchGroupsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribePatchGroups", {}).n("SSMClient", "DescribePatchGroupsCommand").f(void 0, void 0).ser(se_DescribePatchGroupsCommand).de(de_DescribePatchGroupsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribePatchGroupStateCommand.js
var DescribePatchGroupStateCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribePatchGroupState", {}).n("SSMClient", "DescribePatchGroupStateCommand").f(void 0, void 0).ser(se_DescribePatchGroupStateCommand).de(de_DescribePatchGroupStateCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribePatchPropertiesCommand.js
var DescribePatchPropertiesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribePatchProperties", {}).n("SSMClient", "DescribePatchPropertiesCommand").f(void 0, void 0).ser(se_DescribePatchPropertiesCommand).de(de_DescribePatchPropertiesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DescribeSessionsCommand.js
var DescribeSessionsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DescribeSessions", {}).n("SSMClient", "DescribeSessionsCommand").f(void 0, void 0).ser(se_DescribeSessionsCommand).de(de_DescribeSessionsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/DisassociateOpsItemRelatedItemCommand.js
var DisassociateOpsItemRelatedItemCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "DisassociateOpsItemRelatedItem", {}).n("SSMClient", "DisassociateOpsItemRelatedItemCommand").f(void 0, void 0).ser(se_DisassociateOpsItemRelatedItemCommand).de(de_DisassociateOpsItemRelatedItemCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetAutomationExecutionCommand.js
var GetAutomationExecutionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetAutomationExecution", {}).n("SSMClient", "GetAutomationExecutionCommand").f(void 0, void 0).ser(se_GetAutomationExecutionCommand).de(de_GetAutomationExecutionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetCalendarStateCommand.js
var GetCalendarStateCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetCalendarState", {}).n("SSMClient", "GetCalendarStateCommand").f(void 0, void 0).ser(se_GetCalendarStateCommand).de(de_GetCalendarStateCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetCommandInvocationCommand.js
var GetCommandInvocationCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetCommandInvocation", {}).n("SSMClient", "GetCommandInvocationCommand").f(void 0, void 0).ser(se_GetCommandInvocationCommand).de(de_GetCommandInvocationCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetConnectionStatusCommand.js
var GetConnectionStatusCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetConnectionStatus", {}).n("SSMClient", "GetConnectionStatusCommand").f(void 0, void 0).ser(se_GetConnectionStatusCommand).de(de_GetConnectionStatusCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetDefaultPatchBaselineCommand.js
var GetDefaultPatchBaselineCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetDefaultPatchBaseline", {}).n("SSMClient", "GetDefaultPatchBaselineCommand").f(void 0, void 0).ser(se_GetDefaultPatchBaselineCommand).de(de_GetDefaultPatchBaselineCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetDeployablePatchSnapshotForInstanceCommand.js
var GetDeployablePatchSnapshotForInstanceCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetDeployablePatchSnapshotForInstance", {}).n("SSMClient", "GetDeployablePatchSnapshotForInstanceCommand").f(GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog, void 0).ser(se_GetDeployablePatchSnapshotForInstanceCommand).de(de_GetDeployablePatchSnapshotForInstanceCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetDocumentCommand.js
var GetDocumentCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetDocument", {}).n("SSMClient", "GetDocumentCommand").f(void 0, void 0).ser(se_GetDocumentCommand).de(de_GetDocumentCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetExecutionPreviewCommand.js
var GetExecutionPreviewCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetExecutionPreview", {}).n("SSMClient", "GetExecutionPreviewCommand").f(void 0, void 0).ser(se_GetExecutionPreviewCommand).de(de_GetExecutionPreviewCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetInventoryCommand.js
var GetInventoryCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetInventory", {}).n("SSMClient", "GetInventoryCommand").f(void 0, void 0).ser(se_GetInventoryCommand).de(de_GetInventoryCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetInventorySchemaCommand.js
var GetInventorySchemaCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetInventorySchema", {}).n("SSMClient", "GetInventorySchemaCommand").f(void 0, void 0).ser(se_GetInventorySchemaCommand).de(de_GetInventorySchemaCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetMaintenanceWindowCommand.js
var GetMaintenanceWindowCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetMaintenanceWindow", {}).n("SSMClient", "GetMaintenanceWindowCommand").f(void 0, GetMaintenanceWindowResultFilterSensitiveLog).ser(se_GetMaintenanceWindowCommand).de(de_GetMaintenanceWindowCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetMaintenanceWindowExecutionCommand.js
var GetMaintenanceWindowExecutionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetMaintenanceWindowExecution", {}).n("SSMClient", "GetMaintenanceWindowExecutionCommand").f(void 0, void 0).ser(se_GetMaintenanceWindowExecutionCommand).de(de_GetMaintenanceWindowExecutionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetMaintenanceWindowExecutionTaskCommand.js
var GetMaintenanceWindowExecutionTaskCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetMaintenanceWindowExecutionTask", {}).n("SSMClient", "GetMaintenanceWindowExecutionTaskCommand").f(void 0, GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog).ser(se_GetMaintenanceWindowExecutionTaskCommand).de(de_GetMaintenanceWindowExecutionTaskCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetMaintenanceWindowExecutionTaskInvocationCommand.js
var GetMaintenanceWindowExecutionTaskInvocationCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetMaintenanceWindowExecutionTaskInvocation", {}).n("SSMClient", "GetMaintenanceWindowExecutionTaskInvocationCommand").f(void 0, GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog).ser(se_GetMaintenanceWindowExecutionTaskInvocationCommand).de(de_GetMaintenanceWindowExecutionTaskInvocationCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetMaintenanceWindowTaskCommand.js
var GetMaintenanceWindowTaskCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetMaintenanceWindowTask", {}).n("SSMClient", "GetMaintenanceWindowTaskCommand").f(void 0, GetMaintenanceWindowTaskResultFilterSensitiveLog).ser(se_GetMaintenanceWindowTaskCommand).de(de_GetMaintenanceWindowTaskCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetOpsItemCommand.js
var GetOpsItemCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetOpsItem", {}).n("SSMClient", "GetOpsItemCommand").f(void 0, void 0).ser(se_GetOpsItemCommand).de(de_GetOpsItemCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetOpsMetadataCommand.js
var GetOpsMetadataCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetOpsMetadata", {}).n("SSMClient", "GetOpsMetadataCommand").f(void 0, void 0).ser(se_GetOpsMetadataCommand).de(de_GetOpsMetadataCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetOpsSummaryCommand.js
var GetOpsSummaryCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetOpsSummary", {}).n("SSMClient", "GetOpsSummaryCommand").f(void 0, void 0).ser(se_GetOpsSummaryCommand).de(de_GetOpsSummaryCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetParameterCommand.js
var GetParameterCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetParameter", {}).n("SSMClient", "GetParameterCommand").f(void 0, GetParameterResultFilterSensitiveLog).ser(se_GetParameterCommand).de(de_GetParameterCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetParameterHistoryCommand.js
var GetParameterHistoryCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetParameterHistory", {}).n("SSMClient", "GetParameterHistoryCommand").f(void 0, GetParameterHistoryResultFilterSensitiveLog).ser(se_GetParameterHistoryCommand).de(de_GetParameterHistoryCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetParametersByPathCommand.js
var GetParametersByPathCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetParametersByPath", {}).n("SSMClient", "GetParametersByPathCommand").f(void 0, GetParametersByPathResultFilterSensitiveLog).ser(se_GetParametersByPathCommand).de(de_GetParametersByPathCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetParametersCommand.js
var GetParametersCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetParameters", {}).n("SSMClient", "GetParametersCommand").f(void 0, GetParametersResultFilterSensitiveLog).ser(se_GetParametersCommand).de(de_GetParametersCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetPatchBaselineCommand.js
var GetPatchBaselineCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetPatchBaseline", {}).n("SSMClient", "GetPatchBaselineCommand").f(void 0, GetPatchBaselineResultFilterSensitiveLog).ser(se_GetPatchBaselineCommand).de(de_GetPatchBaselineCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetPatchBaselineForPatchGroupCommand.js
var GetPatchBaselineForPatchGroupCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetPatchBaselineForPatchGroup", {}).n("SSMClient", "GetPatchBaselineForPatchGroupCommand").f(void 0, void 0).ser(se_GetPatchBaselineForPatchGroupCommand).de(de_GetPatchBaselineForPatchGroupCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetResourcePoliciesCommand.js
var GetResourcePoliciesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetResourcePolicies", {}).n("SSMClient", "GetResourcePoliciesCommand").f(void 0, void 0).ser(se_GetResourcePoliciesCommand).de(de_GetResourcePoliciesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/GetServiceSettingCommand.js
var GetServiceSettingCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "GetServiceSetting", {}).n("SSMClient", "GetServiceSettingCommand").f(void 0, void 0).ser(se_GetServiceSettingCommand).de(de_GetServiceSettingCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/LabelParameterVersionCommand.js
var LabelParameterVersionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "LabelParameterVersion", {}).n("SSMClient", "LabelParameterVersionCommand").f(void 0, void 0).ser(se_LabelParameterVersionCommand).de(de_LabelParameterVersionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListAssociationsCommand.js
var ListAssociationsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListAssociations", {}).n("SSMClient", "ListAssociationsCommand").f(void 0, void 0).ser(se_ListAssociationsCommand).de(de_ListAssociationsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListAssociationVersionsCommand.js
var ListAssociationVersionsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListAssociationVersions", {}).n("SSMClient", "ListAssociationVersionsCommand").f(void 0, ListAssociationVersionsResultFilterSensitiveLog).ser(se_ListAssociationVersionsCommand).de(de_ListAssociationVersionsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListCommandInvocationsCommand.js
var ListCommandInvocationsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListCommandInvocations", {}).n("SSMClient", "ListCommandInvocationsCommand").f(void 0, void 0).ser(se_ListCommandInvocationsCommand).de(de_ListCommandInvocationsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListCommandsCommand.js
var ListCommandsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListCommands", {}).n("SSMClient", "ListCommandsCommand").f(void 0, ListCommandsResultFilterSensitiveLog).ser(se_ListCommandsCommand).de(de_ListCommandsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListComplianceItemsCommand.js
var ListComplianceItemsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListComplianceItems", {}).n("SSMClient", "ListComplianceItemsCommand").f(void 0, void 0).ser(se_ListComplianceItemsCommand).de(de_ListComplianceItemsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListComplianceSummariesCommand.js
var ListComplianceSummariesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListComplianceSummaries", {}).n("SSMClient", "ListComplianceSummariesCommand").f(void 0, void 0).ser(se_ListComplianceSummariesCommand).de(de_ListComplianceSummariesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListDocumentMetadataHistoryCommand.js
var ListDocumentMetadataHistoryCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListDocumentMetadataHistory", {}).n("SSMClient", "ListDocumentMetadataHistoryCommand").f(void 0, void 0).ser(se_ListDocumentMetadataHistoryCommand).de(de_ListDocumentMetadataHistoryCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListDocumentsCommand.js
var ListDocumentsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListDocuments", {}).n("SSMClient", "ListDocumentsCommand").f(void 0, void 0).ser(se_ListDocumentsCommand).de(de_ListDocumentsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListDocumentVersionsCommand.js
var ListDocumentVersionsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListDocumentVersions", {}).n("SSMClient", "ListDocumentVersionsCommand").f(void 0, void 0).ser(se_ListDocumentVersionsCommand).de(de_ListDocumentVersionsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListInventoryEntriesCommand.js
var ListInventoryEntriesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListInventoryEntries", {}).n("SSMClient", "ListInventoryEntriesCommand").f(void 0, void 0).ser(se_ListInventoryEntriesCommand).de(de_ListInventoryEntriesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListNodesCommand.js
var ListNodesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListNodes", {}).n("SSMClient", "ListNodesCommand").f(void 0, ListNodesResultFilterSensitiveLog).ser(se_ListNodesCommand).de(de_ListNodesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListNodesSummaryCommand.js
var ListNodesSummaryCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListNodesSummary", {}).n("SSMClient", "ListNodesSummaryCommand").f(void 0, void 0).ser(se_ListNodesSummaryCommand).de(de_ListNodesSummaryCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListOpsItemEventsCommand.js
var ListOpsItemEventsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListOpsItemEvents", {}).n("SSMClient", "ListOpsItemEventsCommand").f(void 0, void 0).ser(se_ListOpsItemEventsCommand).de(de_ListOpsItemEventsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListOpsItemRelatedItemsCommand.js
var ListOpsItemRelatedItemsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListOpsItemRelatedItems", {}).n("SSMClient", "ListOpsItemRelatedItemsCommand").f(void 0, void 0).ser(se_ListOpsItemRelatedItemsCommand).de(de_ListOpsItemRelatedItemsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListOpsMetadataCommand.js
var ListOpsMetadataCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListOpsMetadata", {}).n("SSMClient", "ListOpsMetadataCommand").f(void 0, void 0).ser(se_ListOpsMetadataCommand).de(de_ListOpsMetadataCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListResourceComplianceSummariesCommand.js
var ListResourceComplianceSummariesCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListResourceComplianceSummaries", {}).n("SSMClient", "ListResourceComplianceSummariesCommand").f(void 0, void 0).ser(se_ListResourceComplianceSummariesCommand).de(de_ListResourceComplianceSummariesCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListResourceDataSyncCommand.js
var ListResourceDataSyncCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListResourceDataSync", {}).n("SSMClient", "ListResourceDataSyncCommand").f(void 0, void 0).ser(se_ListResourceDataSyncCommand).de(de_ListResourceDataSyncCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ListTagsForResourceCommand.js
var ListTagsForResourceCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ListTagsForResource", {}).n("SSMClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ModifyDocumentPermissionCommand.js
var ModifyDocumentPermissionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ModifyDocumentPermission", {}).n("SSMClient", "ModifyDocumentPermissionCommand").f(void 0, void 0).ser(se_ModifyDocumentPermissionCommand).de(de_ModifyDocumentPermissionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/PutComplianceItemsCommand.js
var PutComplianceItemsCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "PutComplianceItems", {}).n("SSMClient", "PutComplianceItemsCommand").f(void 0, void 0).ser(se_PutComplianceItemsCommand).de(de_PutComplianceItemsCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/PutInventoryCommand.js
var PutInventoryCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "PutInventory", {}).n("SSMClient", "PutInventoryCommand").f(void 0, void 0).ser(se_PutInventoryCommand).de(de_PutInventoryCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/PutParameterCommand.js
var PutParameterCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "PutParameter", {}).n("SSMClient", "PutParameterCommand").f(PutParameterRequestFilterSensitiveLog, void 0).ser(se_PutParameterCommand).de(de_PutParameterCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/PutResourcePolicyCommand.js
var PutResourcePolicyCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "PutResourcePolicy", {}).n("SSMClient", "PutResourcePolicyCommand").f(void 0, void 0).ser(se_PutResourcePolicyCommand).de(de_PutResourcePolicyCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/RegisterDefaultPatchBaselineCommand.js
var RegisterDefaultPatchBaselineCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "RegisterDefaultPatchBaseline", {}).n("SSMClient", "RegisterDefaultPatchBaselineCommand").f(void 0, void 0).ser(se_RegisterDefaultPatchBaselineCommand).de(de_RegisterDefaultPatchBaselineCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/RegisterPatchBaselineForPatchGroupCommand.js
var RegisterPatchBaselineForPatchGroupCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "RegisterPatchBaselineForPatchGroup", {}).n("SSMClient", "RegisterPatchBaselineForPatchGroupCommand").f(void 0, void 0).ser(se_RegisterPatchBaselineForPatchGroupCommand).de(de_RegisterPatchBaselineForPatchGroupCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/RegisterTargetWithMaintenanceWindowCommand.js
var RegisterTargetWithMaintenanceWindowCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "RegisterTargetWithMaintenanceWindow", {}).n("SSMClient", "RegisterTargetWithMaintenanceWindowCommand").f(RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog, void 0).ser(se_RegisterTargetWithMaintenanceWindowCommand).de(de_RegisterTargetWithMaintenanceWindowCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/RegisterTaskWithMaintenanceWindowCommand.js
var RegisterTaskWithMaintenanceWindowCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "RegisterTaskWithMaintenanceWindow", {}).n("SSMClient", "RegisterTaskWithMaintenanceWindowCommand").f(RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog, void 0).ser(se_RegisterTaskWithMaintenanceWindowCommand).de(de_RegisterTaskWithMaintenanceWindowCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/RemoveTagsFromResourceCommand.js
var RemoveTagsFromResourceCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "RemoveTagsFromResource", {}).n("SSMClient", "RemoveTagsFromResourceCommand").f(void 0, void 0).ser(se_RemoveTagsFromResourceCommand).de(de_RemoveTagsFromResourceCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ResetServiceSettingCommand.js
var ResetServiceSettingCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ResetServiceSetting", {}).n("SSMClient", "ResetServiceSettingCommand").f(void 0, void 0).ser(se_ResetServiceSettingCommand).de(de_ResetServiceSettingCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/ResumeSessionCommand.js
var ResumeSessionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "ResumeSession", {}).n("SSMClient", "ResumeSessionCommand").f(void 0, void 0).ser(se_ResumeSessionCommand).de(de_ResumeSessionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/SendAutomationSignalCommand.js
var SendAutomationSignalCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "SendAutomationSignal", {}).n("SSMClient", "SendAutomationSignalCommand").f(void 0, void 0).ser(se_SendAutomationSignalCommand).de(de_SendAutomationSignalCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/SendCommandCommand.js
var SendCommandCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "SendCommand", {}).n("SSMClient", "SendCommandCommand").f(SendCommandRequestFilterSensitiveLog, SendCommandResultFilterSensitiveLog).ser(se_SendCommandCommand).de(de_SendCommandCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/StartAssociationsOnceCommand.js
var StartAssociationsOnceCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "StartAssociationsOnce", {}).n("SSMClient", "StartAssociationsOnceCommand").f(void 0, void 0).ser(se_StartAssociationsOnceCommand).de(de_StartAssociationsOnceCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/StartAutomationExecutionCommand.js
var StartAutomationExecutionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "StartAutomationExecution", {}).n("SSMClient", "StartAutomationExecutionCommand").f(void 0, void 0).ser(se_StartAutomationExecutionCommand).de(de_StartAutomationExecutionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/StartChangeRequestExecutionCommand.js
var StartChangeRequestExecutionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "StartChangeRequestExecution", {}).n("SSMClient", "StartChangeRequestExecutionCommand").f(void 0, void 0).ser(se_StartChangeRequestExecutionCommand).de(de_StartChangeRequestExecutionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/StartExecutionPreviewCommand.js
var StartExecutionPreviewCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "StartExecutionPreview", {}).n("SSMClient", "StartExecutionPreviewCommand").f(void 0, void 0).ser(se_StartExecutionPreviewCommand).de(de_StartExecutionPreviewCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/StartSessionCommand.js
var StartSessionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "StartSession", {}).n("SSMClient", "StartSessionCommand").f(void 0, void 0).ser(se_StartSessionCommand).de(de_StartSessionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/StopAutomationExecutionCommand.js
var StopAutomationExecutionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "StopAutomationExecution", {}).n("SSMClient", "StopAutomationExecutionCommand").f(void 0, void 0).ser(se_StopAutomationExecutionCommand).de(de_StopAutomationExecutionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/TerminateSessionCommand.js
var TerminateSessionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "TerminateSession", {}).n("SSMClient", "TerminateSessionCommand").f(void 0, void 0).ser(se_TerminateSessionCommand).de(de_TerminateSessionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UnlabelParameterVersionCommand.js
var UnlabelParameterVersionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UnlabelParameterVersion", {}).n("SSMClient", "UnlabelParameterVersionCommand").f(void 0, void 0).ser(se_UnlabelParameterVersionCommand).de(de_UnlabelParameterVersionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateAssociationCommand.js
var UpdateAssociationCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateAssociation", {}).n("SSMClient", "UpdateAssociationCommand").f(UpdateAssociationRequestFilterSensitiveLog, UpdateAssociationResultFilterSensitiveLog).ser(se_UpdateAssociationCommand).de(de_UpdateAssociationCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateAssociationStatusCommand.js
var UpdateAssociationStatusCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateAssociationStatus", {}).n("SSMClient", "UpdateAssociationStatusCommand").f(void 0, UpdateAssociationStatusResultFilterSensitiveLog).ser(se_UpdateAssociationStatusCommand).de(de_UpdateAssociationStatusCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateDocumentCommand.js
var UpdateDocumentCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateDocument", {}).n("SSMClient", "UpdateDocumentCommand").f(void 0, void 0).ser(se_UpdateDocumentCommand).de(de_UpdateDocumentCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateDocumentDefaultVersionCommand.js
var UpdateDocumentDefaultVersionCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateDocumentDefaultVersion", {}).n("SSMClient", "UpdateDocumentDefaultVersionCommand").f(void 0, void 0).ser(se_UpdateDocumentDefaultVersionCommand).de(de_UpdateDocumentDefaultVersionCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateDocumentMetadataCommand.js
var UpdateDocumentMetadataCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateDocumentMetadata", {}).n("SSMClient", "UpdateDocumentMetadataCommand").f(void 0, void 0).ser(se_UpdateDocumentMetadataCommand).de(de_UpdateDocumentMetadataCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateMaintenanceWindowCommand.js
var UpdateMaintenanceWindowCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateMaintenanceWindow", {}).n("SSMClient", "UpdateMaintenanceWindowCommand").f(UpdateMaintenanceWindowRequestFilterSensitiveLog, UpdateMaintenanceWindowResultFilterSensitiveLog).ser(se_UpdateMaintenanceWindowCommand).de(de_UpdateMaintenanceWindowCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateMaintenanceWindowTargetCommand.js
var UpdateMaintenanceWindowTargetCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateMaintenanceWindowTarget", {}).n("SSMClient", "UpdateMaintenanceWindowTargetCommand").f(UpdateMaintenanceWindowTargetRequestFilterSensitiveLog, UpdateMaintenanceWindowTargetResultFilterSensitiveLog).ser(se_UpdateMaintenanceWindowTargetCommand).de(de_UpdateMaintenanceWindowTargetCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateMaintenanceWindowTaskCommand.js
var UpdateMaintenanceWindowTaskCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateMaintenanceWindowTask", {}).n("SSMClient", "UpdateMaintenanceWindowTaskCommand").f(UpdateMaintenanceWindowTaskRequestFilterSensitiveLog, UpdateMaintenanceWindowTaskResultFilterSensitiveLog).ser(se_UpdateMaintenanceWindowTaskCommand).de(de_UpdateMaintenanceWindowTaskCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateManagedInstanceRoleCommand.js
var UpdateManagedInstanceRoleCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateManagedInstanceRole", {}).n("SSMClient", "UpdateManagedInstanceRoleCommand").f(void 0, void 0).ser(se_UpdateManagedInstanceRoleCommand).de(de_UpdateManagedInstanceRoleCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateOpsItemCommand.js
var UpdateOpsItemCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateOpsItem", {}).n("SSMClient", "UpdateOpsItemCommand").f(void 0, void 0).ser(se_UpdateOpsItemCommand).de(de_UpdateOpsItemCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateOpsMetadataCommand.js
var UpdateOpsMetadataCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateOpsMetadata", {}).n("SSMClient", "UpdateOpsMetadataCommand").f(void 0, void 0).ser(se_UpdateOpsMetadataCommand).de(de_UpdateOpsMetadataCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdatePatchBaselineCommand.js
var UpdatePatchBaselineCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdatePatchBaseline", {}).n("SSMClient", "UpdatePatchBaselineCommand").f(UpdatePatchBaselineRequestFilterSensitiveLog, UpdatePatchBaselineResultFilterSensitiveLog).ser(se_UpdatePatchBaselineCommand).de(de_UpdatePatchBaselineCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateResourceDataSyncCommand.js
var UpdateResourceDataSyncCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateResourceDataSync", {}).n("SSMClient", "UpdateResourceDataSyncCommand").f(void 0, void 0).ser(se_UpdateResourceDataSyncCommand).de(de_UpdateResourceDataSyncCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/commands/UpdateServiceSettingCommand.js
var UpdateServiceSettingCommand = class extends Command.classBuilder().ep(commonParams).m(function(Command2, cs, config, o2) {
  return [
    getSerdePlugin(config, this.serialize, this.deserialize),
    getEndpointPlugin(config, Command2.getEndpointParameterInstructions())
  ];
}).s("AmazonSSM", "UpdateServiceSetting", {}).n("SSMClient", "UpdateServiceSettingCommand").f(void 0, void 0).ser(se_UpdateServiceSettingCommand).de(de_UpdateServiceSettingCommand).build() {
};

// node_modules/@aws-sdk/client-ssm/dist-es/SSM.js
var commands = {
  AddTagsToResourceCommand,
  AssociateOpsItemRelatedItemCommand,
  CancelCommandCommand,
  CancelMaintenanceWindowExecutionCommand,
  CreateActivationCommand,
  CreateAssociationCommand,
  CreateAssociationBatchCommand,
  CreateDocumentCommand,
  CreateMaintenanceWindowCommand,
  CreateOpsItemCommand,
  CreateOpsMetadataCommand,
  CreatePatchBaselineCommand,
  CreateResourceDataSyncCommand,
  DeleteActivationCommand,
  DeleteAssociationCommand,
  DeleteDocumentCommand,
  DeleteInventoryCommand,
  DeleteMaintenanceWindowCommand,
  DeleteOpsItemCommand,
  DeleteOpsMetadataCommand,
  DeleteParameterCommand,
  DeleteParametersCommand,
  DeletePatchBaselineCommand,
  DeleteResourceDataSyncCommand,
  DeleteResourcePolicyCommand,
  DeregisterManagedInstanceCommand,
  DeregisterPatchBaselineForPatchGroupCommand,
  DeregisterTargetFromMaintenanceWindowCommand,
  DeregisterTaskFromMaintenanceWindowCommand,
  DescribeActivationsCommand,
  DescribeAssociationCommand,
  DescribeAssociationExecutionsCommand,
  DescribeAssociationExecutionTargetsCommand,
  DescribeAutomationExecutionsCommand,
  DescribeAutomationStepExecutionsCommand,
  DescribeAvailablePatchesCommand,
  DescribeDocumentCommand,
  DescribeDocumentPermissionCommand,
  DescribeEffectiveInstanceAssociationsCommand,
  DescribeEffectivePatchesForPatchBaselineCommand,
  DescribeInstanceAssociationsStatusCommand,
  DescribeInstanceInformationCommand,
  DescribeInstancePatchesCommand,
  DescribeInstancePatchStatesCommand,
  DescribeInstancePatchStatesForPatchGroupCommand,
  DescribeInstancePropertiesCommand,
  DescribeInventoryDeletionsCommand,
  DescribeMaintenanceWindowExecutionsCommand,
  DescribeMaintenanceWindowExecutionTaskInvocationsCommand,
  DescribeMaintenanceWindowExecutionTasksCommand,
  DescribeMaintenanceWindowsCommand,
  DescribeMaintenanceWindowScheduleCommand,
  DescribeMaintenanceWindowsForTargetCommand,
  DescribeMaintenanceWindowTargetsCommand,
  DescribeMaintenanceWindowTasksCommand,
  DescribeOpsItemsCommand,
  DescribeParametersCommand,
  DescribePatchBaselinesCommand,
  DescribePatchGroupsCommand,
  DescribePatchGroupStateCommand,
  DescribePatchPropertiesCommand,
  DescribeSessionsCommand,
  DisassociateOpsItemRelatedItemCommand,
  GetAutomationExecutionCommand,
  GetCalendarStateCommand,
  GetCommandInvocationCommand,
  GetConnectionStatusCommand,
  GetDefaultPatchBaselineCommand,
  GetDeployablePatchSnapshotForInstanceCommand,
  GetDocumentCommand,
  GetExecutionPreviewCommand,
  GetInventoryCommand,
  GetInventorySchemaCommand,
  GetMaintenanceWindowCommand,
  GetMaintenanceWindowExecutionCommand,
  GetMaintenanceWindowExecutionTaskCommand,
  GetMaintenanceWindowExecutionTaskInvocationCommand,
  GetMaintenanceWindowTaskCommand,
  GetOpsItemCommand,
  GetOpsMetadataCommand,
  GetOpsSummaryCommand,
  GetParameterCommand,
  GetParameterHistoryCommand,
  GetParametersCommand,
  GetParametersByPathCommand,
  GetPatchBaselineCommand,
  GetPatchBaselineForPatchGroupCommand,
  GetResourcePoliciesCommand,
  GetServiceSettingCommand,
  LabelParameterVersionCommand,
  ListAssociationsCommand,
  ListAssociationVersionsCommand,
  ListCommandInvocationsCommand,
  ListCommandsCommand,
  ListComplianceItemsCommand,
  ListComplianceSummariesCommand,
  ListDocumentMetadataHistoryCommand,
  ListDocumentsCommand,
  ListDocumentVersionsCommand,
  ListInventoryEntriesCommand,
  ListNodesCommand,
  ListNodesSummaryCommand,
  ListOpsItemEventsCommand,
  ListOpsItemRelatedItemsCommand,
  ListOpsMetadataCommand,
  ListResourceComplianceSummariesCommand,
  ListResourceDataSyncCommand,
  ListTagsForResourceCommand,
  ModifyDocumentPermissionCommand,
  PutComplianceItemsCommand,
  PutInventoryCommand,
  PutParameterCommand,
  PutResourcePolicyCommand,
  RegisterDefaultPatchBaselineCommand,
  RegisterPatchBaselineForPatchGroupCommand,
  RegisterTargetWithMaintenanceWindowCommand,
  RegisterTaskWithMaintenanceWindowCommand,
  RemoveTagsFromResourceCommand,
  ResetServiceSettingCommand,
  ResumeSessionCommand,
  SendAutomationSignalCommand,
  SendCommandCommand,
  StartAssociationsOnceCommand,
  StartAutomationExecutionCommand,
  StartChangeRequestExecutionCommand,
  StartExecutionPreviewCommand,
  StartSessionCommand,
  StopAutomationExecutionCommand,
  TerminateSessionCommand,
  UnlabelParameterVersionCommand,
  UpdateAssociationCommand,
  UpdateAssociationStatusCommand,
  UpdateDocumentCommand,
  UpdateDocumentDefaultVersionCommand,
  UpdateDocumentMetadataCommand,
  UpdateMaintenanceWindowCommand,
  UpdateMaintenanceWindowTargetCommand,
  UpdateMaintenanceWindowTaskCommand,
  UpdateManagedInstanceRoleCommand,
  UpdateOpsItemCommand,
  UpdateOpsMetadataCommand,
  UpdatePatchBaselineCommand,
  UpdateResourceDataSyncCommand,
  UpdateServiceSettingCommand
};
var SSM = class extends SSMClient {
};
createAggregatedClient(commands, SSM);

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeActivationsPaginator.js
var paginateDescribeActivations = createPaginator(SSMClient, DescribeActivationsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeAssociationExecutionTargetsPaginator.js
var paginateDescribeAssociationExecutionTargets = createPaginator(SSMClient, DescribeAssociationExecutionTargetsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeAssociationExecutionsPaginator.js
var paginateDescribeAssociationExecutions = createPaginator(SSMClient, DescribeAssociationExecutionsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeAutomationExecutionsPaginator.js
var paginateDescribeAutomationExecutions = createPaginator(SSMClient, DescribeAutomationExecutionsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeAutomationStepExecutionsPaginator.js
var paginateDescribeAutomationStepExecutions = createPaginator(SSMClient, DescribeAutomationStepExecutionsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeAvailablePatchesPaginator.js
var paginateDescribeAvailablePatches = createPaginator(SSMClient, DescribeAvailablePatchesCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeEffectiveInstanceAssociationsPaginator.js
var paginateDescribeEffectiveInstanceAssociations = createPaginator(SSMClient, DescribeEffectiveInstanceAssociationsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeEffectivePatchesForPatchBaselinePaginator.js
var paginateDescribeEffectivePatchesForPatchBaseline = createPaginator(SSMClient, DescribeEffectivePatchesForPatchBaselineCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeInstanceAssociationsStatusPaginator.js
var paginateDescribeInstanceAssociationsStatus = createPaginator(SSMClient, DescribeInstanceAssociationsStatusCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeInstanceInformationPaginator.js
var paginateDescribeInstanceInformation = createPaginator(SSMClient, DescribeInstanceInformationCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeInstancePatchStatesForPatchGroupPaginator.js
var paginateDescribeInstancePatchStatesForPatchGroup = createPaginator(SSMClient, DescribeInstancePatchStatesForPatchGroupCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeInstancePatchStatesPaginator.js
var paginateDescribeInstancePatchStates = createPaginator(SSMClient, DescribeInstancePatchStatesCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeInstancePatchesPaginator.js
var paginateDescribeInstancePatches = createPaginator(SSMClient, DescribeInstancePatchesCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeInstancePropertiesPaginator.js
var paginateDescribeInstanceProperties = createPaginator(SSMClient, DescribeInstancePropertiesCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeInventoryDeletionsPaginator.js
var paginateDescribeInventoryDeletions = createPaginator(SSMClient, DescribeInventoryDeletionsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeMaintenanceWindowExecutionTaskInvocationsPaginator.js
var paginateDescribeMaintenanceWindowExecutionTaskInvocations = createPaginator(SSMClient, DescribeMaintenanceWindowExecutionTaskInvocationsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeMaintenanceWindowExecutionTasksPaginator.js
var paginateDescribeMaintenanceWindowExecutionTasks = createPaginator(SSMClient, DescribeMaintenanceWindowExecutionTasksCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeMaintenanceWindowExecutionsPaginator.js
var paginateDescribeMaintenanceWindowExecutions = createPaginator(SSMClient, DescribeMaintenanceWindowExecutionsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeMaintenanceWindowSchedulePaginator.js
var paginateDescribeMaintenanceWindowSchedule = createPaginator(SSMClient, DescribeMaintenanceWindowScheduleCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeMaintenanceWindowTargetsPaginator.js
var paginateDescribeMaintenanceWindowTargets = createPaginator(SSMClient, DescribeMaintenanceWindowTargetsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeMaintenanceWindowTasksPaginator.js
var paginateDescribeMaintenanceWindowTasks = createPaginator(SSMClient, DescribeMaintenanceWindowTasksCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeMaintenanceWindowsForTargetPaginator.js
var paginateDescribeMaintenanceWindowsForTarget = createPaginator(SSMClient, DescribeMaintenanceWindowsForTargetCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeMaintenanceWindowsPaginator.js
var paginateDescribeMaintenanceWindows = createPaginator(SSMClient, DescribeMaintenanceWindowsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeOpsItemsPaginator.js
var paginateDescribeOpsItems = createPaginator(SSMClient, DescribeOpsItemsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeParametersPaginator.js
var paginateDescribeParameters = createPaginator(SSMClient, DescribeParametersCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribePatchBaselinesPaginator.js
var paginateDescribePatchBaselines = createPaginator(SSMClient, DescribePatchBaselinesCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribePatchGroupsPaginator.js
var paginateDescribePatchGroups = createPaginator(SSMClient, DescribePatchGroupsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribePatchPropertiesPaginator.js
var paginateDescribePatchProperties = createPaginator(SSMClient, DescribePatchPropertiesCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/DescribeSessionsPaginator.js
var paginateDescribeSessions = createPaginator(SSMClient, DescribeSessionsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/GetInventoryPaginator.js
var paginateGetInventory = createPaginator(SSMClient, GetInventoryCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/GetInventorySchemaPaginator.js
var paginateGetInventorySchema = createPaginator(SSMClient, GetInventorySchemaCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/GetOpsSummaryPaginator.js
var paginateGetOpsSummary = createPaginator(SSMClient, GetOpsSummaryCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/GetParameterHistoryPaginator.js
var paginateGetParameterHistory = createPaginator(SSMClient, GetParameterHistoryCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/GetParametersByPathPaginator.js
var paginateGetParametersByPath = createPaginator(SSMClient, GetParametersByPathCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/GetResourcePoliciesPaginator.js
var paginateGetResourcePolicies = createPaginator(SSMClient, GetResourcePoliciesCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListAssociationVersionsPaginator.js
var paginateListAssociationVersions = createPaginator(SSMClient, ListAssociationVersionsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListAssociationsPaginator.js
var paginateListAssociations = createPaginator(SSMClient, ListAssociationsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListCommandInvocationsPaginator.js
var paginateListCommandInvocations = createPaginator(SSMClient, ListCommandInvocationsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListCommandsPaginator.js
var paginateListCommands = createPaginator(SSMClient, ListCommandsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListComplianceItemsPaginator.js
var paginateListComplianceItems = createPaginator(SSMClient, ListComplianceItemsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListComplianceSummariesPaginator.js
var paginateListComplianceSummaries = createPaginator(SSMClient, ListComplianceSummariesCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListDocumentVersionsPaginator.js
var paginateListDocumentVersions = createPaginator(SSMClient, ListDocumentVersionsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListDocumentsPaginator.js
var paginateListDocuments = createPaginator(SSMClient, ListDocumentsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListNodesPaginator.js
var paginateListNodes = createPaginator(SSMClient, ListNodesCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListNodesSummaryPaginator.js
var paginateListNodesSummary = createPaginator(SSMClient, ListNodesSummaryCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListOpsItemEventsPaginator.js
var paginateListOpsItemEvents = createPaginator(SSMClient, ListOpsItemEventsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListOpsItemRelatedItemsPaginator.js
var paginateListOpsItemRelatedItems = createPaginator(SSMClient, ListOpsItemRelatedItemsCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListOpsMetadataPaginator.js
var paginateListOpsMetadata = createPaginator(SSMClient, ListOpsMetadataCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListResourceComplianceSummariesPaginator.js
var paginateListResourceComplianceSummaries = createPaginator(SSMClient, ListResourceComplianceSummariesCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/pagination/ListResourceDataSyncPaginator.js
var paginateListResourceDataSync = createPaginator(SSMClient, ListResourceDataSyncCommand, "NextToken", "NextToken", "MaxResults");

// node_modules/@aws-sdk/client-ssm/dist-es/waiters/waitForCommandExecuted.js
var checkState = async (client, input) => {
  let reason;
  try {
    const result = await client.send(new GetCommandInvocationCommand(input));
    reason = result;
    try {
      const returnComparator = () => {
        return result.Status;
      };
      if (returnComparator() === "Pending") {
        return { state: WaiterState.RETRY, reason };
      }
    } catch (e2) {
    }
    try {
      const returnComparator = () => {
        return result.Status;
      };
      if (returnComparator() === "InProgress") {
        return { state: WaiterState.RETRY, reason };
      }
    } catch (e2) {
    }
    try {
      const returnComparator = () => {
        return result.Status;
      };
      if (returnComparator() === "Delayed") {
        return { state: WaiterState.RETRY, reason };
      }
    } catch (e2) {
    }
    try {
      const returnComparator = () => {
        return result.Status;
      };
      if (returnComparator() === "Success") {
        return { state: WaiterState.SUCCESS, reason };
      }
    } catch (e2) {
    }
    try {
      const returnComparator = () => {
        return result.Status;
      };
      if (returnComparator() === "Cancelled") {
        return { state: WaiterState.FAILURE, reason };
      }
    } catch (e2) {
    }
    try {
      const returnComparator = () => {
        return result.Status;
      };
      if (returnComparator() === "TimedOut") {
        return { state: WaiterState.FAILURE, reason };
      }
    } catch (e2) {
    }
    try {
      const returnComparator = () => {
        return result.Status;
      };
      if (returnComparator() === "Failed") {
        return { state: WaiterState.FAILURE, reason };
      }
    } catch (e2) {
    }
    try {
      const returnComparator = () => {
        return result.Status;
      };
      if (returnComparator() === "Cancelling") {
        return { state: WaiterState.FAILURE, reason };
      }
    } catch (e2) {
    }
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "InvocationDoesNotExist") {
      return { state: WaiterState.RETRY, reason };
    }
  }
  return { state: WaiterState.RETRY, reason };
};
var waitForCommandExecuted = async (params, input) => {
  const serviceDefaults = { minDelay: 5, maxDelay: 120 };
  return createWaiter({ ...serviceDefaults, ...params }, input, checkState);
};
var waitUntilCommandExecuted = async (params, input) => {
  const serviceDefaults = { minDelay: 5, maxDelay: 120 };
  const result = await createWaiter({ ...serviceDefaults, ...params }, input, checkState);
  return checkExceptions(result);
};
export {
  Command as $Command,
  AddTagsToResourceCommand,
  AlreadyExistsException,
  AssociateOpsItemRelatedItemCommand,
  AssociatedInstances,
  AssociationAlreadyExists,
  AssociationComplianceSeverity,
  AssociationDescriptionFilterSensitiveLog,
  AssociationDoesNotExist,
  AssociationExecutionDoesNotExist,
  AssociationExecutionFilterKey,
  AssociationExecutionTargetsFilterKey,
  AssociationFilterKey,
  AssociationFilterOperatorType,
  AssociationLimitExceeded,
  AssociationStatusName,
  AssociationSyncCompliance,
  AssociationVersionInfoFilterSensitiveLog,
  AssociationVersionLimitExceeded,
  AttachmentHashType,
  AttachmentsSourceKey,
  AutomationDefinitionNotApprovedException,
  AutomationDefinitionNotFoundException,
  AutomationDefinitionVersionNotFoundException,
  AutomationExecutionFilterKey,
  AutomationExecutionLimitExceededException,
  AutomationExecutionNotFoundException,
  AutomationExecutionStatus,
  AutomationStepNotFoundException,
  AutomationSubtype,
  AutomationType,
  BaselineOverrideFilterSensitiveLog,
  CalendarState,
  CancelCommandCommand,
  CancelMaintenanceWindowExecutionCommand,
  CommandFilterKey,
  CommandFilterSensitiveLog,
  CommandInvocationStatus,
  CommandPluginStatus,
  CommandStatus,
  ComplianceQueryOperatorType,
  ComplianceSeverity,
  ComplianceStatus,
  ComplianceTypeCountLimitExceededException,
  ComplianceUploadType,
  ConnectionStatus,
  CreateActivationCommand,
  CreateAssociationBatchCommand,
  CreateAssociationBatchRequestEntryFilterSensitiveLog,
  CreateAssociationBatchRequestFilterSensitiveLog,
  CreateAssociationBatchResultFilterSensitiveLog,
  CreateAssociationCommand,
  CreateAssociationRequestFilterSensitiveLog,
  CreateAssociationResultFilterSensitiveLog,
  CreateDocumentCommand,
  CreateMaintenanceWindowCommand,
  CreateMaintenanceWindowRequestFilterSensitiveLog,
  CreateOpsItemCommand,
  CreateOpsMetadataCommand,
  CreatePatchBaselineCommand,
  CreatePatchBaselineRequestFilterSensitiveLog,
  CreateResourceDataSyncCommand,
  CustomSchemaCountLimitExceededException,
  DeleteActivationCommand,
  DeleteAssociationCommand,
  DeleteDocumentCommand,
  DeleteInventoryCommand,
  DeleteMaintenanceWindowCommand,
  DeleteOpsItemCommand,
  DeleteOpsMetadataCommand,
  DeleteParameterCommand,
  DeleteParametersCommand,
  DeletePatchBaselineCommand,
  DeleteResourceDataSyncCommand,
  DeleteResourcePolicyCommand,
  DeregisterManagedInstanceCommand,
  DeregisterPatchBaselineForPatchGroupCommand,
  DeregisterTargetFromMaintenanceWindowCommand,
  DeregisterTaskFromMaintenanceWindowCommand,
  DescribeActivationsCommand,
  DescribeActivationsFilterKeys,
  DescribeAssociationCommand,
  DescribeAssociationExecutionTargetsCommand,
  DescribeAssociationExecutionsCommand,
  DescribeAssociationResultFilterSensitiveLog,
  DescribeAutomationExecutionsCommand,
  DescribeAutomationStepExecutionsCommand,
  DescribeAvailablePatchesCommand,
  DescribeDocumentCommand,
  DescribeDocumentPermissionCommand,
  DescribeEffectiveInstanceAssociationsCommand,
  DescribeEffectivePatchesForPatchBaselineCommand,
  DescribeInstanceAssociationsStatusCommand,
  DescribeInstanceInformationCommand,
  DescribeInstanceInformationResultFilterSensitiveLog,
  DescribeInstancePatchStatesCommand,
  DescribeInstancePatchStatesForPatchGroupCommand,
  DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog,
  DescribeInstancePatchStatesResultFilterSensitiveLog,
  DescribeInstancePatchesCommand,
  DescribeInstancePropertiesCommand,
  DescribeInstancePropertiesResultFilterSensitiveLog,
  DescribeInventoryDeletionsCommand,
  DescribeMaintenanceWindowExecutionTaskInvocationsCommand,
  DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog,
  DescribeMaintenanceWindowExecutionTasksCommand,
  DescribeMaintenanceWindowExecutionsCommand,
  DescribeMaintenanceWindowScheduleCommand,
  DescribeMaintenanceWindowTargetsCommand,
  DescribeMaintenanceWindowTargetsResultFilterSensitiveLog,
  DescribeMaintenanceWindowTasksCommand,
  DescribeMaintenanceWindowTasksResultFilterSensitiveLog,
  DescribeMaintenanceWindowsCommand,
  DescribeMaintenanceWindowsForTargetCommand,
  DescribeMaintenanceWindowsResultFilterSensitiveLog,
  DescribeOpsItemsCommand,
  DescribeParametersCommand,
  DescribePatchBaselinesCommand,
  DescribePatchGroupStateCommand,
  DescribePatchGroupsCommand,
  DescribePatchPropertiesCommand,
  DescribeSessionsCommand,
  DisassociateOpsItemRelatedItemCommand,
  DocumentAlreadyExists,
  DocumentFilterKey,
  DocumentFormat,
  DocumentHashType,
  DocumentLimitExceeded,
  DocumentMetadataEnum,
  DocumentParameterType,
  DocumentPermissionLimit,
  DocumentPermissionType,
  DocumentReviewAction,
  DocumentReviewCommentType,
  DocumentStatus,
  DocumentType,
  DocumentVersionLimitExceeded,
  DoesNotExistException,
  DuplicateDocumentContent,
  DuplicateDocumentVersionName,
  DuplicateInstanceId,
  ExecutionInputs,
  ExecutionMode,
  ExecutionPreview,
  ExecutionPreviewStatus,
  ExternalAlarmState,
  FailedCreateAssociationFilterSensitiveLog,
  Fault,
  FeatureNotAvailableException,
  GetAutomationExecutionCommand,
  GetCalendarStateCommand,
  GetCommandInvocationCommand,
  GetConnectionStatusCommand,
  GetDefaultPatchBaselineCommand,
  GetDeployablePatchSnapshotForInstanceCommand,
  GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog,
  GetDocumentCommand,
  GetExecutionPreviewCommand,
  GetInventoryCommand,
  GetInventorySchemaCommand,
  GetMaintenanceWindowCommand,
  GetMaintenanceWindowExecutionCommand,
  GetMaintenanceWindowExecutionTaskCommand,
  GetMaintenanceWindowExecutionTaskInvocationCommand,
  GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog,
  GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog,
  GetMaintenanceWindowResultFilterSensitiveLog,
  GetMaintenanceWindowTaskCommand,
  GetMaintenanceWindowTaskResultFilterSensitiveLog,
  GetOpsItemCommand,
  GetOpsMetadataCommand,
  GetOpsSummaryCommand,
  GetParameterCommand,
  GetParameterHistoryCommand,
  GetParameterHistoryResultFilterSensitiveLog,
  GetParameterResultFilterSensitiveLog,
  GetParametersByPathCommand,
  GetParametersByPathResultFilterSensitiveLog,
  GetParametersCommand,
  GetParametersResultFilterSensitiveLog,
  GetPatchBaselineCommand,
  GetPatchBaselineForPatchGroupCommand,
  GetPatchBaselineResultFilterSensitiveLog,
  GetResourcePoliciesCommand,
  GetServiceSettingCommand,
  HierarchyLevelLimitExceededException,
  HierarchyTypeMismatchException,
  IdempotentParameterMismatch,
  ImpactType,
  IncompatiblePolicyException,
  InstanceInfoFilterSensitiveLog,
  InstanceInformationFilterKey,
  InstanceInformationFilterSensitiveLog,
  InstancePatchStateFilterSensitiveLog,
  InstancePatchStateOperatorType,
  InstancePropertyFilterKey,
  InstancePropertyFilterOperator,
  InstancePropertyFilterSensitiveLog,
  InternalServerError,
  InvalidActivation,
  InvalidActivationId,
  InvalidAggregatorException,
  InvalidAllowedPatternException,
  InvalidAssociation,
  InvalidAssociationVersion,
  InvalidAutomationExecutionParametersException,
  InvalidAutomationSignalException,
  InvalidAutomationStatusUpdateException,
  InvalidCommandId,
  InvalidDeleteInventoryParametersException,
  InvalidDeletionIdException,
  InvalidDocument,
  InvalidDocumentContent,
  InvalidDocumentOperation,
  InvalidDocumentSchemaVersion,
  InvalidDocumentType,
  InvalidDocumentVersion,
  InvalidFilter,
  InvalidFilterKey,
  InvalidFilterOption,
  InvalidFilterValue,
  InvalidInstanceId,
  InvalidInstanceInformationFilterValue,
  InvalidInstancePropertyFilterValue,
  InvalidInventoryGroupException,
  InvalidInventoryItemContextException,
  InvalidInventoryRequestException,
  InvalidItemContentException,
  InvalidKeyId,
  InvalidNextToken,
  InvalidNotificationConfig,
  InvalidOptionException,
  InvalidOutputFolder,
  InvalidOutputLocation,
  InvalidParameters,
  InvalidPermissionType,
  InvalidPluginName,
  InvalidPolicyAttributeException,
  InvalidPolicyTypeException,
  InvalidResourceId,
  InvalidResourceType,
  InvalidResultAttributeException,
  InvalidRole,
  InvalidSchedule,
  InvalidTag,
  InvalidTarget,
  InvalidTargetMaps,
  InvalidTypeNameException,
  InvalidUpdate,
  InventoryAttributeDataType,
  InventoryDeletionStatus,
  InventoryQueryOperatorType,
  InventorySchemaDeleteOption,
  InvocationDoesNotExist,
  ItemContentMismatchException,
  ItemSizeLimitExceededException,
  LabelParameterVersionCommand,
  LastResourceDataSyncStatus,
  ListAssociationVersionsCommand,
  ListAssociationVersionsResultFilterSensitiveLog,
  ListAssociationsCommand,
  ListCommandInvocationsCommand,
  ListCommandsCommand,
  ListCommandsResultFilterSensitiveLog,
  ListComplianceItemsCommand,
  ListComplianceSummariesCommand,
  ListDocumentMetadataHistoryCommand,
  ListDocumentVersionsCommand,
  ListDocumentsCommand,
  ListInventoryEntriesCommand,
  ListNodesCommand,
  ListNodesResultFilterSensitiveLog,
  ListNodesSummaryCommand,
  ListOpsItemEventsCommand,
  ListOpsItemRelatedItemsCommand,
  ListOpsMetadataCommand,
  ListResourceComplianceSummariesCommand,
  ListResourceDataSyncCommand,
  ListTagsForResourceCommand,
  MaintenanceWindowExecutionStatus,
  MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog,
  MaintenanceWindowIdentityFilterSensitiveLog,
  MaintenanceWindowLambdaParametersFilterSensitiveLog,
  MaintenanceWindowResourceType,
  MaintenanceWindowRunCommandParametersFilterSensitiveLog,
  MaintenanceWindowStepFunctionsParametersFilterSensitiveLog,
  MaintenanceWindowTargetFilterSensitiveLog,
  MaintenanceWindowTaskCutoffBehavior,
  MaintenanceWindowTaskFilterSensitiveLog,
  MaintenanceWindowTaskInvocationParametersFilterSensitiveLog,
  MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog,
  MaintenanceWindowTaskType,
  MalformedResourcePolicyDocumentException,
  ManagedStatus,
  MaxDocumentSizeExceeded,
  ModifyDocumentPermissionCommand,
  NodeAggregatorType,
  NodeAttributeName,
  NodeFilterKey,
  NodeFilterOperatorType,
  NodeFilterSensitiveLog,
  NodeType,
  NodeTypeFilterSensitiveLog,
  NodeTypeName,
  NotificationEvent,
  NotificationType,
  OperatingSystem,
  OpsFilterOperatorType,
  OpsItemAccessDeniedException,
  OpsItemAlreadyExistsException,
  OpsItemConflictException,
  OpsItemDataType,
  OpsItemEventFilterKey,
  OpsItemEventFilterOperator,
  OpsItemFilterKey,
  OpsItemFilterOperator,
  OpsItemInvalidParameterException,
  OpsItemLimitExceededException,
  OpsItemNotFoundException,
  OpsItemRelatedItemAlreadyExistsException,
  OpsItemRelatedItemAssociationNotFoundException,
  OpsItemRelatedItemsFilterKey,
  OpsItemRelatedItemsFilterOperator,
  OpsItemStatus,
  OpsMetadataAlreadyExistsException,
  OpsMetadataInvalidArgumentException,
  OpsMetadataKeyLimitExceededException,
  OpsMetadataLimitExceededException,
  OpsMetadataNotFoundException,
  OpsMetadataTooManyUpdatesException,
  ParameterAlreadyExists,
  ParameterFilterSensitiveLog,
  ParameterHistoryFilterSensitiveLog,
  ParameterLimitExceeded,
  ParameterMaxVersionLimitExceeded,
  ParameterNotFound,
  ParameterPatternMismatchException,
  ParameterTier,
  ParameterType,
  ParameterVersionLabelLimitExceeded,
  ParameterVersionNotFound,
  ParametersFilterKey,
  PatchAction,
  PatchComplianceDataState,
  PatchComplianceLevel,
  PatchDeploymentStatus,
  PatchFilterKey,
  PatchOperationType,
  PatchProperty,
  PatchSet,
  PatchSourceFilterSensitiveLog,
  PingStatus,
  PlatformType,
  PoliciesLimitExceededException,
  PutComplianceItemsCommand,
  PutInventoryCommand,
  PutParameterCommand,
  PutParameterRequestFilterSensitiveLog,
  PutResourcePolicyCommand,
  RebootOption,
  RegisterDefaultPatchBaselineCommand,
  RegisterPatchBaselineForPatchGroupCommand,
  RegisterTargetWithMaintenanceWindowCommand,
  RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog,
  RegisterTaskWithMaintenanceWindowCommand,
  RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog,
  RemoveTagsFromResourceCommand,
  ResetServiceSettingCommand,
  ResourceDataSyncAlreadyExistsException,
  ResourceDataSyncConflictException,
  ResourceDataSyncCountExceededException,
  ResourceDataSyncInvalidConfigurationException,
  ResourceDataSyncNotFoundException,
  ResourceDataSyncS3Format,
  ResourceInUseException,
  ResourceLimitExceededException,
  ResourceNotFoundException,
  ResourcePolicyConflictException,
  ResourcePolicyInvalidParameterException,
  ResourcePolicyLimitExceededException,
  ResourcePolicyNotFoundException,
  ResourceType,
  ResourceTypeForTagging,
  ResumeSessionCommand,
  ReviewStatus,
  SSM,
  SSMClient,
  SSMServiceException,
  SendAutomationSignalCommand,
  SendCommandCommand,
  SendCommandRequestFilterSensitiveLog,
  SendCommandResultFilterSensitiveLog,
  ServiceSettingNotFound,
  SessionFilterKey,
  SessionState,
  SessionStatus,
  SignalType,
  SourceType,
  StartAssociationsOnceCommand,
  StartAutomationExecutionCommand,
  StartChangeRequestExecutionCommand,
  StartExecutionPreviewCommand,
  StartSessionCommand,
  StatusUnchanged,
  StepExecutionFilterKey,
  StopAutomationExecutionCommand,
  StopType,
  SubTypeCountLimitExceededException,
  TargetInUseException,
  TargetNotConnected,
  TerminateSessionCommand,
  TooManyTagsError,
  TooManyUpdates,
  TotalSizeLimitExceededException,
  UnlabelParameterVersionCommand,
  UnsupportedCalendarException,
  UnsupportedFeatureRequiredException,
  UnsupportedInventoryItemContextException,
  UnsupportedInventorySchemaVersionException,
  UnsupportedOperatingSystem,
  UnsupportedOperationException,
  UnsupportedParameterType,
  UnsupportedPlatformType,
  UpdateAssociationCommand,
  UpdateAssociationRequestFilterSensitiveLog,
  UpdateAssociationResultFilterSensitiveLog,
  UpdateAssociationStatusCommand,
  UpdateAssociationStatusResultFilterSensitiveLog,
  UpdateDocumentCommand,
  UpdateDocumentDefaultVersionCommand,
  UpdateDocumentMetadataCommand,
  UpdateMaintenanceWindowCommand,
  UpdateMaintenanceWindowRequestFilterSensitiveLog,
  UpdateMaintenanceWindowResultFilterSensitiveLog,
  UpdateMaintenanceWindowTargetCommand,
  UpdateMaintenanceWindowTargetRequestFilterSensitiveLog,
  UpdateMaintenanceWindowTargetResultFilterSensitiveLog,
  UpdateMaintenanceWindowTaskCommand,
  UpdateMaintenanceWindowTaskRequestFilterSensitiveLog,
  UpdateMaintenanceWindowTaskResultFilterSensitiveLog,
  UpdateManagedInstanceRoleCommand,
  UpdateOpsItemCommand,
  UpdateOpsMetadataCommand,
  UpdatePatchBaselineCommand,
  UpdatePatchBaselineRequestFilterSensitiveLog,
  UpdatePatchBaselineResultFilterSensitiveLog,
  UpdateResourceDataSyncCommand,
  UpdateServiceSettingCommand,
  ValidationException,
  Client as __Client,
  paginateDescribeActivations,
  paginateDescribeAssociationExecutionTargets,
  paginateDescribeAssociationExecutions,
  paginateDescribeAutomationExecutions,
  paginateDescribeAutomationStepExecutions,
  paginateDescribeAvailablePatches,
  paginateDescribeEffectiveInstanceAssociations,
  paginateDescribeEffectivePatchesForPatchBaseline,
  paginateDescribeInstanceAssociationsStatus,
  paginateDescribeInstanceInformation,
  paginateDescribeInstancePatchStates,
  paginateDescribeInstancePatchStatesForPatchGroup,
  paginateDescribeInstancePatches,
  paginateDescribeInstanceProperties,
  paginateDescribeInventoryDeletions,
  paginateDescribeMaintenanceWindowExecutionTaskInvocations,
  paginateDescribeMaintenanceWindowExecutionTasks,
  paginateDescribeMaintenanceWindowExecutions,
  paginateDescribeMaintenanceWindowSchedule,
  paginateDescribeMaintenanceWindowTargets,
  paginateDescribeMaintenanceWindowTasks,
  paginateDescribeMaintenanceWindows,
  paginateDescribeMaintenanceWindowsForTarget,
  paginateDescribeOpsItems,
  paginateDescribeParameters,
  paginateDescribePatchBaselines,
  paginateDescribePatchGroups,
  paginateDescribePatchProperties,
  paginateDescribeSessions,
  paginateGetInventory,
  paginateGetInventorySchema,
  paginateGetOpsSummary,
  paginateGetParameterHistory,
  paginateGetParametersByPath,
  paginateGetResourcePolicies,
  paginateListAssociationVersions,
  paginateListAssociations,
  paginateListCommandInvocations,
  paginateListCommands,
  paginateListComplianceItems,
  paginateListComplianceSummaries,
  paginateListDocumentVersions,
  paginateListDocuments,
  paginateListNodes,
  paginateListNodesSummary,
  paginateListOpsItemEvents,
  paginateListOpsItemRelatedItems,
  paginateListOpsMetadata,
  paginateListResourceComplianceSummaries,
  paginateListResourceDataSync,
  waitForCommandExecuted,
  waitUntilCommandExecuted
};
//# sourceMappingURL=@aws-sdk_client-ssm.js.map
