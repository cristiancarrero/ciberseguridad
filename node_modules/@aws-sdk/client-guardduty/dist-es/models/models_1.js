import { SENSITIVE_STRING } from "@smithy/smithy-client";
export const IpSetStatus = {
    ACTIVATING: "ACTIVATING",
    ACTIVE: "ACTIVE",
    DEACTIVATING: "DEACTIVATING",
    DELETED: "DELETED",
    DELETE_PENDING: "DELETE_PENDING",
    ERROR: "ERROR",
    INACTIVE: "INACTIVE",
};
export const MalwareProtectionPlanStatus = {
    ACTIVE: "ACTIVE",
    ERROR: "ERROR",
    WARNING: "WARNING",
};
export const ScanCriterionKey = {
    EC2_INSTANCE_TAG: "EC2_INSTANCE_TAG",
};
export const ThreatIntelSetStatus = {
    ACTIVATING: "ACTIVATING",
    ACTIVE: "ACTIVE",
    DEACTIVATING: "DEACTIVATING",
    DELETED: "DELETED",
    DELETE_PENDING: "DELETE_PENDING",
    ERROR: "ERROR",
    INACTIVE: "INACTIVE",
};
export const UsageFeature = {
    CLOUD_TRAIL: "CLOUD_TRAIL",
    DNS_LOGS: "DNS_LOGS",
    EBS_MALWARE_PROTECTION: "EBS_MALWARE_PROTECTION",
    EC2_RUNTIME_MONITORING: "EC2_RUNTIME_MONITORING",
    EKS_AUDIT_LOGS: "EKS_AUDIT_LOGS",
    EKS_RUNTIME_MONITORING: "EKS_RUNTIME_MONITORING",
    FARGATE_RUNTIME_MONITORING: "FARGATE_RUNTIME_MONITORING",
    FLOW_LOGS: "FLOW_LOGS",
    LAMBDA_NETWORK_LOGS: "LAMBDA_NETWORK_LOGS",
    RDS_DBI_PROTECTION_PROVISIONED: "RDS_DBI_PROTECTION_PROVISIONED",
    RDS_DBI_PROTECTION_SERVERLESS: "RDS_DBI_PROTECTION_SERVERLESS",
    RDS_LOGIN_EVENTS: "RDS_LOGIN_EVENTS",
    S3_DATA_EVENTS: "S3_DATA_EVENTS",
};
export const UsageStatisticType = {
    SUM_BY_ACCOUNT: "SUM_BY_ACCOUNT",
    SUM_BY_DATA_SOURCE: "SUM_BY_DATA_SOURCE",
    SUM_BY_FEATURES: "SUM_BY_FEATURES",
    SUM_BY_RESOURCE: "SUM_BY_RESOURCE",
    TOP_ACCOUNTS_BY_FEATURE: "TOP_ACCOUNTS_BY_FEATURE",
    TOP_RESOURCES: "TOP_RESOURCES",
};
export const MemberFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Email && { Email: SENSITIVE_STRING }),
});
export const GetMembersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Members && { Members: obj.Members.map((item) => MemberFilterSensitiveLog(item)) }),
});
export const ListMembersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Members && { Members: obj.Members.map((item) => MemberFilterSensitiveLog(item)) }),
});
