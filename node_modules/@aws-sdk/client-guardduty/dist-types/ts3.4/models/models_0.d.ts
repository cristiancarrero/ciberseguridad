import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { GuardDutyServiceException as __BaseException } from "./GuardDutyServiceException";
export interface AcceptAdministratorInvitationRequest {
  DetectorId: string | undefined;
  AdministratorId: string | undefined;
  InvitationId: string | undefined;
}
export interface AcceptAdministratorInvitationResponse {}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  Message?: string | undefined;
  Type?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export declare class InternalServerErrorException extends __BaseException {
  readonly name: "InternalServerErrorException";
  readonly $fault: "server";
  Message?: string | undefined;
  Type?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerErrorException, __BaseException>
  );
}
export interface AcceptInvitationRequest {
  DetectorId: string | undefined;
  MasterId: string | undefined;
  InvitationId: string | undefined;
}
export interface AcceptInvitationResponse {}
export interface AccessControlList {
  AllowsPublicReadAccess?: boolean | undefined;
  AllowsPublicWriteAccess?: boolean | undefined;
}
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string | undefined;
  Type?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AccessKey {
  PrincipalId?: string | undefined;
  UserName?: string | undefined;
  UserType?: string | undefined;
}
export interface AccessKeyDetails {
  AccessKeyId?: string | undefined;
  PrincipalId?: string | undefined;
  UserName?: string | undefined;
  UserType?: string | undefined;
}
export interface Account {
  Uid: string | undefined;
  Name?: string | undefined;
}
export interface AccountDetail {
  AccountId: string | undefined;
  Email: string | undefined;
}
export interface DataSourceFreeTrial {
  FreeTrialDaysRemaining?: number | undefined;
}
export interface KubernetesDataSourceFreeTrial {
  AuditLogs?: DataSourceFreeTrial | undefined;
}
export interface MalwareProtectionDataSourceFreeTrial {
  ScanEc2InstanceWithFindings?: DataSourceFreeTrial | undefined;
}
export interface DataSourcesFreeTrial {
  CloudTrail?: DataSourceFreeTrial | undefined;
  DnsLogs?: DataSourceFreeTrial | undefined;
  FlowLogs?: DataSourceFreeTrial | undefined;
  S3Logs?: DataSourceFreeTrial | undefined;
  Kubernetes?: KubernetesDataSourceFreeTrial | undefined;
  MalwareProtection?: MalwareProtectionDataSourceFreeTrial | undefined;
}
export declare const FreeTrialFeatureResult: {
  readonly CLOUD_TRAIL: "CLOUD_TRAIL";
  readonly DNS_LOGS: "DNS_LOGS";
  readonly EBS_MALWARE_PROTECTION: "EBS_MALWARE_PROTECTION";
  readonly EC2_RUNTIME_MONITORING: "EC2_RUNTIME_MONITORING";
  readonly EKS_AUDIT_LOGS: "EKS_AUDIT_LOGS";
  readonly EKS_RUNTIME_MONITORING: "EKS_RUNTIME_MONITORING";
  readonly FARGATE_RUNTIME_MONITORING: "FARGATE_RUNTIME_MONITORING";
  readonly FLOW_LOGS: "FLOW_LOGS";
  readonly LAMBDA_NETWORK_LOGS: "LAMBDA_NETWORK_LOGS";
  readonly RDS_LOGIN_EVENTS: "RDS_LOGIN_EVENTS";
  readonly S3_DATA_EVENTS: "S3_DATA_EVENTS";
};
export type FreeTrialFeatureResult =
  (typeof FreeTrialFeatureResult)[keyof typeof FreeTrialFeatureResult];
export interface FreeTrialFeatureConfigurationResult {
  Name?: FreeTrialFeatureResult | undefined;
  FreeTrialDaysRemaining?: number | undefined;
}
export interface AccountFreeTrialInfo {
  AccountId?: string | undefined;
  DataSources?: DataSourcesFreeTrial | undefined;
  Features?: FreeTrialFeatureConfigurationResult[] | undefined;
}
export interface BlockPublicAccess {
  IgnorePublicAcls?: boolean | undefined;
  RestrictPublicBuckets?: boolean | undefined;
  BlockPublicAcls?: boolean | undefined;
  BlockPublicPolicy?: boolean | undefined;
}
export interface AccountLevelPermissions {
  BlockPublicAccess?: BlockPublicAccess | undefined;
}
export interface AccountStatistics {
  AccountId?: string | undefined;
  LastGeneratedAt?: Date | undefined;
  TotalFindings?: number | undefined;
}
export interface DomainDetails {
  Domain?: string | undefined;
}
export interface RemoteAccountDetails {
  AccountId?: string | undefined;
  Affiliated?: boolean | undefined;
}
export interface City {
  CityName?: string | undefined;
}
export interface Country {
  CountryCode?: string | undefined;
  CountryName?: string | undefined;
}
export interface GeoLocation {
  Lat?: number | undefined;
  Lon?: number | undefined;
}
export interface Organization {
  Asn?: string | undefined;
  AsnOrg?: string | undefined;
  Isp?: string | undefined;
  Org?: string | undefined;
}
export interface RemoteIpDetails {
  City?: City | undefined;
  Country?: Country | undefined;
  GeoLocation?: GeoLocation | undefined;
  IpAddressV4?: string | undefined;
  IpAddressV6?: string | undefined;
  Organization?: Organization | undefined;
}
export interface AwsApiCallAction {
  Api?: string | undefined;
  CallerType?: string | undefined;
  DomainDetails?: DomainDetails | undefined;
  ErrorCode?: string | undefined;
  UserAgent?: string | undefined;
  RemoteIpDetails?: RemoteIpDetails | undefined;
  ServiceName?: string | undefined;
  RemoteAccountDetails?: RemoteAccountDetails | undefined;
  AffectedResources?: Record<string, string> | undefined;
}
export interface DnsRequestAction {
  Domain?: string | undefined;
  Protocol?: string | undefined;
  Blocked?: boolean | undefined;
  DomainWithSuffix?: string | undefined;
}
export interface KubernetesApiCallAction {
  RequestUri?: string | undefined;
  Verb?: string | undefined;
  SourceIps?: string[] | undefined;
  UserAgent?: string | undefined;
  RemoteIpDetails?: RemoteIpDetails | undefined;
  StatusCode?: number | undefined;
  Parameters?: string | undefined;
  Resource?: string | undefined;
  Subresource?: string | undefined;
  Namespace?: string | undefined;
  ResourceName?: string | undefined;
}
export interface KubernetesPermissionCheckedDetails {
  Verb?: string | undefined;
  Resource?: string | undefined;
  Namespace?: string | undefined;
  Allowed?: boolean | undefined;
}
export interface KubernetesRoleBindingDetails {
  Kind?: string | undefined;
  Name?: string | undefined;
  Uid?: string | undefined;
  RoleRefName?: string | undefined;
  RoleRefKind?: string | undefined;
}
export interface KubernetesRoleDetails {
  Kind?: string | undefined;
  Name?: string | undefined;
  Uid?: string | undefined;
}
export interface LocalIpDetails {
  IpAddressV4?: string | undefined;
  IpAddressV6?: string | undefined;
}
export interface LocalPortDetails {
  Port?: number | undefined;
  PortName?: string | undefined;
}
export interface RemotePortDetails {
  Port?: number | undefined;
  PortName?: string | undefined;
}
export interface NetworkConnectionAction {
  Blocked?: boolean | undefined;
  ConnectionDirection?: string | undefined;
  LocalPortDetails?: LocalPortDetails | undefined;
  Protocol?: string | undefined;
  LocalIpDetails?: LocalIpDetails | undefined;
  LocalNetworkInterface?: string | undefined;
  RemoteIpDetails?: RemoteIpDetails | undefined;
  RemotePortDetails?: RemotePortDetails | undefined;
}
export interface PortProbeDetail {
  LocalPortDetails?: LocalPortDetails | undefined;
  LocalIpDetails?: LocalIpDetails | undefined;
  RemoteIpDetails?: RemoteIpDetails | undefined;
}
export interface PortProbeAction {
  Blocked?: boolean | undefined;
  PortProbeDetails?: PortProbeDetail[] | undefined;
}
export interface LoginAttribute {
  User?: string | undefined;
  Application?: string | undefined;
  FailedLoginAttempts?: number | undefined;
  SuccessfulLoginAttempts?: number | undefined;
}
export interface RdsLoginAttemptAction {
  RemoteIpDetails?: RemoteIpDetails | undefined;
  LoginAttributes?: LoginAttribute[] | undefined;
}
export interface Action {
  ActionType?: string | undefined;
  AwsApiCallAction?: AwsApiCallAction | undefined;
  DnsRequestAction?: DnsRequestAction | undefined;
  NetworkConnectionAction?: NetworkConnectionAction | undefined;
  PortProbeAction?: PortProbeAction | undefined;
  KubernetesApiCallAction?: KubernetesApiCallAction | undefined;
  RdsLoginAttemptAction?: RdsLoginAttemptAction | undefined;
  KubernetesPermissionCheckedDetails?:
    | KubernetesPermissionCheckedDetails
    | undefined;
  KubernetesRoleBindingDetails?: KubernetesRoleBindingDetails | undefined;
  KubernetesRoleDetails?: KubernetesRoleDetails | undefined;
}
export declare const MfaStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type MfaStatus = (typeof MfaStatus)[keyof typeof MfaStatus];
export interface Session {
  Uid?: string | undefined;
  MfaStatus?: MfaStatus | undefined;
  CreatedTime?: Date | undefined;
  Issuer?: string | undefined;
}
export interface User {
  Name: string | undefined;
  Uid: string | undefined;
  Type: string | undefined;
  CredentialUid?: string | undefined;
  Account?: Account | undefined;
}
export interface Actor {
  Id: string | undefined;
  User?: User | undefined;
  Session?: Session | undefined;
}
export interface AddonDetails {
  AddonVersion?: string | undefined;
  AddonStatus?: string | undefined;
}
export declare const AdminStatus: {
  readonly DISABLE_IN_PROGRESS: "DISABLE_IN_PROGRESS";
  readonly ENABLED: "ENABLED";
};
export type AdminStatus = (typeof AdminStatus)[keyof typeof AdminStatus];
export interface AdminAccount {
  AdminAccountId?: string | undefined;
  AdminStatus?: AdminStatus | undefined;
}
export interface Administrator {
  AccountId?: string | undefined;
  InvitationId?: string | undefined;
  RelationshipStatus?: string | undefined;
  InvitedAt?: string | undefined;
}
export interface AgentDetails {
  Version?: string | undefined;
}
export interface Observations {
  Text?: string[] | undefined;
}
export declare const ProfileSubtype: {
  readonly FREQUENT: "FREQUENT";
  readonly INFREQUENT: "INFREQUENT";
  readonly RARE: "RARE";
  readonly UNSEEN: "UNSEEN";
};
export type ProfileSubtype =
  (typeof ProfileSubtype)[keyof typeof ProfileSubtype];
export declare const ProfileType: {
  readonly FREQUENCY: "FREQUENCY";
};
export type ProfileType = (typeof ProfileType)[keyof typeof ProfileType];
export interface AnomalyObject {
  ProfileType?: ProfileType | undefined;
  ProfileSubtype?: ProfileSubtype | undefined;
  Observations?: Observations | undefined;
}
export interface AnomalyUnusual {
  Behavior?: Record<string, Record<string, AnomalyObject>> | undefined;
}
export interface Anomaly {
  Profiles?: Record<string, Record<string, AnomalyObject[]>> | undefined;
  Unusual?: AnomalyUnusual | undefined;
}
export interface ArchiveFindingsRequest {
  DetectorId: string | undefined;
  FindingIds: string[] | undefined;
}
export interface ArchiveFindingsResponse {}
export declare const AutoEnableMembers: {
  readonly ALL: "ALL";
  readonly NEW: "NEW";
  readonly NONE: "NONE";
};
export type AutoEnableMembers =
  (typeof AutoEnableMembers)[keyof typeof AutoEnableMembers];
export interface AutonomousSystem {
  Name: string | undefined;
  Number: number | undefined;
}
export interface BucketPolicy {
  AllowsPublicReadAccess?: boolean | undefined;
  AllowsPublicWriteAccess?: boolean | undefined;
}
export interface BucketLevelPermissions {
  AccessControlList?: AccessControlList | undefined;
  BucketPolicy?: BucketPolicy | undefined;
  BlockPublicAccess?: BlockPublicAccess | undefined;
}
export declare const DataSourceStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type DataSourceStatus =
  (typeof DataSourceStatus)[keyof typeof DataSourceStatus];
export interface CloudTrailConfigurationResult {
  Status: DataSourceStatus | undefined;
}
export interface Condition {
  Eq?: string[] | undefined;
  Neq?: string[] | undefined;
  Gt?: number | undefined;
  Gte?: number | undefined;
  Lt?: number | undefined;
  Lte?: number | undefined;
  Equals?: string[] | undefined;
  NotEquals?: string[] | undefined;
  GreaterThan?: number | undefined;
  GreaterThanOrEqual?: number | undefined;
  LessThan?: number | undefined;
  LessThanOrEqual?: number | undefined;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string | undefined;
  Type?: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface SecurityContext {
  Privileged?: boolean | undefined;
  AllowPrivilegeEscalation?: boolean | undefined;
}
export interface VolumeMount {
  Name?: string | undefined;
  MountPath?: string | undefined;
}
export interface Container {
  ContainerRuntime?: string | undefined;
  Id?: string | undefined;
  Name?: string | undefined;
  Image?: string | undefined;
  ImagePrefix?: string | undefined;
  VolumeMounts?: VolumeMount[] | undefined;
  SecurityContext?: SecurityContext | undefined;
}
export interface ContainerInstanceDetails {
  CoveredContainerInstances?: number | undefined;
  CompatibleContainerInstances?: number | undefined;
}
export declare const CoverageStatus: {
  readonly HEALTHY: "HEALTHY";
  readonly UNHEALTHY: "UNHEALTHY";
};
export type CoverageStatus =
  (typeof CoverageStatus)[keyof typeof CoverageStatus];
export declare const ResourceType: {
  readonly EC2: "EC2";
  readonly ECS: "ECS";
  readonly EKS: "EKS";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export declare const ManagementType: {
  readonly AUTO_MANAGED: "AUTO_MANAGED";
  readonly DISABLED: "DISABLED";
  readonly MANUAL: "MANUAL";
};
export type ManagementType =
  (typeof ManagementType)[keyof typeof ManagementType];
export interface CoverageEc2InstanceDetails {
  InstanceId?: string | undefined;
  InstanceType?: string | undefined;
  ClusterArn?: string | undefined;
  AgentDetails?: AgentDetails | undefined;
  ManagementType?: ManagementType | undefined;
}
export interface FargateDetails {
  Issues?: string[] | undefined;
  ManagementType?: ManagementType | undefined;
}
export interface CoverageEcsClusterDetails {
  ClusterName?: string | undefined;
  FargateDetails?: FargateDetails | undefined;
  ContainerInstanceDetails?: ContainerInstanceDetails | undefined;
}
export interface CoverageEksClusterDetails {
  ClusterName?: string | undefined;
  CoveredNodes?: number | undefined;
  CompatibleNodes?: number | undefined;
  AddonDetails?: AddonDetails | undefined;
  ManagementType?: ManagementType | undefined;
}
export interface CoverageFilterCondition {
  Equals?: string[] | undefined;
  NotEquals?: string[] | undefined;
}
export declare const CoverageFilterCriterionKey: {
  readonly ACCOUNT_ID: "ACCOUNT_ID";
  readonly ADDON_VERSION: "ADDON_VERSION";
  readonly AGENT_VERSION: "AGENT_VERSION";
  readonly CLUSTER_ARN: "CLUSTER_ARN";
  readonly CLUSTER_NAME: "CLUSTER_NAME";
  readonly COVERAGE_STATUS: "COVERAGE_STATUS";
  readonly ECS_CLUSTER_NAME: "ECS_CLUSTER_NAME";
  readonly EKS_CLUSTER_NAME: "EKS_CLUSTER_NAME";
  readonly INSTANCE_ID: "INSTANCE_ID";
  readonly MANAGEMENT_TYPE: "MANAGEMENT_TYPE";
  readonly RESOURCE_TYPE: "RESOURCE_TYPE";
};
export type CoverageFilterCriterionKey =
  (typeof CoverageFilterCriterionKey)[keyof typeof CoverageFilterCriterionKey];
export interface CoverageFilterCriterion {
  CriterionKey?: CoverageFilterCriterionKey | undefined;
  FilterCondition?: CoverageFilterCondition | undefined;
}
export interface CoverageFilterCriteria {
  FilterCriterion?: CoverageFilterCriterion[] | undefined;
}
export interface CoverageResourceDetails {
  EksClusterDetails?: CoverageEksClusterDetails | undefined;
  ResourceType?: ResourceType | undefined;
  EcsClusterDetails?: CoverageEcsClusterDetails | undefined;
  Ec2InstanceDetails?: CoverageEc2InstanceDetails | undefined;
}
export interface CoverageResource {
  ResourceId?: string | undefined;
  DetectorId?: string | undefined;
  AccountId?: string | undefined;
  ResourceDetails?: CoverageResourceDetails | undefined;
  CoverageStatus?: CoverageStatus | undefined;
  Issue?: string | undefined;
  UpdatedAt?: Date | undefined;
}
export declare const CoverageSortKey: {
  readonly ACCOUNT_ID: "ACCOUNT_ID";
  readonly ADDON_VERSION: "ADDON_VERSION";
  readonly CLUSTER_NAME: "CLUSTER_NAME";
  readonly COVERAGE_STATUS: "COVERAGE_STATUS";
  readonly ECS_CLUSTER_NAME: "ECS_CLUSTER_NAME";
  readonly EKS_CLUSTER_NAME: "EKS_CLUSTER_NAME";
  readonly INSTANCE_ID: "INSTANCE_ID";
  readonly ISSUE: "ISSUE";
  readonly UPDATED_AT: "UPDATED_AT";
};
export type CoverageSortKey =
  (typeof CoverageSortKey)[keyof typeof CoverageSortKey];
export declare const OrderBy: {
  readonly ASC: "ASC";
  readonly DESC: "DESC";
};
export type OrderBy = (typeof OrderBy)[keyof typeof OrderBy];
export interface CoverageSortCriteria {
  AttributeName?: CoverageSortKey | undefined;
  OrderBy?: OrderBy | undefined;
}
export interface CoverageStatistics {
  CountByResourceType?: Partial<Record<ResourceType, number>> | undefined;
  CountByCoverageStatus?: Partial<Record<CoverageStatus, number>> | undefined;
}
export declare const CoverageStatisticsType: {
  readonly COUNT_BY_COVERAGE_STATUS: "COUNT_BY_COVERAGE_STATUS";
  readonly COUNT_BY_RESOURCE_TYPE: "COUNT_BY_RESOURCE_TYPE";
};
export type CoverageStatisticsType =
  (typeof CoverageStatisticsType)[keyof typeof CoverageStatisticsType];
export interface KubernetesAuditLogsConfiguration {
  Enable: boolean | undefined;
}
export interface KubernetesConfiguration {
  AuditLogs: KubernetesAuditLogsConfiguration | undefined;
}
export interface ScanEc2InstanceWithFindings {
  EbsVolumes?: boolean | undefined;
}
export interface MalwareProtectionConfiguration {
  ScanEc2InstanceWithFindings?: ScanEc2InstanceWithFindings | undefined;
}
export interface S3LogsConfiguration {
  Enable: boolean | undefined;
}
export interface DataSourceConfigurations {
  S3Logs?: S3LogsConfiguration | undefined;
  Kubernetes?: KubernetesConfiguration | undefined;
  MalwareProtection?: MalwareProtectionConfiguration | undefined;
}
export declare const FeatureAdditionalConfiguration: {
  readonly EC2_AGENT_MANAGEMENT: "EC2_AGENT_MANAGEMENT";
  readonly ECS_FARGATE_AGENT_MANAGEMENT: "ECS_FARGATE_AGENT_MANAGEMENT";
  readonly EKS_ADDON_MANAGEMENT: "EKS_ADDON_MANAGEMENT";
};
export type FeatureAdditionalConfiguration =
  (typeof FeatureAdditionalConfiguration)[keyof typeof FeatureAdditionalConfiguration];
export declare const FeatureStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type FeatureStatus = (typeof FeatureStatus)[keyof typeof FeatureStatus];
export interface DetectorAdditionalConfiguration {
  Name?: FeatureAdditionalConfiguration | undefined;
  Status?: FeatureStatus | undefined;
}
export declare const DetectorFeature: {
  readonly EBS_MALWARE_PROTECTION: "EBS_MALWARE_PROTECTION";
  readonly EKS_AUDIT_LOGS: "EKS_AUDIT_LOGS";
  readonly EKS_RUNTIME_MONITORING: "EKS_RUNTIME_MONITORING";
  readonly LAMBDA_NETWORK_LOGS: "LAMBDA_NETWORK_LOGS";
  readonly RDS_LOGIN_EVENTS: "RDS_LOGIN_EVENTS";
  readonly RUNTIME_MONITORING: "RUNTIME_MONITORING";
  readonly S3_DATA_EVENTS: "S3_DATA_EVENTS";
};
export type DetectorFeature =
  (typeof DetectorFeature)[keyof typeof DetectorFeature];
export interface DetectorFeatureConfiguration {
  Name?: DetectorFeature | undefined;
  Status?: FeatureStatus | undefined;
  AdditionalConfiguration?: DetectorAdditionalConfiguration[] | undefined;
}
export declare const FindingPublishingFrequency: {
  readonly FIFTEEN_MINUTES: "FIFTEEN_MINUTES";
  readonly ONE_HOUR: "ONE_HOUR";
  readonly SIX_HOURS: "SIX_HOURS";
};
export type FindingPublishingFrequency =
  (typeof FindingPublishingFrequency)[keyof typeof FindingPublishingFrequency];
export interface CreateDetectorRequest {
  Enable: boolean | undefined;
  ClientToken?: string | undefined;
  FindingPublishingFrequency?: FindingPublishingFrequency | undefined;
  DataSources?: DataSourceConfigurations | undefined;
  Tags?: Record<string, string> | undefined;
  Features?: DetectorFeatureConfiguration[] | undefined;
}
export interface EbsVolumesResult {
  Status?: DataSourceStatus | undefined;
  Reason?: string | undefined;
}
export interface ScanEc2InstanceWithFindingsResult {
  EbsVolumes?: EbsVolumesResult | undefined;
}
export interface MalwareProtectionConfigurationResult {
  ScanEc2InstanceWithFindings?: ScanEc2InstanceWithFindingsResult | undefined;
  ServiceRole?: string | undefined;
}
export interface UnprocessedDataSourcesResult {
  MalwareProtection?: MalwareProtectionConfigurationResult | undefined;
}
export interface CreateDetectorResponse {
  DetectorId?: string | undefined;
  UnprocessedDataSources?: UnprocessedDataSourcesResult | undefined;
}
export declare const FilterAction: {
  readonly ARCHIVE: "ARCHIVE";
  readonly NOOP: "NOOP";
};
export type FilterAction = (typeof FilterAction)[keyof typeof FilterAction];
export interface FindingCriteria {
  Criterion?: Record<string, Condition> | undefined;
}
export interface CreateFilterRequest {
  DetectorId: string | undefined;
  Name: string | undefined;
  Description?: string | undefined;
  Action?: FilterAction | undefined;
  Rank?: number | undefined;
  FindingCriteria: FindingCriteria | undefined;
  ClientToken?: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateFilterResponse {
  Name: string | undefined;
}
export declare const IpSetFormat: {
  readonly ALIEN_VAULT: "ALIEN_VAULT";
  readonly FIRE_EYE: "FIRE_EYE";
  readonly OTX_CSV: "OTX_CSV";
  readonly PROOF_POINT: "PROOF_POINT";
  readonly STIX: "STIX";
  readonly TXT: "TXT";
};
export type IpSetFormat = (typeof IpSetFormat)[keyof typeof IpSetFormat];
export interface CreateIPSetRequest {
  DetectorId: string | undefined;
  Name: string | undefined;
  Format: IpSetFormat | undefined;
  Location: string | undefined;
  Activate: boolean | undefined;
  ClientToken?: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateIPSetResponse {
  IpSetId: string | undefined;
}
export declare const MalwareProtectionPlanTaggingActionStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type MalwareProtectionPlanTaggingActionStatus =
  (typeof MalwareProtectionPlanTaggingActionStatus)[keyof typeof MalwareProtectionPlanTaggingActionStatus];
export interface MalwareProtectionPlanTaggingAction {
  Status?: MalwareProtectionPlanTaggingActionStatus | undefined;
}
export interface MalwareProtectionPlanActions {
  Tagging?: MalwareProtectionPlanTaggingAction | undefined;
}
export interface CreateS3BucketResource {
  BucketName?: string | undefined;
  ObjectPrefixes?: string[] | undefined;
}
export interface CreateProtectedResource {
  S3Bucket?: CreateS3BucketResource | undefined;
}
export interface CreateMalwareProtectionPlanRequest {
  ClientToken?: string | undefined;
  Role: string | undefined;
  ProtectedResource: CreateProtectedResource | undefined;
  Actions?: MalwareProtectionPlanActions | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateMalwareProtectionPlanResponse {
  MalwareProtectionPlanId?: string | undefined;
}
export interface CreateMembersRequest {
  DetectorId: string | undefined;
  AccountDetails: AccountDetail[] | undefined;
}
export interface UnprocessedAccount {
  AccountId: string | undefined;
  Result: string | undefined;
}
export interface CreateMembersResponse {
  UnprocessedAccounts: UnprocessedAccount[] | undefined;
}
export interface DestinationProperties {
  DestinationArn?: string | undefined;
  KmsKeyArn?: string | undefined;
}
export declare const DestinationType: {
  readonly S3: "S3";
};
export type DestinationType =
  (typeof DestinationType)[keyof typeof DestinationType];
export interface CreatePublishingDestinationRequest {
  DetectorId: string | undefined;
  DestinationType: DestinationType | undefined;
  DestinationProperties: DestinationProperties | undefined;
  ClientToken?: string | undefined;
}
export interface CreatePublishingDestinationResponse {
  DestinationId: string | undefined;
}
export interface CreateSampleFindingsRequest {
  DetectorId: string | undefined;
  FindingTypes?: string[] | undefined;
}
export interface CreateSampleFindingsResponse {}
export declare const ThreatIntelSetFormat: {
  readonly ALIEN_VAULT: "ALIEN_VAULT";
  readonly FIRE_EYE: "FIRE_EYE";
  readonly OTX_CSV: "OTX_CSV";
  readonly PROOF_POINT: "PROOF_POINT";
  readonly STIX: "STIX";
  readonly TXT: "TXT";
};
export type ThreatIntelSetFormat =
  (typeof ThreatIntelSetFormat)[keyof typeof ThreatIntelSetFormat];
export interface CreateThreatIntelSetRequest {
  DetectorId: string | undefined;
  Name: string | undefined;
  Format: ThreatIntelSetFormat | undefined;
  Location: string | undefined;
  Activate: boolean | undefined;
  ClientToken?: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateThreatIntelSetResponse {
  ThreatIntelSetId: string | undefined;
}
export declare const CriterionKey: {
  readonly ACCOUNT_ID: "ACCOUNT_ID";
  readonly EC2_INSTANCE_ARN: "EC2_INSTANCE_ARN";
  readonly GUARDDUTY_FINDING_ID: "GUARDDUTY_FINDING_ID";
  readonly SCAN_ID: "SCAN_ID";
  readonly SCAN_START_TIME: "SCAN_START_TIME";
  readonly SCAN_STATUS: "SCAN_STATUS";
  readonly SCAN_TYPE: "SCAN_TYPE";
};
export type CriterionKey = (typeof CriterionKey)[keyof typeof CriterionKey];
export declare const DataSource: {
  readonly CLOUD_TRAIL: "CLOUD_TRAIL";
  readonly DNS_LOGS: "DNS_LOGS";
  readonly EC2_MALWARE_SCAN: "EC2_MALWARE_SCAN";
  readonly FLOW_LOGS: "FLOW_LOGS";
  readonly KUBERNETES_AUDIT_LOGS: "KUBERNETES_AUDIT_LOGS";
  readonly S3_LOGS: "S3_LOGS";
};
export type DataSource = (typeof DataSource)[keyof typeof DataSource];
export interface DNSLogsConfigurationResult {
  Status: DataSourceStatus | undefined;
}
export interface FlowLogsConfigurationResult {
  Status: DataSourceStatus | undefined;
}
export interface KubernetesAuditLogsConfigurationResult {
  Status: DataSourceStatus | undefined;
}
export interface KubernetesConfigurationResult {
  AuditLogs: KubernetesAuditLogsConfigurationResult | undefined;
}
export interface S3LogsConfigurationResult {
  Status: DataSourceStatus | undefined;
}
export interface DataSourceConfigurationsResult {
  CloudTrail: CloudTrailConfigurationResult | undefined;
  DNSLogs: DNSLogsConfigurationResult | undefined;
  FlowLogs: FlowLogsConfigurationResult | undefined;
  S3Logs: S3LogsConfigurationResult | undefined;
  Kubernetes?: KubernetesConfigurationResult | undefined;
  MalwareProtection?: MalwareProtectionConfigurationResult | undefined;
}
export interface DateStatistics {
  Date?: Date | undefined;
  LastGeneratedAt?: Date | undefined;
  Severity?: number | undefined;
  TotalFindings?: number | undefined;
}
export interface DeclineInvitationsRequest {
  AccountIds: string[] | undefined;
}
export interface DeclineInvitationsResponse {
  UnprocessedAccounts: UnprocessedAccount[] | undefined;
}
export interface DefaultServerSideEncryption {
  EncryptionType?: string | undefined;
  KmsMasterKeyArn?: string | undefined;
}
export interface DeleteDetectorRequest {
  DetectorId: string | undefined;
}
export interface DeleteDetectorResponse {}
export interface DeleteFilterRequest {
  DetectorId: string | undefined;
  FilterName: string | undefined;
}
export interface DeleteFilterResponse {}
export interface DeleteInvitationsRequest {
  AccountIds: string[] | undefined;
}
export interface DeleteInvitationsResponse {
  UnprocessedAccounts: UnprocessedAccount[] | undefined;
}
export interface DeleteIPSetRequest {
  DetectorId: string | undefined;
  IpSetId: string | undefined;
}
export interface DeleteIPSetResponse {}
export interface DeleteMalwareProtectionPlanRequest {
  MalwareProtectionPlanId: string | undefined;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  Type?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface DeleteMembersRequest {
  DetectorId: string | undefined;
  AccountIds: string[] | undefined;
}
export interface DeleteMembersResponse {
  UnprocessedAccounts: UnprocessedAccount[] | undefined;
}
export interface DeletePublishingDestinationRequest {
  DetectorId: string | undefined;
  DestinationId: string | undefined;
}
export interface DeletePublishingDestinationResponse {}
export interface DeleteThreatIntelSetRequest {
  DetectorId: string | undefined;
  ThreatIntelSetId: string | undefined;
}
export interface DeleteThreatIntelSetResponse {}
export interface FilterCondition {
  EqualsValue?: string | undefined;
  GreaterThan?: number | undefined;
  LessThan?: number | undefined;
}
export interface FilterCriterion {
  CriterionKey?: CriterionKey | undefined;
  FilterCondition?: FilterCondition | undefined;
}
export interface FilterCriteria {
  FilterCriterion?: FilterCriterion[] | undefined;
}
export interface SortCriteria {
  AttributeName?: string | undefined;
  OrderBy?: OrderBy | undefined;
}
export interface DescribeMalwareScansRequest {
  DetectorId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  FilterCriteria?: FilterCriteria | undefined;
  SortCriteria?: SortCriteria | undefined;
}
export interface VolumeDetail {
  VolumeArn?: string | undefined;
  VolumeType?: string | undefined;
  DeviceName?: string | undefined;
  VolumeSizeInGB?: number | undefined;
  EncryptionType?: string | undefined;
  SnapshotArn?: string | undefined;
  KmsKeyArn?: string | undefined;
}
export interface ResourceDetails {
  InstanceArn?: string | undefined;
}
export declare const ScanResult: {
  readonly CLEAN: "CLEAN";
  readonly INFECTED: "INFECTED";
};
export type ScanResult = (typeof ScanResult)[keyof typeof ScanResult];
export interface ScanResultDetails {
  ScanResult?: ScanResult | undefined;
}
export declare const ScanStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly RUNNING: "RUNNING";
  readonly SKIPPED: "SKIPPED";
};
export type ScanStatus = (typeof ScanStatus)[keyof typeof ScanStatus];
export declare const ScanType: {
  readonly GUARDDUTY_INITIATED: "GUARDDUTY_INITIATED";
  readonly ON_DEMAND: "ON_DEMAND";
};
export type ScanType = (typeof ScanType)[keyof typeof ScanType];
export interface TriggerDetails {
  GuardDutyFindingId?: string | undefined;
  Description?: string | undefined;
}
export interface Scan {
  DetectorId?: string | undefined;
  AdminDetectorId?: string | undefined;
  ScanId?: string | undefined;
  ScanStatus?: ScanStatus | undefined;
  FailureReason?: string | undefined;
  ScanStartTime?: Date | undefined;
  ScanEndTime?: Date | undefined;
  TriggerDetails?: TriggerDetails | undefined;
  ResourceDetails?: ResourceDetails | undefined;
  ScanResultDetails?: ScanResultDetails | undefined;
  AccountId?: string | undefined;
  TotalBytes?: number | undefined;
  FileCount?: number | undefined;
  AttachedVolumes?: VolumeDetail[] | undefined;
  ScanType?: ScanType | undefined;
}
export interface DescribeMalwareScansResponse {
  Scans: Scan[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeOrganizationConfigurationRequest {
  DetectorId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface OrganizationKubernetesAuditLogsConfigurationResult {
  AutoEnable: boolean | undefined;
}
export interface OrganizationKubernetesConfigurationResult {
  AuditLogs: OrganizationKubernetesAuditLogsConfigurationResult | undefined;
}
export interface OrganizationEbsVolumesResult {
  AutoEnable?: boolean | undefined;
}
export interface OrganizationScanEc2InstanceWithFindingsResult {
  EbsVolumes?: OrganizationEbsVolumesResult | undefined;
}
export interface OrganizationMalwareProtectionConfigurationResult {
  ScanEc2InstanceWithFindings?:
    | OrganizationScanEc2InstanceWithFindingsResult
    | undefined;
}
export interface OrganizationS3LogsConfigurationResult {
  AutoEnable: boolean | undefined;
}
export interface OrganizationDataSourceConfigurationsResult {
  S3Logs: OrganizationS3LogsConfigurationResult | undefined;
  Kubernetes?: OrganizationKubernetesConfigurationResult | undefined;
  MalwareProtection?:
    | OrganizationMalwareProtectionConfigurationResult
    | undefined;
}
export declare const OrgFeatureStatus: {
  readonly ALL: "ALL";
  readonly NEW: "NEW";
  readonly NONE: "NONE";
};
export type OrgFeatureStatus =
  (typeof OrgFeatureStatus)[keyof typeof OrgFeatureStatus];
export declare const OrgFeatureAdditionalConfiguration: {
  readonly EC2_AGENT_MANAGEMENT: "EC2_AGENT_MANAGEMENT";
  readonly ECS_FARGATE_AGENT_MANAGEMENT: "ECS_FARGATE_AGENT_MANAGEMENT";
  readonly EKS_ADDON_MANAGEMENT: "EKS_ADDON_MANAGEMENT";
};
export type OrgFeatureAdditionalConfiguration =
  (typeof OrgFeatureAdditionalConfiguration)[keyof typeof OrgFeatureAdditionalConfiguration];
export interface OrganizationAdditionalConfigurationResult {
  Name?: OrgFeatureAdditionalConfiguration | undefined;
  AutoEnable?: OrgFeatureStatus | undefined;
}
export declare const OrgFeature: {
  readonly EBS_MALWARE_PROTECTION: "EBS_MALWARE_PROTECTION";
  readonly EKS_AUDIT_LOGS: "EKS_AUDIT_LOGS";
  readonly EKS_RUNTIME_MONITORING: "EKS_RUNTIME_MONITORING";
  readonly LAMBDA_NETWORK_LOGS: "LAMBDA_NETWORK_LOGS";
  readonly RDS_LOGIN_EVENTS: "RDS_LOGIN_EVENTS";
  readonly RUNTIME_MONITORING: "RUNTIME_MONITORING";
  readonly S3_DATA_EVENTS: "S3_DATA_EVENTS";
};
export type OrgFeature = (typeof OrgFeature)[keyof typeof OrgFeature];
export interface OrganizationFeatureConfigurationResult {
  Name?: OrgFeature | undefined;
  AutoEnable?: OrgFeatureStatus | undefined;
  AdditionalConfiguration?:
    | OrganizationAdditionalConfigurationResult[]
    | undefined;
}
export interface DescribeOrganizationConfigurationResponse {
  AutoEnable?: boolean | undefined;
  MemberAccountLimitReached: boolean | undefined;
  DataSources?: OrganizationDataSourceConfigurationsResult | undefined;
  Features?: OrganizationFeatureConfigurationResult[] | undefined;
  NextToken?: string | undefined;
  AutoEnableOrganizationMembers?: AutoEnableMembers | undefined;
}
export interface DescribePublishingDestinationRequest {
  DetectorId: string | undefined;
  DestinationId: string | undefined;
}
export declare const PublishingStatus: {
  readonly PENDING_VERIFICATION: "PENDING_VERIFICATION";
  readonly PUBLISHING: "PUBLISHING";
  readonly STOPPED: "STOPPED";
  readonly UNABLE_TO_PUBLISH_FIX_DESTINATION_PROPERTY: "UNABLE_TO_PUBLISH_FIX_DESTINATION_PROPERTY";
};
export type PublishingStatus =
  (typeof PublishingStatus)[keyof typeof PublishingStatus];
export interface DescribePublishingDestinationResponse {
  DestinationId: string | undefined;
  DestinationType: DestinationType | undefined;
  Status: PublishingStatus | undefined;
  PublishingFailureStartTimestamp: number | undefined;
  DestinationProperties: DestinationProperties | undefined;
}
export interface Destination {
  DestinationId: string | undefined;
  DestinationType: DestinationType | undefined;
  Status: PublishingStatus | undefined;
}
export declare const NetworkDirection: {
  readonly INBOUND: "INBOUND";
  readonly OUTBOUND: "OUTBOUND";
};
export type NetworkDirection =
  (typeof NetworkDirection)[keyof typeof NetworkDirection];
export interface NetworkConnection {
  Direction: NetworkDirection | undefined;
}
export interface NetworkGeoLocation {
  City: string | undefined;
  Country: string | undefined;
  Latitude: number | undefined;
  Longitude: number | undefined;
}
export interface NetworkEndpoint {
  Id: string | undefined;
  Ip?: string | undefined;
  Domain?: string | undefined;
  Port?: number | undefined;
  Location?: NetworkGeoLocation | undefined;
  AutonomousSystem?: AutonomousSystem | undefined;
  Connection?: NetworkConnection | undefined;
}
export interface IamInstanceProfile {
  Arn?: string | undefined;
  Id?: string | undefined;
}
export interface ProductCode {
  Code?: string | undefined;
  ProductType?: string | undefined;
}
export interface Ec2Instance {
  AvailabilityZone?: string | undefined;
  ImageDescription?: string | undefined;
  InstanceState?: string | undefined;
  IamInstanceProfile?: IamInstanceProfile | undefined;
  InstanceType?: string | undefined;
  OutpostArn?: string | undefined;
  Platform?: string | undefined;
  ProductCodes?: ProductCode[] | undefined;
  Ec2NetworkInterfaceUids?: string[] | undefined;
}
export interface PrivateIpAddressDetails {
  PrivateDnsName?: string | undefined;
  PrivateIpAddress?: string | undefined;
}
export interface SecurityGroup {
  GroupId?: string | undefined;
  GroupName?: string | undefined;
}
export interface Ec2NetworkInterface {
  Ipv6Addresses?: string[] | undefined;
  PrivateIpAddresses?: PrivateIpAddressDetails[] | undefined;
  PublicIp?: string | undefined;
  SecurityGroups?: SecurityGroup[] | undefined;
  SubNetId?: string | undefined;
  VpcId?: string | undefined;
}
export declare const PublicAccessStatus: {
  readonly ALLOWED: "ALLOWED";
  readonly BLOCKED: "BLOCKED";
};
export type PublicAccessStatus =
  (typeof PublicAccessStatus)[keyof typeof PublicAccessStatus];
export declare const PublicAclIgnoreBehavior: {
  readonly IGNORED: "IGNORED";
  readonly NOT_IGNORED: "NOT_IGNORED";
};
export type PublicAclIgnoreBehavior =
  (typeof PublicAclIgnoreBehavior)[keyof typeof PublicAclIgnoreBehavior];
export declare const PublicBucketRestrictBehavior: {
  readonly NOT_RESTRICTED: "NOT_RESTRICTED";
  readonly RESTRICTED: "RESTRICTED";
};
export type PublicBucketRestrictBehavior =
  (typeof PublicBucketRestrictBehavior)[keyof typeof PublicBucketRestrictBehavior];
export interface PublicAccessConfiguration {
  PublicAclAccess?: PublicAccessStatus | undefined;
  PublicPolicyAccess?: PublicAccessStatus | undefined;
  PublicAclIgnoreBehavior?: PublicAclIgnoreBehavior | undefined;
  PublicBucketRestrictBehavior?: PublicBucketRestrictBehavior | undefined;
}
export interface S3Bucket {
  OwnerId?: string | undefined;
  CreatedAt?: Date | undefined;
  EncryptionType?: string | undefined;
  EncryptionKeyArn?: string | undefined;
  EffectivePermission?: string | undefined;
  PublicReadAccess?: PublicAccessStatus | undefined;
  PublicWriteAccess?: PublicAccessStatus | undefined;
  AccountPublicAccess?: PublicAccessConfiguration | undefined;
  BucketPublicAccess?: PublicAccessConfiguration | undefined;
  S3ObjectUids?: string[] | undefined;
}
export interface S3Object {
  ETag?: string | undefined;
  Key?: string | undefined;
  VersionId?: string | undefined;
}
export interface ResourceData {
  S3Bucket?: S3Bucket | undefined;
  Ec2Instance?: Ec2Instance | undefined;
  AccessKey?: AccessKey | undefined;
  Ec2NetworkInterface?: Ec2NetworkInterface | undefined;
  S3Object?: S3Object | undefined;
}
export declare const FindingResourceType: {
  readonly ACCESS_KEY: "ACCESS_KEY";
  readonly EC2_INSTANCE: "EC2_INSTANCE";
  readonly EC2_NETWORK_INTERFACE: "EC2_NETWORK_INTERFACE";
  readonly S3_BUCKET: "S3_BUCKET";
  readonly S3_OBJECT: "S3_OBJECT";
};
export type FindingResourceType =
  (typeof FindingResourceType)[keyof typeof FindingResourceType];
export interface Tag {
  Key?: string | undefined;
  Value?: string | undefined;
}
export interface ResourceV2 {
  Uid: string | undefined;
  Name?: string | undefined;
  AccountId?: string | undefined;
  ResourceType: FindingResourceType | undefined;
  Region?: string | undefined;
  Service?: string | undefined;
  CloudPartition?: string | undefined;
  Tags?: Tag[] | undefined;
  Data?: ResourceData | undefined;
}
export declare const IndicatorType: {
  readonly ATTACK_TACTIC: "ATTACK_TACTIC";
  readonly ATTACK_TECHNIQUE: "ATTACK_TECHNIQUE";
  readonly HIGH_RISK_API: "HIGH_RISK_API";
  readonly MALICIOUS_IP: "MALICIOUS_IP";
  readonly SUSPICIOUS_NETWORK: "SUSPICIOUS_NETWORK";
  readonly SUSPICIOUS_USER_AGENT: "SUSPICIOUS_USER_AGENT";
  readonly TOR_IP: "TOR_IP";
  readonly UNUSUAL_API_FOR_ACCOUNT: "UNUSUAL_API_FOR_ACCOUNT";
  readonly UNUSUAL_ASN_FOR_ACCOUNT: "UNUSUAL_ASN_FOR_ACCOUNT";
  readonly UNUSUAL_ASN_FOR_USER: "UNUSUAL_ASN_FOR_USER";
};
export type IndicatorType = (typeof IndicatorType)[keyof typeof IndicatorType];
export interface Indicator {
  Key: IndicatorType | undefined;
  Values?: string[] | undefined;
  Title?: string | undefined;
}
export declare const SignalType: {
  readonly CLOUD_TRAIL: "CLOUD_TRAIL";
  readonly FINDING: "FINDING";
  readonly S3_DATA_EVENTS: "S3_DATA_EVENTS";
};
export type SignalType = (typeof SignalType)[keyof typeof SignalType];
export interface Signal {
  Uid: string | undefined;
  Type: SignalType | undefined;
  Description?: string | undefined;
  Name: string | undefined;
  CreatedAt: Date | undefined;
  UpdatedAt: Date | undefined;
  FirstSeenAt: Date | undefined;
  LastSeenAt: Date | undefined;
  Severity?: number | undefined;
  Count: number | undefined;
  ResourceUids?: string[] | undefined;
  ActorIds?: string[] | undefined;
  EndpointIds?: string[] | undefined;
  SignalIndicators?: Indicator[] | undefined;
}
export interface Sequence {
  Uid: string | undefined;
  Description: string | undefined;
  Actors?: Actor[] | undefined;
  Resources?: ResourceV2[] | undefined;
  Endpoints?: NetworkEndpoint[] | undefined;
  Signals: Signal[] | undefined;
  SequenceIndicators?: Indicator[] | undefined;
}
export interface Detection {
  Anomaly?: Anomaly | undefined;
  Sequence?: Sequence | undefined;
}
export interface DetectorAdditionalConfigurationResult {
  Name?: FeatureAdditionalConfiguration | undefined;
  Status?: FeatureStatus | undefined;
  UpdatedAt?: Date | undefined;
}
export declare const DetectorFeatureResult: {
  readonly CLOUD_TRAIL: "CLOUD_TRAIL";
  readonly DNS_LOGS: "DNS_LOGS";
  readonly EBS_MALWARE_PROTECTION: "EBS_MALWARE_PROTECTION";
  readonly EKS_AUDIT_LOGS: "EKS_AUDIT_LOGS";
  readonly EKS_RUNTIME_MONITORING: "EKS_RUNTIME_MONITORING";
  readonly FLOW_LOGS: "FLOW_LOGS";
  readonly LAMBDA_NETWORK_LOGS: "LAMBDA_NETWORK_LOGS";
  readonly RDS_LOGIN_EVENTS: "RDS_LOGIN_EVENTS";
  readonly RUNTIME_MONITORING: "RUNTIME_MONITORING";
  readonly S3_DATA_EVENTS: "S3_DATA_EVENTS";
};
export type DetectorFeatureResult =
  (typeof DetectorFeatureResult)[keyof typeof DetectorFeatureResult];
export interface DetectorFeatureConfigurationResult {
  Name?: DetectorFeatureResult | undefined;
  Status?: FeatureStatus | undefined;
  UpdatedAt?: Date | undefined;
  AdditionalConfiguration?: DetectorAdditionalConfigurationResult[] | undefined;
}
export declare const DetectorStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type DetectorStatus =
  (typeof DetectorStatus)[keyof typeof DetectorStatus];
export interface DisableOrganizationAdminAccountRequest {
  AdminAccountId: string | undefined;
}
export interface DisableOrganizationAdminAccountResponse {}
export interface DisassociateFromAdministratorAccountRequest {
  DetectorId: string | undefined;
}
export interface DisassociateFromAdministratorAccountResponse {}
export interface DisassociateFromMasterAccountRequest {
  DetectorId: string | undefined;
}
export interface DisassociateFromMasterAccountResponse {}
export interface DisassociateMembersRequest {
  DetectorId: string | undefined;
  AccountIds: string[] | undefined;
}
export interface DisassociateMembersResponse {
  UnprocessedAccounts: UnprocessedAccount[] | undefined;
}
export declare const EbsSnapshotPreservation: {
  readonly NO_RETENTION: "NO_RETENTION";
  readonly RETENTION_WITH_FINDING: "RETENTION_WITH_FINDING";
};
export type EbsSnapshotPreservation =
  (typeof EbsSnapshotPreservation)[keyof typeof EbsSnapshotPreservation];
export interface EbsVolumeDetails {
  ScannedVolumeDetails?: VolumeDetail[] | undefined;
  SkippedVolumeDetails?: VolumeDetail[] | undefined;
}
export interface HighestSeverityThreatDetails {
  Severity?: string | undefined;
  ThreatName?: string | undefined;
  Count?: number | undefined;
}
export interface ScannedItemCount {
  TotalGb?: number | undefined;
  Files?: number | undefined;
  Volumes?: number | undefined;
}
export interface ScanFilePath {
  FilePath?: string | undefined;
  VolumeArn?: string | undefined;
  Hash?: string | undefined;
  FileName?: string | undefined;
}
export interface ScanThreatName {
  Name?: string | undefined;
  Severity?: string | undefined;
  ItemCount?: number | undefined;
  FilePaths?: ScanFilePath[] | undefined;
}
export interface ThreatDetectedByName {
  ItemCount?: number | undefined;
  UniqueThreatNameCount?: number | undefined;
  Shortened?: boolean | undefined;
  ThreatNames?: ScanThreatName[] | undefined;
}
export interface ThreatsDetectedItemCount {
  Files?: number | undefined;
}
export interface ScanDetections {
  ScannedItemCount?: ScannedItemCount | undefined;
  ThreatsDetectedItemCount?: ThreatsDetectedItemCount | undefined;
  HighestSeverityThreatDetails?: HighestSeverityThreatDetails | undefined;
  ThreatDetectedByName?: ThreatDetectedByName | undefined;
}
export interface EbsVolumeScanDetails {
  ScanId?: string | undefined;
  ScanStartedAt?: Date | undefined;
  ScanCompletedAt?: Date | undefined;
  TriggerFindingId?: string | undefined;
  Sources?: string[] | undefined;
  ScanDetections?: ScanDetections | undefined;
  ScanType?: ScanType | undefined;
}
export interface HostPath {
  Path?: string | undefined;
}
export interface Volume {
  Name?: string | undefined;
  HostPath?: HostPath | undefined;
}
export interface EcsTaskDetails {
  Arn?: string | undefined;
  DefinitionArn?: string | undefined;
  Version?: string | undefined;
  TaskCreatedAt?: Date | undefined;
  StartedAt?: Date | undefined;
  StartedBy?: string | undefined;
  Tags?: Tag[] | undefined;
  Volumes?: Volume[] | undefined;
  Containers?: Container[] | undefined;
  Group?: string | undefined;
  LaunchType?: string | undefined;
}
export interface EcsClusterDetails {
  Name?: string | undefined;
  Arn?: string | undefined;
  Status?: string | undefined;
  ActiveServicesCount?: number | undefined;
  RegisteredContainerInstancesCount?: number | undefined;
  RunningTasksCount?: number | undefined;
  Tags?: Tag[] | undefined;
  TaskDetails?: EcsTaskDetails | undefined;
}
export interface EksClusterDetails {
  Name?: string | undefined;
  Arn?: string | undefined;
  VpcId?: string | undefined;
  Status?: string | undefined;
  Tags?: Tag[] | undefined;
  CreatedAt?: Date | undefined;
}
export interface EnableOrganizationAdminAccountRequest {
  AdminAccountId: string | undefined;
}
export interface EnableOrganizationAdminAccountResponse {}
export interface ThreatIntelligenceDetail {
  ThreatListName?: string | undefined;
  ThreatNames?: string[] | undefined;
  ThreatFileSha256?: string | undefined;
}
export interface Evidence {
  ThreatIntelligenceDetails?: ThreatIntelligenceDetail[] | undefined;
}
export declare const Feedback: {
  readonly NOT_USEFUL: "NOT_USEFUL";
  readonly USEFUL: "USEFUL";
};
export type Feedback = (typeof Feedback)[keyof typeof Feedback];
export interface NetworkInterface {
  Ipv6Addresses?: string[] | undefined;
  NetworkInterfaceId?: string | undefined;
  PrivateDnsName?: string | undefined;
  PrivateIpAddress?: string | undefined;
  PrivateIpAddresses?: PrivateIpAddressDetails[] | undefined;
  PublicDnsName?: string | undefined;
  PublicIp?: string | undefined;
  SecurityGroups?: SecurityGroup[] | undefined;
  SubnetId?: string | undefined;
  VpcId?: string | undefined;
}
export interface InstanceDetails {
  AvailabilityZone?: string | undefined;
  IamInstanceProfile?: IamInstanceProfile | undefined;
  ImageDescription?: string | undefined;
  ImageId?: string | undefined;
  InstanceId?: string | undefined;
  InstanceState?: string | undefined;
  InstanceType?: string | undefined;
  OutpostArn?: string | undefined;
  LaunchTime?: string | undefined;
  NetworkInterfaces?: NetworkInterface[] | undefined;
  Platform?: string | undefined;
  ProductCodes?: ProductCode[] | undefined;
  Tags?: Tag[] | undefined;
}
export interface ImpersonatedUser {
  Username?: string | undefined;
  Groups?: string[] | undefined;
}
export interface KubernetesUserDetails {
  Username?: string | undefined;
  Uid?: string | undefined;
  Groups?: string[] | undefined;
  SessionName?: string[] | undefined;
  ImpersonatedUser?: ImpersonatedUser | undefined;
}
export interface KubernetesWorkloadDetails {
  Name?: string | undefined;
  Type?: string | undefined;
  Uid?: string | undefined;
  Namespace?: string | undefined;
  HostNetwork?: boolean | undefined;
  Containers?: Container[] | undefined;
  Volumes?: Volume[] | undefined;
  ServiceAccountName?: string | undefined;
  HostIPC?: boolean | undefined;
  HostPID?: boolean | undefined;
}
export interface KubernetesDetails {
  KubernetesUserDetails?: KubernetesUserDetails | undefined;
  KubernetesWorkloadDetails?: KubernetesWorkloadDetails | undefined;
}
export interface VpcConfig {
  SubnetIds?: string[] | undefined;
  VpcId?: string | undefined;
  SecurityGroups?: SecurityGroup[] | undefined;
}
export interface LambdaDetails {
  FunctionArn?: string | undefined;
  FunctionName?: string | undefined;
  Description?: string | undefined;
  LastModifiedAt?: Date | undefined;
  RevisionId?: string | undefined;
  FunctionVersion?: string | undefined;
  Role?: string | undefined;
  VpcConfig?: VpcConfig | undefined;
  Tags?: Tag[] | undefined;
}
export interface RdsDbInstanceDetails {
  DbInstanceIdentifier?: string | undefined;
  Engine?: string | undefined;
  EngineVersion?: string | undefined;
  DbClusterIdentifier?: string | undefined;
  DbInstanceArn?: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface RdsDbUserDetails {
  User?: string | undefined;
  Application?: string | undefined;
  Database?: string | undefined;
  Ssl?: string | undefined;
  AuthMethod?: string | undefined;
}
export interface RdsLimitlessDbDetails {
  DbShardGroupIdentifier?: string | undefined;
  DbShardGroupResourceId?: string | undefined;
  DbShardGroupArn?: string | undefined;
  Engine?: string | undefined;
  EngineVersion?: string | undefined;
  DbClusterIdentifier?: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface Owner {
  Id?: string | undefined;
}
export interface PermissionConfiguration {
  BucketLevelPermissions?: BucketLevelPermissions | undefined;
  AccountLevelPermissions?: AccountLevelPermissions | undefined;
}
export interface PublicAccess {
  PermissionConfiguration?: PermissionConfiguration | undefined;
  EffectivePermission?: string | undefined;
}
export interface S3ObjectDetail {
  ObjectArn?: string | undefined;
  Key?: string | undefined;
  ETag?: string | undefined;
  Hash?: string | undefined;
  VersionId?: string | undefined;
}
export interface S3BucketDetail {
  Arn?: string | undefined;
  Name?: string | undefined;
  Type?: string | undefined;
  CreatedAt?: Date | undefined;
  Owner?: Owner | undefined;
  Tags?: Tag[] | undefined;
  DefaultServerSideEncryption?: DefaultServerSideEncryption | undefined;
  PublicAccess?: PublicAccess | undefined;
  S3ObjectDetails?: S3ObjectDetail[] | undefined;
}
export interface Resource {
  AccessKeyDetails?: AccessKeyDetails | undefined;
  S3BucketDetails?: S3BucketDetail[] | undefined;
  InstanceDetails?: InstanceDetails | undefined;
  EksClusterDetails?: EksClusterDetails | undefined;
  KubernetesDetails?: KubernetesDetails | undefined;
  ResourceType?: string | undefined;
  EbsVolumeDetails?: EbsVolumeDetails | undefined;
  EcsClusterDetails?: EcsClusterDetails | undefined;
  ContainerDetails?: Container | undefined;
  RdsDbInstanceDetails?: RdsDbInstanceDetails | undefined;
  RdsLimitlessDbDetails?: RdsLimitlessDbDetails | undefined;
  RdsDbUserDetails?: RdsDbUserDetails | undefined;
  LambdaDetails?: LambdaDetails | undefined;
}
export interface ServiceAdditionalInfo {
  Value?: string | undefined;
  Type?: string | undefined;
}
export interface ItemPath {
  NestedItemPath?: string | undefined;
  Hash?: string | undefined;
}
export interface Threat {
  Name?: string | undefined;
  Source?: string | undefined;
  ItemPaths?: ItemPath[] | undefined;
}
export interface MalwareScanDetails {
  Threats?: Threat[] | undefined;
}
export interface LineageObject {
  StartTime?: Date | undefined;
  NamespacePid?: number | undefined;
  UserId?: number | undefined;
  Name?: string | undefined;
  Pid?: number | undefined;
  Uuid?: string | undefined;
  ExecutablePath?: string | undefined;
  Euid?: number | undefined;
  ParentUuid?: string | undefined;
}
export interface ProcessDetails {
  Name?: string | undefined;
  ExecutablePath?: string | undefined;
  ExecutableSha256?: string | undefined;
  NamespacePid?: number | undefined;
  Pwd?: string | undefined;
  Pid?: number | undefined;
  StartTime?: Date | undefined;
  Uuid?: string | undefined;
  ParentUuid?: string | undefined;
  User?: string | undefined;
  UserId?: number | undefined;
  Euid?: number | undefined;
  Lineage?: LineageObject[] | undefined;
}
export interface RuntimeContext {
  ModifyingProcess?: ProcessDetails | undefined;
  ModifiedAt?: Date | undefined;
  ScriptPath?: string | undefined;
  LibraryPath?: string | undefined;
  LdPreloadValue?: string | undefined;
  SocketPath?: string | undefined;
  RuncBinaryPath?: string | undefined;
  ReleaseAgentPath?: string | undefined;
  MountSource?: string | undefined;
  MountTarget?: string | undefined;
  FileSystemType?: string | undefined;
  Flags?: string[] | undefined;
  ModuleName?: string | undefined;
  ModuleFilePath?: string | undefined;
  ModuleSha256?: string | undefined;
  ShellHistoryFilePath?: string | undefined;
  TargetProcess?: ProcessDetails | undefined;
  AddressFamily?: string | undefined;
  IanaProtocolNumber?: number | undefined;
  MemoryRegions?: string[] | undefined;
  ToolName?: string | undefined;
  ToolCategory?: string | undefined;
  ServiceName?: string | undefined;
  CommandLineExample?: string | undefined;
  ThreatFilePath?: string | undefined;
}
export interface RuntimeDetails {
  Process?: ProcessDetails | undefined;
  Context?: RuntimeContext | undefined;
}
export interface Service {
  Action?: Action | undefined;
  Evidence?: Evidence | undefined;
  Archived?: boolean | undefined;
  Count?: number | undefined;
  DetectorId?: string | undefined;
  EventFirstSeen?: string | undefined;
  EventLastSeen?: string | undefined;
  ResourceRole?: string | undefined;
  ServiceName?: string | undefined;
  UserFeedback?: string | undefined;
  AdditionalInfo?: ServiceAdditionalInfo | undefined;
  FeatureName?: string | undefined;
  EbsVolumeScanDetails?: EbsVolumeScanDetails | undefined;
  RuntimeDetails?: RuntimeDetails | undefined;
  Detection?: Detection | undefined;
  MalwareScanDetails?: MalwareScanDetails | undefined;
}
export interface Finding {
  AccountId: string | undefined;
  Arn: string | undefined;
  Confidence?: number | undefined;
  CreatedAt: string | undefined;
  Description?: string | undefined;
  Id: string | undefined;
  Partition?: string | undefined;
  Region: string | undefined;
  Resource: Resource | undefined;
  SchemaVersion: string | undefined;
  Service?: Service | undefined;
  Severity: number | undefined;
  Title?: string | undefined;
  Type: string | undefined;
  UpdatedAt: string | undefined;
  AssociatedAttackSequenceArn?: string | undefined;
}
export interface FindingTypeStatistics {
  FindingType?: string | undefined;
  LastGeneratedAt?: Date | undefined;
  TotalFindings?: number | undefined;
}
export interface ResourceStatistics {
  AccountId?: string | undefined;
  LastGeneratedAt?: Date | undefined;
  ResourceId?: string | undefined;
  ResourceType?: string | undefined;
  TotalFindings?: number | undefined;
}
export interface SeverityStatistics {
  LastGeneratedAt?: Date | undefined;
  Severity?: number | undefined;
  TotalFindings?: number | undefined;
}
export interface FindingStatistics {
  CountBySeverity?: Record<string, number> | undefined;
  GroupedByAccount?: AccountStatistics[] | undefined;
  GroupedByDate?: DateStatistics[] | undefined;
  GroupedByFindingType?: FindingTypeStatistics[] | undefined;
  GroupedByResource?: ResourceStatistics[] | undefined;
  GroupedBySeverity?: SeverityStatistics[] | undefined;
}
export declare const FindingStatisticType: {
  readonly COUNT_BY_SEVERITY: "COUNT_BY_SEVERITY";
};
export type FindingStatisticType =
  (typeof FindingStatisticType)[keyof typeof FindingStatisticType];
export interface GetAdministratorAccountRequest {
  DetectorId: string | undefined;
}
export interface GetAdministratorAccountResponse {
  Administrator: Administrator | undefined;
}
export interface GetCoverageStatisticsRequest {
  DetectorId: string | undefined;
  FilterCriteria?: CoverageFilterCriteria | undefined;
  StatisticsType: CoverageStatisticsType[] | undefined;
}
export interface GetCoverageStatisticsResponse {
  CoverageStatistics?: CoverageStatistics | undefined;
}
export interface GetDetectorRequest {
  DetectorId: string | undefined;
}
export interface GetDetectorResponse {
  CreatedAt?: string | undefined;
  FindingPublishingFrequency?: FindingPublishingFrequency | undefined;
  ServiceRole: string | undefined;
  Status: DetectorStatus | undefined;
  UpdatedAt?: string | undefined;
  DataSources?: DataSourceConfigurationsResult | undefined;
  Tags?: Record<string, string> | undefined;
  Features?: DetectorFeatureConfigurationResult[] | undefined;
}
export interface GetFilterRequest {
  DetectorId: string | undefined;
  FilterName: string | undefined;
}
export interface GetFilterResponse {
  Name: string | undefined;
  Description?: string | undefined;
  Action: FilterAction | undefined;
  Rank?: number | undefined;
  FindingCriteria: FindingCriteria | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface GetFindingsRequest {
  DetectorId: string | undefined;
  FindingIds: string[] | undefined;
  SortCriteria?: SortCriteria | undefined;
}
export interface GetFindingsResponse {
  Findings: Finding[] | undefined;
}
export declare const GroupByType: {
  readonly ACCOUNT: "ACCOUNT";
  readonly DATE: "DATE";
  readonly FINDING_TYPE: "FINDING_TYPE";
  readonly RESOURCE: "RESOURCE";
  readonly SEVERITY: "SEVERITY";
};
export type GroupByType = (typeof GroupByType)[keyof typeof GroupByType];
export interface GetFindingsStatisticsRequest {
  DetectorId: string | undefined;
  FindingStatisticTypes?: FindingStatisticType[] | undefined;
  FindingCriteria?: FindingCriteria | undefined;
  GroupBy?: GroupByType | undefined;
  OrderBy?: OrderBy | undefined;
  MaxResults?: number | undefined;
}
export interface GetFindingsStatisticsResponse {
  FindingStatistics: FindingStatistics | undefined;
  NextToken?: string | undefined;
}
export interface GetInvitationsCountRequest {}
export interface GetInvitationsCountResponse {
  InvitationsCount?: number | undefined;
}
export declare const AccountDetailFilterSensitiveLog: (
  obj: AccountDetail
) => any;
export declare const RemoteIpDetailsFilterSensitiveLog: (
  obj: RemoteIpDetails
) => any;
export declare const AwsApiCallActionFilterSensitiveLog: (
  obj: AwsApiCallAction
) => any;
export declare const KubernetesApiCallActionFilterSensitiveLog: (
  obj: KubernetesApiCallAction
) => any;
export declare const LocalIpDetailsFilterSensitiveLog: (
  obj: LocalIpDetails
) => any;
export declare const NetworkConnectionActionFilterSensitiveLog: (
  obj: NetworkConnectionAction
) => any;
export declare const PortProbeDetailFilterSensitiveLog: (
  obj: PortProbeDetail
) => any;
export declare const PortProbeActionFilterSensitiveLog: (
  obj: PortProbeAction
) => any;
export declare const RdsLoginAttemptActionFilterSensitiveLog: (
  obj: RdsLoginAttemptAction
) => any;
export declare const ActionFilterSensitiveLog: (obj: Action) => any;
export declare const CreateMembersRequestFilterSensitiveLog: (
  obj: CreateMembersRequest
) => any;
export declare const PrivateIpAddressDetailsFilterSensitiveLog: (
  obj: PrivateIpAddressDetails
) => any;
export declare const Ec2NetworkInterfaceFilterSensitiveLog: (
  obj: Ec2NetworkInterface
) => any;
export declare const ResourceDataFilterSensitiveLog: (obj: ResourceData) => any;
export declare const ResourceV2FilterSensitiveLog: (obj: ResourceV2) => any;
export declare const SequenceFilterSensitiveLog: (obj: Sequence) => any;
export declare const DetectionFilterSensitiveLog: (obj: Detection) => any;
export declare const NetworkInterfaceFilterSensitiveLog: (
  obj: NetworkInterface
) => any;
export declare const InstanceDetailsFilterSensitiveLog: (
  obj: InstanceDetails
) => any;
export declare const ResourceFilterSensitiveLog: (obj: Resource) => any;
export declare const ServiceFilterSensitiveLog: (obj: Service) => any;
export declare const FindingFilterSensitiveLog: (obj: Finding) => any;
export declare const GetFindingsResponseFilterSensitiveLog: (
  obj: GetFindingsResponse
) => any;
